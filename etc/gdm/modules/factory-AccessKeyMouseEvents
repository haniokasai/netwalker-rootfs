# This is the configuration file for the keymouselistener.so module.
# The confiuration syntax is as follows:
#
# For keyboard gestures:
#
# <modifier>[<modifier>...]key  #times duration timeout executable_path +args
#
# For executable_path give the full executable path path of the program or the
# DefaultPath is used.  For key, this can be one of the normal keys such as 'k'
# for the letter 'k', or 'F10' for the F10 key.  If you wish to use one of the
# 'modifier' keys you have to specify which one exactly, meaning usually
# appending _L or _R depending on if it's the left or right one.  The useful
# ones are: Shift_L, Shift_R, Control_L, Control_R, Meta_L, Meta_R, Alt_L, Alt_R.
# Do note that the modifier is optional.
#
# e.g.
#
# <Control>k  1 1000 10000  /usr/bin/gok --login --access-method=directselection
#
# Means press Contol-k 5 times, holding each keypress down for at least 1000ms
# (1s) each time and with no greater interval than 10000ms (10s) between each
# event in the sequence.  A duration value of 0 indicates that a keypress of
# any length is accepted.  The timeout value is only meaningful if the #times
# value is > 1.  Completing the above example sequence will invoke the gnome on
# screen keyboard program, gok.  Note that you cannot release the <Control> key
# while pressing otherwise the sequence will be lost.
#
# e.g.
# Shift_L  5 1000 10000  /usr/bin/gok --login --access-method=directselection
# Shift_R  5 1000 10000  /usr/bin/gok --login --access-method=directselection
#
# Will start gok if you press either shift key 5 times holding it down for more
# then 1 second each time.
#
# For mouse button gestures the format is the same except the mouse button number
# is specified instead of a key gesture:
#
# <Mouse#>  #times duration timeout  executable_path +args
#
# e.g.
#
# <Mouse2>  4 3000 6000  /usr/bin/orca -n -d main-window
#
# Note that mouse numbers are 1-based so <Mouse1> is the left mouse button,
# <Mouse3> is the right mouse button and <Mouse2> is the middle mouse button.
#
# It is possible to invoke multiple actions from a single gesture using the <Add>
# keyword. Actions specified with <Add> are invoked by the previous gesture
# defined in the file.  If the <Add> action is the first action defined in the
# file, then it is ignored.
#
# e.g.
#
# <Add>  /usr/bin/gnome-mag
#

# AT Program - GOK (GNOME On-screen Keyboard)
#
# Include a gesture for both right and left mouse button, for both right
# and left handed users.
#
# hold right or left mouse button 3 times for 3 seconds each time.
<Mouse1> 3 3000 10000 /usr/bin/gok --login --access-method=directselection
<Mouse3> 3 3000 10000 /usr/bin/gok --login --access-method=directselection

# Also support Xinput switches
#
<Switch1> 1 5000 0 /usr/bin/gok --login --access-method=automaticscanning --scan-action=switch1 --select-action=switch1
<Switch2> 3 50 3000 /usr/bin/gok --login --access-method=inversescanning --scan-action=switch1 --select-action=switch2
<Switch3> 3 1000 10000 /usr/bin/gok --login  --access-method=automaticscanning --scan-action=switch3 --select-action=switch3

# Although most GOK users would want to use a mouse/switch button to start GOK,
# also include a keybinding for starting GOK with direct selection mode.
#
<Control>k  1 1000 10000  /usr/bin/gok --login --access-method=directselection

# AT Program - ORCA
#
# press ctrl-s for 1 second to launch orca in speech mode
#
<Control>s  1 1000 10000  /usr/bin/orca -n -d main-window

# press ctrl-m for 1 second to launch orca in mag mode
#
<Control>m  1 1000 10000  /usr/bin/orca -n -d main-window -d speech -e magnifier

# press ctrl-o or ctrl-g for 1 second to launch orca in speech and mag mode
#
<Control>o  1 1000 10000  /usr/bin/orca -n -d main-window -e magnifier
<Control>g  1 1000 10000  /usr/bin/orca -n -d main-window -e magnifier

