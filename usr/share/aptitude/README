

aptitude user's manual


Version 0.4.11.11


Daniel Burrows

<dburrows@debian.org>

Copyright © 2004-2008 Daniel Burrows

This manual is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This manual is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this manual; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

--------------------------------------------------------------------------------
Table of Contents



  Introduction


        What is this aptitude thing, anyway?

        What is a package manager?

        What is the apt system?

        How can I get aptitude?


              Pre-built aptitude packages, or, ``What 99% of Users Should Do''

              Building aptitude from source code

              Tracking and participating in aptitude development



  1. Getting Started


        Using aptitude


              aptitude Basics

              Navigating the aptitude package list

              Finding packages by name

              Managing packages

              Updating the package list and installing packages


        Using aptitude from the command line


  2. aptitude Reference Guide


        The aptitude UI


              Using the menus

              Menu commands

              Working with multiple views

              Becoming root


        Managing packages


              Managing the package list

              Accessing package information

              Modifying package states

              Solving Dependency Problems

              Downloading, installing, and removing packages

              Understanding and managing package trust

              Managing automatically installed packages


        Search Patterns


              Searching for strings

              Shorthand for search terms

              Searches and Versions

              Explicit search targets

              Search Term Reference


        Customizing aptitude


              Customizing the Package List

              Customizing keybindings

              Customizing text colors and styles

              Customizing the display layout

              Configuration file reference

              Themes


        Playing Minesweeper


  3. aptitude FAQ

  4. Credits

  I. Command-Line Reference


        aptitude -- high-level interface to the package manager

        aptitude-create-state-bundle -- bundle the current aptitude state

        aptitude-run-state-bundle -- unpack an aptitude state bundle and invoke
        aptitude on it


List of Figures



  2.1. Commands available in the Actions menu

  2.2. Commands available in the Undo menu

  2.3. Commands available in the Package menu

  2.4. Commands available in the Resolver menu

  2.5. Commands available in the Search menu

  2.6. Commands available in the Options menu

  2.7. Commands available in the Views menu

  2.8. Commands available in the Help menu

  2.9. Values of the ``current state'' flag

  2.10. Values of the ``action'' flag

  2.11. Syntax of the ?for term

  2.12. Customizable styles in aptitude

List of Tables



  2.1. Quick guide to search terms

List of Examples



  2.1. Use of the ?= term.

  2.2. Use of the ?bind term

  2.3. Use of the ?for term


Introduction

Table of Contents



  What is this aptitude thing, anyway?

  What is a package manager?

  What is the apt system?

  How can I get aptitude?


        Pre-built aptitude packages, or, ``What 99% of Users Should Do''

        Building aptitude from source code

        Tracking and participating in aptitude development



  ``Master, does Emacs possess the Buddha nature?'' the novice asked.   

  ``I don't see why not,'' replied the master. ``It's got bloody well
  everything else.'' Several years later, the novice suddenly achieved
  enlightenment.

                                                           -- John Fouhy


Hello, and welcome to the aptitude user's manual! This introductory section
explains what aptitude is and how to get your hands on it; for information on
actually using it, please proceed to Chapter 1, Getting_Started.


What is this aptitude thing, anyway?

aptitude is a featureful package manager for Debian GNU/Linux systems, based on
the renowned apt package management infrastructure. aptitude provides the
functionality of dselect and apt-get, as well as many additional features not
found in either program.


What is a package manager?

A package manager keeps track of what software is installed on your computer,
and allows you to easily install new software, upgrade software to newer
versions, or remove software that you previously installed. As the name
suggests, package managers deal with packages: collections of files that are
bundled together and can be installed and removed as a group.

Often, a package is just a particular program. For instance, the instant
messaging client gaim is contained in the Debian package of the same name. On
the other hand, it is common for programs to consist of several interrelated
packages. For instance, the gimp image editor consists not only of the gimp
package, but also of the gimp-data package; in addition, several optional add-on
packages (containing esoteric data, documentation, and so on) are also
available. It is also possible for several small, related programs to be
contained in a single package: for instance, the fileutils package contains
several common Unix commands, such as ls, cp, etc.

Some packages require other packages in order to function. In Debian, packages
can depend upon, recommend, suggest, break, or conflict with other packages.


* If a package A depends upon another package B, then B is required for A to
  operate properly. For instance, the gimp package depends upon the gimp-data
  package in order to ensure that the GIMP graphics editor can access its
  critical data files.

* If a package A recommends another package B, then B provides important
  additional functionality to A that will be desired in most circumstances. For
  instance, the mozilla-browser package recommends the mozilla-psm package,
  which adds support for secure data transfers to the Mozilla Web browser. While
  mozilla-psm is not strictly required for Mozilla to function, most users will
  want Mozilla to support the secure transmission of confidential data (such as
  credit card numbers).

* If a package A suggests another package B, then package B provides
  functionality that may enhance A, but is not needed in most cases. For
  instance, the kmail package suggests the gnupg package, which contains
  encryption software that can be used by KMail.

* If a package A conflicts with another package B, then the two packages cannot
  be installed at the same time. For instance, fb-music-hi conflicts with fb-
  music-low because they provide alternate sets of music for the game Frozen
  Bubble.


The job of a package manager is to present an interface which assists the user
in managing the collection of packages installed on his or her system. aptitude
provides such an interface by building on the apt package management system.


What is the apt system?

Being able to install and remove packages is great, but the basic software for
doing this (known as dpkg) does exactly that and nothing more. This is fine if
you download one or two packages by hand, but quickly becomes cumbersome when
you are trying to manage a large number of packages. Furthermore, if your shiny
new package requires software you haven't yet installed, you have to download
the newly required software by hand. And if you later decide to remove the no-
longer-shiny package, these extra packages will linger on your system, consuming
hard drive space, unless you manually remove them.

Obviously, all of this manual labor is a tedious chore, and so most package
management systems come with software which takes care of some or all of it for
you. apt is a common base on which to build these programs: in addition to
aptitude, programs such as synaptic and apt-watch make use of apt.

apt works by keeping a list of the packages that can be downloaded from Debian
on your computer. This list is used to find packages that need to be upgraded
and to install new packages. apt can also solve many dependency problems
automatically: for instance, when you choose to install a package, it will find
any additional required packages and install those as well.

When working with a package manager based on apt, such as aptitude, you will
typically perform three basic tasks: you will update the list of packages that
are available by downloading new lists from the Debian servers, you will select
which packages should be installed, upgraded, or removed, and finally, you will
commit your selections by actually performing the installations, removals, etc.

apt-based package managers read the list of ``sources'' -- repositories of
Debian packages -- from the file /etc/apt/sources.list. The format and contents
of this file are beyond the scope of this document, but are described in the
manual page sources.list(5).


 How can I get aptitude?

In case you are reading this manual but aptitude is not yet installed on your
system, this section explains how to correct this unfortunate situation. Most
people should head straight for the section on binary packages.


Pre-built aptitude packages, or, ``What 99% of Users Should Do''

Pre-built, or ``binary'' packages are the easiest and most common way to install
aptitude. You should only attempt a source install if binary packages are not
available for some reason, or if you have unusual needs that are not met by
binary packages.

If you are using a Debian system, execute the following command as root: apt-get
install aptitude. If you are not using a Debian system, your system provider
might have created a pre-built package of aptitude; if you are not sure, you can
contact them for further suggestions.


Building aptitude from source code

You also can build aptitude from source; however, this is probably not a useful
exercise unless apt is already available on your system. If it is, you can
install aptitude from source with the following steps:


  1. Install the following pieces of software:


     * A C++ compiler, such as g++.

     * The development files for apt, typically available in a package with a
       name like libapt-pkg-dev.

     * The libsigc++-2.0 library, available in the package libsigc++-2.0-dev or
       from http://libsigc.sourceforge.net.

     * The cwidget library, available in the package libcwidget-dev or from
       http://cwidget.alioth.debian.org.

     * The gettext program, which should be included with your Linux
       distribution.

     * A make tool, such as GNU make.

     * Last but not least, download the most recent aptitude source code,
       available from http://packages.debian.org/unstable/admin/aptitude.
       (scroll to the bottom of the page and download the ``.orig.tar.gz'' file)



Once all the required components are available, open a terminal and execute the
command tar zxf aptitude-0.4.11.11.tar.gz to unpack the source code. Once the
source code is unpacked, type cd aptitude-0.4.11.11 && ./configure && make to
compile aptitude. If this succeeds, make sure you are the root user (by using
su, for instance), then type make install to install aptitude on your computer.
Once aptitude is successfully installed, typing aptitude at a command prompt
should start the program.


Tracking and participating in aptitude development


Getting the aptitude development source tree

If you want to test the latest bleeding-edge source code for aptitude, you can
download unreleased aptitude source code using Mercurial. Install Mercurial
(available from http://www.selenic.com/mercurial/) and execute the command hg
clone http://hg.debian.org/hg/aptitude/head aptitude to retrieve the most recent
source code.


 [Warning]  Warning

            The aptitude Mercurial repository is an active development tree; it
            will change as bugs are fixed and features are added, and there is
            absolutely no guarantee that it will even compile, let alone run
            properly! Bug reports are welcome, but be aware that you use
            development code entirely at your own risk![1]



Mailing list

The primary mailing list for aptitude development is <aptitude-
devel@lists.alioth.debian.org>. Archives of the list are located at http://
lists.alioth.debian.org/pipermail/aptitude-devel/. To subscribe, visit the Web
page http://lists.alioth.debian.org/mailman/listinfo/aptitude-devel.


Submitting patches

Ideally, patches should be submitted to the aptitude mailing list, <aptitude-
devel@lists.alioth.debian.org>. But if you prefer sending them by private email,
you may email them to <aptitude@packages.debian.org> or <dburrows@debian.org>. A
brief description of the motivation behind your patch, and an explanation of how
it works, are greatly appreciated.


Tracking changes to the aptitude source tree

The aptitude source tree is regularly updated with new features, bugfixes, and
new bugs. Once the source code is available on your computer (see the previous
section), you can cd into it and type hg pull && hg update to update it with any
changes made to the main repository.

To automatically receive notifications when changes are made to the aptitude
codebase, subscribe to the RSS feed available at http://hg.debian.org/hg/
aptitude/head?cl=tip;style=rss.


Building aptitude from the development tree

To build aptitude from the Mercurial repository, you must have the programs
autoconf and automake installed. Type sh ./autogen.sh && ./configure to generate
the files needed to compile aptitude, then execute make and make install.



--------------------------------------------------------------------------------
[1]Of course, all free software is used at your own risk, but the risk involved
in using an active development tree is much higher.


Chapter 1. Getting Started

Table of Contents



  Using aptitude


        aptitude Basics

        Navigating the aptitude package list

        Finding packages by name

        Managing packages

        Updating the package list and installing packages


  Using aptitude from the command line


  A journey of a thousand miles must begin with a single step.  

                                                      -- Lao Tsu


aptitude is a sizeable program with many features, and it can be a bit
overwhelming for new users to get acquainted with it. This chapter does not
exhaustively describe the features of aptitude (see Chapter 2, aptitude
Reference_Guide for that), but it does provide a walk-through of the basic and
most commonly used features of the program.


Using aptitude

This section describes how to use the visual interface of aptitude. For
information on using aptitude's command-line interface, see the section called
``Using aptitude from the command line''.


aptitude Basics

To run aptitude, open your favorite text terminal, and at the command line,
type:

foobar$ aptitude

Once the cache is loaded (this may take some time on slower machines), the main
aptitude screen should appear:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--- Installed Packages
--- Not Installed Packages
--- Obsolete and Locally Created Packages
--- Virtual Packages
--- Tasks






These packages are currently installed on your computer.








As you can see, the main screen of aptitude is divided into several regions. The
blue line at the top of the terminal is the menu bar, and the blue lines below
it are informational messages describing some important commands. The black
space that follows is the list of all available packages, in which some groups
of packages are listed. The currently selected group (``Installed Packages'') is
highlighted, and its description is shown in the lower black space.

As the top line of the screen suggests, you can access aptitude's menus by
pressing Control+t; you can also click the mouse on a menu title if your system
supports it. Pressing Control+t will open the Actions menu:

 Actions  Undo  Package  Search  Options  Views  Help
+-------------------------+  u: Update  g: Download/Install/Remove Pkgs
|Install/remove packages g|
|Update package list     u|
|Forget new packages     f|
|Clean package cache      |eated Packages
|Clean obsolete files     |
|Mark Upgradable         U|
|Play Minesweeper         |
|Become root              |
+-------------------------+
|Quit                    Q|
+-------------------------+
These packages are currently installed on your computer.









Perform all pending installs and removals

Use the arrow keys and Enter to select menu items (or, if your system supports
it, click on them with a mouse); to close the menu without selecting anything,
press Control+t again. The currently highlighted menu item is explained at the
bottom of the screen. If a menu item can be activated using a keyboard shortcut,
the shortcut is displayed in the menu: for instance, the command ``Update
package list'' can be activated by pressing u.

At any time, you can press ? to display an on-line reference to the available
keyboard shortcuts.


Navigating the aptitude package list

The list of packages is the primary interface to aptitude. When aptitude starts,
the list is organized into a number of groups, as can be seen in the following
screen shot:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--- Installed Packages
--- Not Installed Packages
--- Obsolete and Locally Created Packages
--- Virtual Packages
--- Tasks






These packages are currently installed on your computer.









 [Note]  Note

         Empty groups of packages are automatically hidden by aptitude, so you
         may see more or less groups than appear in this screen shot.


In the screen shot above, the first group (``Installed Packages'') is
highlighted to indicate that it is currently selected. You can move the
selection up and down with the arrow keys; note that the description below the
package list changes as you do so. To ``expand'' a group, press Enter while the
group is selected:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--\ Installed Packages
  --- admin - Administrative utilities (install software, manage users, etc)
  --- base - The Debian base system
  --- devel - Utilities and programs for software development
  --- doc - Documentation and specialized programs for viewing documentation
  --- editors - Text editors and word processors
  --- electronics - Programs for working with circuits and electronics
  --- games - Games, toys, and fun programs
  --- gnome - The GNOME Desktop System
  --- graphics - Utilities to create, view, and edit graphics files

These packages are currently installed on your computer.








As you can see, the ``Installed Packages'' group has been expanded to reveal its
contents: it contains a number of subgroups, loosely defined by what types of
software they contain. Expanding the ``admin'' section by selecting it and
pressing Enter, we see:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--\ Installed Packages
  --\ admin - Administrative utilities (install software, manage users, etc)
    --- main - The main Debian archive
  --- base - The Debian base system
  --- devel - Utilities and programs for software development
  --- doc - Documentation and specialized programs for viewing documentation
  --- editors - Text editors and word processors
  --- electronics - Programs for working with circuits and electronics
  --- games - Games, toys, and fun programs
  --- gnome - The GNOME Desktop System

Packages in the 'admin' section allow you to perform administrative tasks such
as installing software, managing users, configuring and monitoring your system,
examining network traffic, and so on.






The ``admin'' group contains a single subgroup, the ``main'' Debian archive.
Expanding this group reveals some packages!


 [Tip]  Tip

        To save time, you can use the [ key to expand all the subgroups of a
        group at once. Selecting ``Installed Packages'' and pressing [ would
        have immediately revealed the packages in the screenshot below.


 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--\ Installed Packages
  --\ admin - Administrative utilities (install software, manage users, etc)
    --\ main - The main Debian archive
i     acpid                                                1.0.3-19   1.0.3-19
i     alien                                                8.44       8.44
i     anacron                                              2.3-9      2.3-9
i     apt-show-versions                                    0.07       0.07
i A   apt-utils                                            0.5.25     0.5.25
i     apt-watch                                            0.3.2-2    0.3.2-2
i     aptitude                                             0.2.14.1-2 0.2.14.1-2

The Debian distribution consists of packages from the 'main' section. Every
package in 'main' is Free Software.

For more information about what Debian considers to be Free Software, see
http://www.debian.org/social_contract#guidelines




In addition to the arrow keys, you can move the selection through the package
list a page of information at a time using the Page Up and Page Down keys.


 [Tip]  Tip

        When there is more information in the lower half of the display than
        fits into the available space, the a and z keys can be used to scroll
        through it.



Finding packages by name

To quickly find a package whose name you know, press / to open a search dialog:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
i     frozen-bubble                                        1.0.0-5    1.0.0-5
i A   frozen-bubble-data                                   1.0.0-5    1.0.0-5
i     geekcode                                             1.7.3-1    1.7.3-1
i     gfpoken                                              0.25-3     0.25-3
i     ggz-gnome-client                                     0.0.7-2    0.0.7-2
i     ggz-gtk-client                                       0.0.7-1    0.0.7-1
i     ggz-gtk-game-data                                    0.0.7-2    0.0.7-2
i +--------------------------------------------------------------------------+
i |Search for:                                                               |
i |froz                                                                      |
Po|                             [ Ok ]                             [ Cancel ]|
Fr+--------------------------------------------------------------------------+
attempt to shoot bubbles into groups of the same color to cause them to pop. It
features 100 single-player levels, a two-player mode, music and striking
graphics.

This game is widely rumored to be responsible for delaying the Woody release.

URL: http://www.frozen-bubble.org/

As you can see in the above screen shot, a search for froz finds the frozen-
bubble package. Using aptitude's powerful search language, described in the
section called ``Search Patterns'', it is possible to find packages based on
many complex criteria.


 [Tip]  Tip

        You can search backwards in the package list by pressing \, and you can
        repeat the last search by pressing n after closing the search window.


Sometimes it is useful to hide all packages except those which meet some
particular criterion. To do this, press l:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--- Installed Packages
--- Not Installed Packages
--- Obsolete and Locally Created Packages
--- Virtual Packages
--- Tasks


  +--------------------------------------------------------------------------+
  |Enter the new package tree limit:                                         |
  |apti                                                                      |
  |                             [ Ok ]                             [ Cancel ]|
Th+--------------------------------------------------------------------------+ a








This dialog works exactly like the search dialog, except that instead of
highlighting the next package that matches what you typed into the dialog box,
it hides all packages which don't match. For instance, typing apti into this
dialog box and pressing Enter will hide all packages except those whose names
contain ``apti'':

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--\ Installed Packages
  --\ admin - Administrative utilities (install software, manage users, etc)
    --\ main - The main Debian archive
i     aptitude                                             0.2.14.1-2 0.2.14.1-2
i A   synaptic                                             0.51-1     0.51-1
  --\ x11 - The X window system and related software
    --\ main - The main Debian archive
i     xfree86-driver-synaptics                             0.13.3-1   0.13.3-1
--- Not Installed Packages
--- Virtual Packages

These packages are currently installed on your computer.









Managing packages

Now that you can move about the list of packages, it's time to start using
aptitude to install and remove packages. In this section you will learn how to
flag packages for installation, deletion, and upgrade.


 [Tip]  Tip

        You can only change your system's setup as the root user. If you want to
        experiment with aptitude, you can safely run it as any user other than
        root without damaging your system in any way. aptitude will tell you
        when you try to do something that only root can do, and if you want to
        continue, you must type root's password.


All changes to a package are performed by first highlighting it in the package
list, then pressing a key corresponding to the action which should be performed.
The basic action keys [2] are + to install or upgrade a package, - to remove a
package, and = to prevent a package from being automatically upgraded (this is
known as holding the package). These actions are not performed immediately;
aptitude will simply update the package list to show the change that has been
requested.

For instance, in the screen shot below, the kaffeine package was selected and +
was pushed. The package is now highlighted in green and the letter ``i'' has
appeared to the left of its name, to indicate that it will be installed; in
addition, an estimate of the amount of space that the package will use is
displayed.

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1                  Will use 2925kB of disk space  DL Size:
1375kB
  --\ kde - The KDE Desktop System
    --\ main - The main Debian archive
p     bibletime-i18n                                        <none>     1.4.1-1
p     education-desktop-kde                                 <none>     0.771
p     junior-kde                                            <none>     1.4
piA   kaffeine                                      +2843kB <none>     0.4.3-1
pi    kaffeine-mozilla                              +81.9kB <none>     0.4.3-1
p     karamba                                               <none>     0.17-5
p     kde-devel                                             <none>     4:3.1.2

p     kde-devel-extras                                      <none>     4:3.1.2
The K Desktop Environment (development files)
A metapackage containing dependencies for the core development suite of KDE
including kdesdk, qt3-designer, and all core KDE -dev packages.








 [Tip]  Tip

        At any time, you can use Undo ->; Undo (Control+u) to ``undo'' any
        change to one or more packages. This is very useful if an action has
        unforeseen consequences and you want to ``take it back''.


In addition to actions that affect individual packages, another important action
is available: typing U will attempt to upgrade any packages that can be
upgraded. You should use this command on a regular basis to keep your system up-
to-date.


Managing Broken Packages

Sometimes, changing a package's state will cause dependency relationships to
become unfulfilled; packages with unfulfilled dependencies are said to be
broken. aptitude will warn you when this happens, and explain why it occured.
For instance, here is what happens if I attempt to remove sound-juicer:

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.3.3       #Broken: 1   Will free 48.6MB of disk space
i A   nautilus                                             2.10.1-4   2.10.1-4
i     nautilus-cd-burner                                   2.10.2-1.1 2.10.2-1.1
i A   nautilus-data                                        2.10.1-4   2.10.1-4
i     netspeed                                             0.12.1-1   0.12.1-1
i A   oaf                                                  0.6.10-3   0.6.10-3
i     pybliographer                                        1.2.6.2-1  1.2.6.2-1
i     rhythmbox                                            0.8.8-13   0.8.8-13
i     shermans-aquarium                                    3.0.1-1    3.0.1-1
idA   sound-juicer                                 -1733kB 2.10.1-3   2.10.1-3
GNOME 2 CD Ripper
sound-juicer will be removed.


The following packages depend on sound-juicer and will be broken by its
removal:


  * gnome-desktop-environment depends on sound-juicer

[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

As you can see, aptitude displays three indicators that something has gone
wrong: first, the number of broken packages is displayed in the upper blue area;
second, the lower half of the display changes to describe broken packages that
are related to the currently highlighted package; third, a bar appears at the
bottom of the screen with a suggestion on how to solve the problem. To quickly
find broken packages in the package list, you can press b or search for ?broken.


 [Note]  Note

         The text [1(1)/...] indicates the progress of aptitude's dependency
         resolver. The first number is the solution that you have currently
         selected, and the second one is the number of solutions that aptitude
         has already generated. The presence of the text ``...'' indicates that
         there may be additional solutions beyond the ones generated; if
         aptitude knew for certain that it had generated the only possible
         solution, this indicator would read [1/1].


To see more information about how aptitude thinks you can solve this problem,
press e. A screen similar to the following will appear:

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Keep the following packages at their current version:
    gstreamer0.8-cdparanoia                           [0.8.10-1 (unstable, now)]
    sound-juicer                                                [2.10.1-2 (now)]
















[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

From here, you can see more solutions by pressing . or return to solutions that
you previously examined by pressing ,. To apply the current solution and return
to the package list, press !. For instance, pressing . while the above screen is
displayed results in the following solution being presented:

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Keep the following packages at their current version:
    sound-juicer                                      [2.10.1-3 (unstable, now)]
  --\ Downgrade the following packages:
    gstreamer0.8-cdparanoia          [0.8.11-1 unstable, now -> 0.8.8-3 testing]















[2(2)/...] Suggest 1 keep,1 downgrade
e: Examine  !: Apply  .: Next  ,: Previous

In addition to the basic solution navigation commands, you can press r to
``reject'' actions of which you disapprove. For instance, the first solution
will cancel the removal of sound-juicer -- the very action we were trying to
perform! By pressing r on the item corresponding to this action, we can tell
aptitude that it should not cancel the removal of sound-juicer in this way.

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Keep the following packages at their current version:
    gstreamer0.8-cdparanoia                           [0.8.11-1 (unstable, now)]
R   sound-juicer                                      [2.10.1-3 (unstable, now)]






GNOME 2 CD Ripper
gnome-desktop-environment depends upon sound-juicer
--\ The following actions will resolve this dependency:
  -> Remove gnome-desktop-environment [1:2.10.2.3 (unstable, testing, now)]
R -> Cancel the removal of sound-juicer
  -> Downgrade sound-juicer [2.10.1-3 (unstable, now) -> 0.6.1-2 (testing)]




[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

As you can see, the list item corresponding to keeping sound-juicer at its
current version has turned red and been marked with an ``R'', indicating that it
has been rejected. Solutions that you generate in the future (that is, any
solution that you have not yet viewed) will not include this action, although
solutions that were already generated and contain this action will be available.


 [Note]  Note

         In the above screen image, a description of sound-juicer is displayed
         in the middle of the screen; below it, you can see the dependency that
         caused sound-juicer to be kept at its current version, along with all
         the ways to resolve this dependency that aptitude knows about.


For instance, if this rejection is imposed immediately after attempting to
remove sound-juicer, pressing . retrieves the following solution, skipping the
solution that cancels the installation of sound-juicer and downgrades
gstreamer0.8-cdparanoia.

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Remove the following packages:
    gnome-desktop-environment              [1:2.10.2.3 (unstable, testing, now)]

















[2(2)/...] Suggest 1 removal
e: Examine  !: Apply  .: Next  ,: Previous

Rejections are only applied to newly generated solutions: that is, solutions
that are generated when you press . while viewing the last generated solution.
Previously generated solutions can still contain rejections. You can cancel a
rejection at any time by once again selecting the rejected action and pressing
r; this will permit solutions containing the action to be generated again,
including any solutions that were previously ``skipped''.

The opposite of rejecting an action is approving it. To approve an action, just
select it and press a; this forces the problem resolver to choose the action
whenever possible[3]. Approved actions will turn green and will be marked with
``A'', as in the following screenshot:

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Remove the following packages:
A   gnome-desktop-environment              [1:2.10.2.3 (unstable, testing, now)]

















[2(2)/...] Suggest 1 removal
e: Examine  !: Apply  .: Next  ,: Previous


 [Important]  Important

              If you do not resolve any broken dependencies, aptitude will
              automatically implement its current suggestion when you commit
              your selections by pressing g. However, it is hard to
              automatically solve dependency problems, and you may not be happy
              with the results, so it is generally better to look at what
              aptitude plans to do before committing your selections.



Updating the package list and installing packages

At this point, you know enough about aptitude to actually make modifications to
your system.

You should periodically update your list of available packages from the Debian
servers, to keep track of new packages and new versions of packages. To do this,
press u. At any time during the download, you can press q to abort it.

Once you have fresh lists of packages, you can choose the packages to upgrade,
install, or remove as described in the previous section. To review the actions
you have requested, press g once. When installing the kaffeine-mozilla package
(from the previous example), the following screen appears:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1                  Will use 2925kB of disk space  DL Size:
1375kB
--\ Packages being automatically installed to satisfy dependencies

piA kaffeine                                        +2843kB <none>     0.4.3-1
--\ Packages to be installed
pi  kaffeine-mozilla                                +81.9kB <none>     0.4.3-1







These packages are being installed because they are required by another package
you have chosen for installation.

If you select a package, an explanation of its current state will appear in this
space.




As you can see, aptitude automatically decided to install kaffeine for me
because kaffeine-mozilla requires it. At this point, I have the choice of either
continuing with the installation by pressing g, or aborting it by pressing q.


Using aptitude from the command line

In addition to its ``visual'' interface described in the previous section,
aptitude can be used to manage packages directly from the command-line in the
same way that you would use apt-get. This section covers the most common
aptitude command-line actions; for more information, see the aptitude command-
line reference.

In general, a command-line invocation of aptitude will look like this:

aptitude action [arguments...]

action tells aptitude what action it is to take; the remaining arguments are
used in an option-specific fashion. Typically they will consist of package names
and command-line switches[4].

The most important actions are:



  aptitude update

      This command updates the package lists, as if you had entered the visual
      interface and pressed u.


  aptitude safe-upgrade

      This command will upgrade as many packages as it can upgrade without
      removing existing packages.

      It is sometimes necessary to remove one package in order to upgrade
      another; this command is not able to upgrade packages in such situations.
      Use the full-upgrade command to upgrade those packages as well.


  aptitude full-upgrade

      Like safe-upgrade, this command will attempt to upgrade packages, but it
      is more aggressive about solving dependency problems: it will install and
      remove packages until all dependencies are satisfied. Because of the
      nature of this command, it is possible that it will do undesirable things,
      and so you should be careful when using it.


       [Note]  Note

               For historical reasons, this command was originally named dist-
               upgrade, and that name is still recognized by aptitude.



  aptitude [ install | remove | purge ] pkg1 [pkg2...]

      These commands install, remove, or purge[5] the specified packages.
      ``Installing'' a package which is already installed but can be upgraded
      will cause it to be upgraded.


  aptitude search pattern1 [pattern2...]

      This command searches for packages whose name contains any of the given
      patterns, printing the result to the terminal. In addition to just being a
      string of text, each pattern can be a search pattern as described in the
      section called ``Search Patterns''. [6] For instance, ``aptitude search
      gnome kde'' will list all packages whose name contains either ``gnome'' or
      ``kde''.


  aptitude show pkg1 [pkg2...]

      Prints information about each pkg to the terminal.


The commands that install, upgrade, and remove packages all accept the parameter
-s, which stands for ``simulate''. When -s is passed on the command line, the
program performs all the actions it would normally perform, but does not
actually download or install/remove any files.

aptitude will sometimes present a prompt like this:

The following NEW packages will be automatically installed:
  space-orbit-common
The following NEW packages will be installed:
  space-orbit space-orbit-common
0 packages upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 3200kB of archives. After unpacking 8413kB will be used.
Do you want to continue? [Y/n/?]

In addition to the obvious options of ``Yes'' and ``No'', a number of commands
are available which can be used to change the information displayed at the
prompt, or to specify further actions. For instance, typing s will display or
hide information about how much space each package will use:

Do you want to continue? [Y/n/?] s

Size changes will be shown.

The following NEW packages will be automatically installed:
  space-orbit-common <+8020kB>
The following NEW packages will be installed:
  space-orbit <+393kB> space-orbit-common <+8020kB>
0 packages upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 3200kB of archives. After unpacking 8413kB will be used.
Do you want to continue? [Y/n/?]

Similarly, typing d will display information about automatically installed or
removed packages:

The following NEW packages will be automatically installed:
  space-orbit-common (D: space-orbit)
The following NEW packages will be installed:
  space-orbit space-orbit-common
0 packages upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 3200kB of archives. After unpacking 8413kB will be used.

This shows that space-orbit-common is being installed because space-orbit
depends on it. You can see the entire list of possible entries by entering ? at
the prompt.

If your request violates dependencies in a way that cannot be trivially
resolved, aptitude will ask you what to do:

The following packages are BROKEN:
  libsdl1.2debian
The following packages will be REMOVED:
  libsdl1.2debian-alsa
.
.
.
The following actions will resolve these dependencies:

Install the following packages:
libsdl1.2debian-all [1.2.12-1 (unstable)]

Score is 41

Accept this solution? [Y/n/q/?]

Typing y (or simply pressing enter) will accept the proposed solution. Typing n
will display the ``next best'' solution:

Accept this solution? [Y/n/q/?] n
The following actions will resolve these dependencies:

Install the following packages:
libsdl1.2debian-esd [1.2.12-1 (unstable)]

Score is 19

Accept this solution? [Y/n/q/?]

As with the main command-line prompt, you can perform a number of additional
actions, including manually altering the states of packages, from the dependency
resolution prompt. Type ? to see a complete list.

Typing q will abort the automatic resolver and allow you to resolve the
dependencies manually:

Accept this solution? [Y/n/q/?] q
aptitude failed to find a solution to these dependencies.  You can solve them
yourself by hand or type 'n' to quit.
The following packages have unmet dependencies:
  libsdl1.2debian: Depends: libsdl1.2debian-alsa (= 1.2.12-1) but it is not
installable or
                            libsdl1.2debian-all (= 1.2.12-1) but it is not
installable or
                            libsdl1.2debian-esd (= 1.2.12-1) but it is not
installable or
                            libsdl1.2debian-arts (= 1.2.12-1) but it is not
installable or
                            libsdl1.2debian-oss (= 1.2.12-1) but it is not
installable or
                            libsdl1.2debian-nas (= 1.2.12-1) but it is not
installable or
                            libsdl1.2debian-pulseaudio (= 1.2.12-1) but it is
not installable
Resolve these dependencies by hand? [N/+/-/_/:/?]

You can use any of the package manipulation commands to resolve the broken
dependencies (type ? for a full list of the available commands). Type n or press
enter to quit aptitude:

Resolve these dependencies by hand? [N/+/-/_/:/?] n
Abort.

For complete documentation of the command-line features of aptitude, see
Command-Line Reference.



--------------------------------------------------------------------------------
[2] You can also change packages using the Package menu; see the section called
``The Package Menu'' for details.

[3] Approving an action is slightly different from requiring all solutions to
contain the action; what it means is that given a choice between an approved
action and a non-approved action, the resolver will always pick the approved
action. If there are several possible approved actions, all of them will be
candidates to be placed into the solution.

[4]A ``switch'' is a letter preceded by a hyphen: for instance, ``-a'', ``-v'',
etc.

[5]Purging a package removes the package, as well as all its configuration
files.

[6] In fact, the same is true of the commands that take packages as arguments,
such as install or show.


Chapter 2. aptitude Reference Guide

Table of Contents



  The aptitude UI


        Using the menus

        Menu commands

        Working with multiple views

        Becoming root


  Managing packages


        Managing the package list

        Accessing package information

        Modifying package states

        Solving Dependency Problems

        Downloading, installing, and removing packages

        Understanding and managing package trust

        Managing automatically installed packages


  Search Patterns


        Searching for strings

        Shorthand for search terms

        Searches and Versions

        Explicit search targets

        Search Term Reference


  Customizing aptitude


        Customizing the Package List

        Customizing keybindings

        Customizing text colors and styles

        Customizing the display layout

        Configuration file reference

        Themes


  Playing Minesweeper


  The White Rabbit put on his spectacles. 'Where shall I begin, please your     
  Majesty?' he asked.

  'Begin at the beginning,' the King said gravely, 'and go on till you come to
  the end: then stop.'

                                            -- Lewis Carrol, Alice in Wonderland


aptitude is a large program with many features, and it is sometimes difficult to
remember how to do something, or even to remember whether that something is even
possible. Indeed, many feature requests received by the author describe features
which are already present but are difficult to find.[7]

In an attempt to combat this obscurity, this reference guide describes every
feature and configuration parameter of aptitude. For a more gentle guide to the
important features of aptitude, see Chapter 1, Getting_Started.


 [Note]  Note

         aptitude's behavior and appearance can be configured in a number of
         ways. This manual describes how the program works with the default
         settings; descriptions of how various settings affect behavior are
         given in the section called ``Customizing aptitude''.



The aptitude UI

This section describes the parts of the user interface of aptitude that do not
deal with managing packages.


Using the menus

The menu bar at the top of the screen lists the most important commands in
aptitude. To activate the menu bar, press Control+t; you can then navigate it
using the arrow keys and select a menu item using Enter.

Some menu items also have ``hotkeys'': letters or numbers that can be used to
select the item while the menu is active. These hotkeys are displayed in a
brighter shade of white than the rest of the menu.

In addition, some menu items have ``shortcuts'': keystrokes that perform the
same action as the menu item while the menu is not active. These keystrokes are
listed on the right-hand side of the menu.

In the remainder of the manual, menu commands will be written like this: Menu
->; Item (key). This indicates that you should choose Item from the Menu
menu, and that key is the shortcut for this command.


Menu commands


The Actions Menu

Figure 2.1. Commands available in the Actions menu

 ______________________________________________________________________________
|Command                               |Description                            |
|______________________________________|_______________________________________|
|                                      |If an installation preview is not      |
|Actions ->; Install/remove        |visible, display one; otherwise,       |
|packages (g)                          |perform an install run as described in |
|                                      |the section called ``Downloading,      |
|                                      |installing, and removing packages''.   |
|______________________________________|_______________________________________|
|Actions ->; Update package list   |Bring the package list up-to-date.     |
|(u)                                   |                                       |
|______________________________________|_______________________________________|
|                                      |Flag all upgradable packages, except   |
|Actions ->; Mark Upgradable (U)   |those which are held or forbidden from |
|                                      |upgrading, for upgrade.                |
|______________________________________|_______________________________________|
|Actions ->; Forget new packages   |Discard all information about what     |
|(f)                                   |packages are ``new'' (empty the ``New  |
|                                      |Packages'' tree).                      |
|______________________________________|_______________________________________|
|                                      |Cancel all pending installations,      |
|                                      |removals, upgrades, and holds. This is |
|Actions ->; Cancel pending actions|equivalent to executing the Keep       |
|                                      |command on every package in the package|
|                                      |database.                              |
|______________________________________|_______________________________________|
|Actions ->; Clean package cache   |Delete all the compressed packages that|
|                                      |were downloaded by aptitude [a].       |
|______________________________________|_______________________________________|
|                                      |Delete any compressed packages that    |
|                                      |were downloaded by aptitude [a] and are|
|                                      |no longer available. These are presumed|
|Actions ->; Clean obsolete files  |to be packages which are obsolete, and |
|                                      |can be deleted to save disk space      |
|                                      |without requiring an otherwise         |
|                                      |unnecessary download.                  |
|______________________________________|_______________________________________|
|                                      |Play a game of Minesweeper, as         |
|Actions ->; Play Minesweeper      |described in the section called        |
|                                      |``Playing Minesweeper''.               |
|______________________________________|_______________________________________|
|Actions ->; Become root           |Continue working as the root user; see |
|                                      |the section called ``Becoming root''.  |
|______________________________________|_______________________________________|
|Actions ->; Quit (Q)              |Quit aptitude, saving any changes to   |
|                                      |package states.                        |
|______________________________________|_______________________________________|
|[a] Or any other apt utility.                                                 |
|______________________________________________________________________________|




The Undo Menu

Figure 2.2. Commands available in the Undo menu

 ______________________________________________________________________________
|Command                      |Description                                     |
|_____________________________|________________________________________________|
|                             |Cancel the effect of the last change to a       |
|Undo ->; Undo (Control+u)|package's state, up to the last time aptitude   |
|                             |was started, the package list was updated, or an|
|                             |install run was performed.                      |
|_____________________________|________________________________________________|




The Package Menu

Figure 2.3. Commands available in the Package menu

 ______________________________________________________________________________
|Command                              |Description                             |
|_____________________________________|________________________________________|
|Package ->; Install (+)          |Flag the currently selected package for |
|                                     |installation.                           |
|_____________________________________|________________________________________|
|Package ->; Remove (-)           |Flag the currently selected package for |
|                                     |removal.                                |
|_____________________________________|________________________________________|
|Package ->; Purge (_)            |Flag the currently selected package to  |
|                                     |be purged.                              |
|_____________________________________|________________________________________|
|                                     |Cancel any pending installation,        |
|Package ->; Keep (:)             |upgrade, or removal of the currently    |
|                                     |selected package, and remove any hold   |
|                                     |that was set on the package.            |
|_____________________________________|________________________________________|
|Package ->; Hold (=)             |Hold the currently selected package     |
|                                     |back.                                   |
|_____________________________________|________________________________________|
|                                     |Mark the currently selected package as  |
|                                     |an ``automatically installed'' package. |
|Package ->; Mark Auto (M)        |For more information on manually and    |
|                                     |automatically installed packages, see   |
|                                     |the section called ``Managing           |
|                                     |automatically installed packages''.     |
|_____________________________________|________________________________________|
|                                     |Mark the currently selected package as a|
|                                     |``manually installed'' package. For more|
|Package ->; Mark Manual (m)      |information on manually and             |
|                                     |automatically installed packages, see   |
|                                     |the section called ``Managing           |
|                                     |automatically installed packages''.     |
|_____________________________________|________________________________________|
|                                     |If a package that can be upgraded is    |
|                                     |selected, forbid it from being upgraded |
|Package ->; Forbid Version (F)   |to the currently available version. If a|
|                                     |version of a package is selected, forbid|
|                                     |the package from being upgraded to that |
|                                     |version.                                |
|_____________________________________|________________________________________|
|                                     |Display a screen containing information |
|                                     |about the currently selected package,   |
|Package ->; Information (enter)  |such as the packages it depends upon,   |
|                                     |the packages which depend upon it, and  |
|                                     |its available versions.                 |
|_____________________________________|________________________________________|
|                                     |When browsing the package list, cycles  |
|                                     |through the information that can be     |
|                                     |displayed in the information area (the  |
|                                     |lower half of the display). The         |
|Package ->; Cycle Information (i)|information area can display the long   |
|                                     |description of the selected package (its|
|                                     |default behavior), a summary of the     |
|                                     |dependencies related to the package, or |
|                                     |an analysis of which other packages     |
|                                     |require or suggest the selected package.|
|_____________________________________|________________________________________|
|                                     |Display the currently selected package's|
|package ->; Changelog (C)        |Debian changelog. To see the changelog  |
|                                     |of a particular version, select that    |
|                                     |version and execute this command.       |
|_____________________________________|________________________________________|




The Resolver Menu

Figure 2.4. Commands available in the Resolver menu

 ______________________________________________________________________________
|Command                               |Description                            |
|______________________________________|_______________________________________|
|                                      |Display a detailed description of the  |
|Resolver ->; Examine Solution (e) |problem resolver's current suggestion  |
|                                      |(see the section called ``Solving      |
|                                      |Dependency Problems'').                |
|______________________________________|_______________________________________|
|Resolver ->; Apply Solution (!)   |Carry out the actions that the problem |
|                                      |resolver is currently suggesting.      |
|______________________________________|_______________________________________|
|Resolver ->; Next Solution (.)    |Select the problem resolver's next     |
|                                      |suggestion.                            |
|______________________________________|_______________________________________|
|Resolver ->; Previous Solution (,)|Select the problem resolver's previous |
|                                      |suggestion.                            |
|______________________________________|_______________________________________|
|Resolver ->; First Solution (<)   |Select the problem resolver's first    |
|                                      |suggestion.                            |
|______________________________________|_______________________________________|
|                                      |Select the problem resolver's most     |
|Resolver ->; Last Solution (>)    |recently generated solution (see the   |
|                                      |section called ``Solving Dependency    |
|                                      |Problems'').                           |
|______________________________________|_______________________________________|
|                                      |When examining a solution, toggle      |
|                                      |whether the currently selected action  |
|                                      |is rejected and move to the next action|
|Resolver ->; Toggle Rejected (r)  |(see the section called ``Solving      |
|                                      |Dependency Problems''). If the action  |
|                                      |is currently approved, its approval    |
|                                      |will be cancelled.                     |
|______________________________________|_______________________________________|
|                                      |When examining a solution, toggle      |
|                                      |whether the currently selected action  |
|                                      |is approved and move to the next action|
|Resolver ->; Toggle Approved (a)  |(see the section called ``Solving      |
|                                      |Dependency Problems''). If the action  |
|                                      |is currently rejected, its rejection   |
|                                      |will be cancelled.                     |
|______________________________________|_______________________________________|
|                                      |When examining a solution, view        |
|                                      |detailed information about the package |
|Resolver ->; View Target (Enter)  |which is affected by the currently     |
|                                      |selected action (see the section called|
|                                      |``Solving Dependency Problems'').      |
|______________________________________|_______________________________________|
|                                      |Reject (as if with Resolver ->;    |
|                                      |Toggle Rejected (r)) all actions that  |
|                                      |would break a hold on a package or     |
|                                      |install a forbidden version. These     |
|Resolver ->; Reject Breaking Holds|actions are rejected by default unless |
|                                      |Aptitude::ProblemResolver::Allow-Break-|
|                                      |Holds is set to true, but this menu    |
|                                      |item allows you to reject them manually|
|                                      |at any time.                           |
|______________________________________|_______________________________________|




The Search Menu

Figure 2.5. Commands available in the Search menu

 ____________________________________________________________________________
|Command                             |Description                            |
|____________________________________|_______________________________________|
|                                    |Find the next package in the package   |
|Search ->; Find (/)             |list that matches a search pattern (see|
|                                    |the section called ``Search            |
|                                    |Patterns'').                           |
|____________________________________|_______________________________________|
|                                    |Find the previous package in the       |
|Search ->; Find Backwards (\)   |package list that matches a search     |
|                                    |pattern (see the section called        |
|                                    |``Search Patterns'').                  |
|____________________________________|_______________________________________|
|Search ->; Find Again (n)       |Repeat the last Find command.          |
|____________________________________|_______________________________________|
|                                    |Repeat the last Find command, but in   |
|Search ->; Find Again Backwards |the opposite direction. If the last    |
|(N)                                 |Find command was Find Backwards, this  |
|                                    |will perform a forwards search, and    |
|                                    |vice versa.                            |
|____________________________________|_______________________________________|
|                                    |Filter the current package list by     |
|Search ->; Limit Display (l)    |removing any packages which do not     |
|                                    |match a search pattern (see the section|
|                                    |called ``Search Patterns'').           |
|____________________________________|_______________________________________|
|Search ->; Un-Limit Display     |Un-filter the current package list (all|
|                                    |packages will be shown).               |
|____________________________________|_______________________________________|
|Search ->; Find Broken (b)      |Find the next broken package. This is  |
|                                    |equivalent to searching for ?broken.   |
|____________________________________|_______________________________________|




The Options Menu

Figure 2.6. Commands available in the Options menu

 ______________________________________________________________________________
|Command                       |Description                                    |
|______________________________|_______________________________________________|
|                              |Open a new top-level view in which you can     |
|                              |modify aptitude's settings. Configuration      |
|                              |options are displayed in a tree similar to the |
|Options ->; Preferences   |tree of packages; to enable or disable an      |
|                              |option, select it and press Space or Enter.    |
|                              |Configuration options are saved to ~/.aptitude/|
|                              |config immediately upon being selected.        |
|______________________________|_______________________________________________|
|Options ->; Revert options|Reset all options to their default values.     |
|______________________________|_______________________________________________|




The Views Menu


 [Note]  Note

         For an overview of how views work, see the section called ``Working
         with multiple views''.


Figure 2.7. Commands available in the Views menu

 ______________________________________________________________________________
|Command                              |Description                             |
|_____________________________________|________________________________________|
|Views ->; Next (F6)              |Change to the next active view.         |
|_____________________________________|________________________________________|
|Views ->; Prev (F7)              |Change to the previous active view.     |
|_____________________________________|________________________________________|
|Views ->; Close (q)              |Close the current view.                 |
|_____________________________________|________________________________________|
|Views ->; New Package View       |Create a new view of the package list.  |
|_____________________________________|________________________________________|
|                                     |Create a view that displays packages    |
|Views ->; Audit Recommendations  |which are not installed, and which a    |
|                                     |package installed on your system        |
|                                     |Recommends.                             |
|_____________________________________|________________________________________|
|Views ->; New Flat Package List  |Create a new view of the package list in|
|                                     |which packages are not categorized.     |
|_____________________________________|________________________________________|
|                                     |Create a new view of the package list in|
|Views ->; New Debtags Browser    |which packages are categorized according|
|                                     |to their debtags entries.               |
|_____________________________________|________________________________________|
|Views ->; New Categorical Browser|View the package list, arranged by      |
|                                     |category.                               |
|_____________________________________|________________________________________|
|                                     |A number of additional menu items       |
|                                     |appear; these correspond to the         |
|Additional items                     |currently active views. To switch       |
|                                     |directly to a view, select it from the  |
|                                     |menu.                                   |
|_____________________________________|________________________________________|




The Help Menu

Figure 2.8. Commands available in the Help menu

 ______________________________________________________________________________
|Command                   |Description                                        |
|__________________________|___________________________________________________|
|Help ->; About        |Display some copyright information.                |
|__________________________|___________________________________________________|
|Help ->; Help (?)     |Display the on-line help page.                     |
|__________________________|___________________________________________________|
|Help ->; User's Manual|Display the User's Manual (this document).         |
|__________________________|___________________________________________________|
|Help ->; FAQ          |Display the aptitude FAQ.                          |
|__________________________|___________________________________________________|
|Help ->; ChangeLog    |Display a history of the major changes made to     |
|                          |aptitude.                                          |
|__________________________|___________________________________________________|
|Help ->; License      |Display the terms under which you may copy, modify,|
|                          |and distribute aptitude.                           |
|__________________________|___________________________________________________|




Working with multiple views

aptitude allows you to work with several ``views'' at once. A ``view''
(sometimes called a ``screen'') is simply something that can appear in the area
of the screen below the menu bar. The most common view is the package list, but
download views are also common.

When several views are open at once, a bar listing all the active views will
appear at the top of the screen. For instance, if I examine apt by pressing
Enter, then examine libc6, the screen will look something like this:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
         Packages                  apt info                  libc6 info
aptitude 0.3.1
i A  --\ libc6                                             2.3.2.ds1- 2.3.2.ds1-
  Description: GNU C Library: Shared libraries and Timezone data
    Contains the standard libraries that are used by nearly all programs on the
    system. This package includes shared versions of the standard C library and
    the standard math library, as well as many others. Timezone data is also
    included.
  Priority: required
  Section: base
  Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
  Compressed size: 4901k
  Uncompressed size: 15.9M
  Source Package: glibc
  --\ Depends
    --- libdb1-compat
  --\ Suggests
    --- locales
    --- glibc-doc
  --\ Conflicts
GNU C Library: Shared libraries and Timezone data

You can close the current view using Views ->; Close (q). To switch to the
next or previous view, use Views ->; Next (F6) and Views ->; Prev (F7),
or click on the view's name at the top of the screen; you can also find a list
of all active views in the Views menu.

As shown above, some commands (for instance, viewing information about a
package) will create new views automatically; you can also explicitly create a
new view using Views ->; New Package View or Views ->; New Categorical
Browser.


Becoming root

Some actions, such as updating the package lists, can only be performed as root.
If you are not root and you try to update the package lists, aptitude will ask
if you want to become root:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
--- Installed Packages
--- Not Installed Packages
--- Obsolete and Locally Created Packages
--- Virtual Packages
--- Tasks

  +-------------------------------------------------------------------------+
  |Updating the package lists requires administrative privileges, which     |
  |you currently do not have.  Would you like to change to the root account?|
  |                                                                         |
  |         [ Become root ]                  [ Don't become root ]          |
Th+-------------------------------------------------------------------------+








If you select ``Become root'', aptitude will prompt you for root's password;
when you have correctly entered it, aptitude will perform the action that
required root privileges. You will still be root after the action completes.

You can switch to the root account at any time using the command Actions ->;
Become root. Any changes you have made to package states will be preserved (but
will not be saved until you quit aptitude).


Managing packages

This section describes how to manipulate the list of packages, how to install
new packages on your system, and how to remove old packages.


Managing the package list

To keep the list of packages up-to-date, it is recommended that you periodically
update it. You can do this using the Actions ->; Update package list (u)
command.


Accessing package information

Information about packages is presented in several locations in aptitude: the
package list gives a quick overview of the state of each package, and additional
views providing detailed information about a package are also available.


The Package List

The package list displays an ``at-a-glance'' synopsis of a package's state. For
instance, the package webmin might have the following synopsis:

piAU  webmin                                        +5837kB <none>     1.160-2

The four characters on the left-hand side of the synopsis show that the package
is not installed (``p''), that it is going to be installed (``i''), that it was
automatically chosen to be installed (``A''), and that it is untrusted (``U'').
On the right-hand side of the synopsis, the current version and the most recent
available version are displayed, along with an indication of how much space will
be used by the upgrade.


 [Tip]  Tip

        You can customize how package synopses are displayed; see the section
        called ``Customizing how packages are displayed'' for details.


The four status flags on the left-hand side of the screen give the basic
information about a package's state. The first character is the package's
current state. The second character is the action which will be taken on the
package. The third character indicates whether the package was automatically
installed (see the section called ``Managing automatically installed
packages''), and the fourth character indicates whether the package is trusted
(see the section called ``Understanding and managing package trust'').

The possible values of the ``current state'' flag are given in Figure 2.9,
``Values of the ``current state'' flag'' and the possible values of the
``action'' flag are given in Figure 2.10, ``Values of the ``action'' flag''.

Figure 2.9. Values of the ``current state'' flag


i - the package is installed and all its dependencies are satisfied.

c - the package was removed, but its configuration files are still present.

p - the package and all its configuration files were removed, or the package was
    never installed.

v - the package is virtual.

B - the package has broken dependencies.

u - the package has been unpacked but not configured.

C - half-configured: the package's configuration was interrupted.

H - half-installed: the package's installation was interrupted.




Figure 2.10. Values of the ``action'' flag


i - the package will be installed.

u - the package will be upgraded.

d - the package will be deleted: it will be removed, but its configuration files
    will remain on the system.

p - the package will be purged: it and its configuration files will be removed.

h - the package will be held back: it will be kept at its current version, even
    if a newer version becomes available, until the hold is cancelled.

F - An upgrade of the package has been forbidden.

r - the package will be reinstalled.

    the package is ``broken'': some of its dependencies will not be satisfied.
B - aptitude will not allow you to install, remove, or upgrade anything while
    you have broken packages.




In addition, aptitude will use colors to indicate package state if your terminal
supports it. State distinctions are mainly displayed using the background color:



  Black
      The package cannot be upgraded (or is not going to be installed), and it
      has no dependency problems. If the package is installed, its name will be
      highlighted.


  Green
      The package is going to be installed.


  Blue
      The package is currently installed, and it will be upgraded.


  Magenta
      The package is currently installed, but it will be removed.


  White
      The package is currently installed, and it is ``held'' at its current
      version: automatic upgrades will ignore it.


  Red
      This package is broken: some of its dependencies will not be satisfied.


Finally, the lower half of the screen displays the long description. aptitude
will attempt to detect whether the package is involved in a dependency problem;
if so, information regarding the dependency problem will be displayed here. To
cycle between dependency information and the package description, press i.


Detailed package information

Pressing Enter while a package is highlighted will display the package
information screen:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.2.14.1
i A --\ apt                                                0.5.25     0.5.25
  Description: Advanced front-end for dpkg
    This is Debian's next generation front-end for the dpkg package manager. It
    provides the apt-get utility and APT dselect method that provides a simpler,
    safer way to install and upgrade packages.

    APT features complete installation ordering, multiple source capability and
    several other unique features, see the Users Guide in apt-doc.
  Essential: yes
  Priority: important
  Section: base
  Maintainer: APT Development Team <deity@lists.debian.org>
  Compressed size: 970k
  Uncompressed size: 2961k
  Source Package: apt
  --\ Depends
    --- libc6 (>= 2.3.2.ds1-4)
    --- libgcc1 (>= 1:3.3.3-1)
    --- libstdc++5 (>= 1:3.3.3-1)
  --\ Suggests
    --- aptitude | synaptic | gnome-apt | wajig
    --- dpkg-dev
    --\ apt-doc (UNSATISFIED)
p     0.6.25
p     0.5.25
  --\ Replaces
    --- libapt-pkg-doc (< 0.3.7)
    --- libapt-pkg-dev (< 0.3.7)
  --- Package names provided by apt
  --- Packages which depend on apt
  --\ Versions
p A 0.6.25
i A 0.5.25

This display can be navigated in a manner similar to the package list: for
instance, in the screenshot above, I expanded the dependency on apt-doc,
revealing the available versions of apt-doc which will fulfill the dependency.
These versions can be manipulated in the same way that packages can: for
instance, to install version 0.5.25 of apt-doc, you would highlight it and press
+.


 [Tip]  Tip

        To quickly satisfy a dependency, select the dependency and press +;
        aptitude will attempt to automatically satisfy it.


In addition to the dependencies of a package, you can view the package names
that it Provides, the packages which depend upon it, and the available versions
of the package (including any other packages that Provide it).

As usual, you can dismiss this screen and return to the main view by pressing q.
For convenience, a few other information screens (which only display some
commonly-used information, hiding the rest) are available: press v to view the
versions of a package, d to view the dependencies of a package, and r to view
the ``reverse dependencies'' of a package (packages which depend upon it).


Modifying package states

The following commands are available to modify the states of packages. Commands
take effect the next time you perform an install run; until you do, all of these
commands can be reversed using Undo ->; Undo (Control+u).

To apply a command to a package, simply select the package in a package list and
issue the command. These commands can also be applied to groups of packages by
selecting the group header (for instance, ``Upgradable Packages'') and issuing
the command.

 ______________________________________________________________________________
|Command                               |Description                            |
|______________________________________|_______________________________________|
|                                      |Flag the current package for           |
|                                      |installation.                          |
|                                      |                                       |
|                                      |If the package is not installed, it    |
|Install: Package ->; Install (+)  |will be installed. If it is already    |
|                                      |installed, it will be upgraded if      |
|                                      |possible and any sticky upgrade        |
|                                      |prevention that is in effect (eg, Hold)|
|                                      |will be cancelled.                     |
|______________________________________|_______________________________________|
|                                      |Flag the currently selected package for|
|                                      |removal.                               |
|Remove: Package ->; Remove (-)    |                                       |
|                                      |If the package is installed, it will be|
|                                      |removed.                               |
|______________________________________|_______________________________________|
|                                      |Flag the current package to be purged. |
|                                      |                                       |
|                                      |If the package is installed, it will be|
|Purge: Package ->; Purge (_)      |removed. Futhermore, even if it is     |
|                                      |removed, any remaining files (such as  |
|                                      |configuration files) related to the    |
|                                      |package will be removed from the       |
|                                      |system.                                |
|______________________________________|_______________________________________|
|                                      |Flag the current package to be kept at |
|                                      |its current version.                   |
|                                      |                                       |
|Keep: Package ->; Keep (:)        |Any action that was to be performed on |
|                                      |the package -- installation, removal,  |
|                                      |or upgrade -- is cancelled, and any    |
|                                      |persistent hold that was set on the    |
|                                      |package is removed.                    |
|______________________________________|_______________________________________|
|                                      |Set a persistent hold on the package.  |
|                                      |                                       |
|                                      |As with Keep, any action that was to be|
|Hold: Package ->; Hold (=)        |performed on the package is cancelled. |
|                                      |In addition, the package will not be   |
|                                      |automatically upgraded [a] until the   |
|                                      |hold is removed. You may cancel a hold |
|                                      |by issuing the Install command.        |
|______________________________________|_______________________________________|
|                                      |The package will not be automatically  |
|                                      |upgraded[a] to the version it would    |
|                                      |currently be upgraded to. If it was    |
|                                      |going to be upgraded, the upgrade will |
|                                      |be cancelled.                          |
|                                      |                                       |
|                                      |If you issue this command on a         |
|Package ->; Forbid Version (F)    |particular version of a package, the   |
|                                      |package will not be upgraded to the    |
|                                      |selected version. Note that only one   |
|                                      |version can be forbidden at once.      |
|                                      |                                       |
|                                      |This functionality is largely provided |
|                                      |as a convenience for users of the      |
|                                      |``unstable'' distribution, so they can |
|                                      |avoid known-bad versions of packages.  |
|______________________________________|_______________________________________|
|                                      |Reinstalls the package.                |
|                                      |                                       |
|                                      |Note that the reinstallation will not  |
|                                      |be saved when you quit aptitude or     |
|Reinstall: press L                    |perform an install run for technical   |
|                                      |reasons. (essentially, the underlying  |
|                                      |software layers (dpkg and apt) do not  |
|                                      |provide any way to find out whether a  |
|                                      |reinstallation was successful or not). |
|______________________________________|_______________________________________|
|                                      |Sets whether the package is treated as |
|                                      |having been automatically installed;   |
|Package ->; Mark Auto (M), Package|automatically installed packages will  |
|->; Mark Manual (m)               |be removed when no other package       |
|                                      |requires them. For more information,   |
|                                      |see the section called ``Managing      |
|                                      |automatically installed packages''.    |
|______________________________________|_______________________________________|
|[a] That is, it will be unaffected by Actions ->; Mark Upgradable (U) or  |
|the full-upgrade or safe-upgrade command-line actions.                        |
|______________________________________________________________________________|

In addition to these commands that affect the selected package, there are two
commands that affect large numbers of packages at once regardless of what is
selected. Actions ->; Forget new packages (f) clears the ``new'' status of
all packages in the package list, and Actions ->; Mark Upgradable (U) flags
every package which can be upgraded for upgrade, except for packages that are
held back or would be upgraded to a forbidden version.


 [Note]  Note

         All changes to package states are saved when you quit aptitude, update
         the package list, or perform an install run. If you do not wish to save
         your changes, you can always abort aptitude by pressing Ctrl-C.



Solving Dependency Problems

If a dependency problem arises, aptitude can assist you in resolving it. As soon
as a problem occurs, a red bar will appear at the bottom of the screen with a
summary of aptitude's suggestion about how to fix it. For instance, in the
following screenshot, aptitude is indicating that it can resolve the situation
by keeping two packages at their current versions.

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.3.3       #Broken: 1   Will free 48.6MB of disk space
i A   nautilus                                             2.10.1-4   2.10.1-4
i     nautilus-cd-burner                                   2.10.2-1.1 2.10.2-1.1
i A   nautilus-data                                        2.10.1-4   2.10.1-4
i     netspeed                                             0.12.1-1   0.12.1-1
i A   oaf                                                  0.6.10-3   0.6.10-3
i     pybliographer                                        1.2.6.2-1  1.2.6.2-1
i     rhythmbox                                            0.8.8-13   0.8.8-13
i     shermans-aquarium                                    3.0.1-1    3.0.1-1
idA   sound-juicer                                 -1733kB 2.10.1-3   2.10.1-3
GNOME 2 CD Ripper
sound-juicer will be removed.


The following packages depend on sound-juicer and will be broken by its
removal:


  * gnome-desktop-environment depends on sound-juicer

[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

As indicated at the bottom of the screen, you can view additional solutions by
pressing . and ,, apply the current solution by pressing !, and examine the
solution in more detail by pressing e. When you examine the current solution, a
screen similar to the following will appear:

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Keep the following packages at their current version:
    gstreamer0.8-cdparanoia                           [0.8.10-1 (unstable, now)]
    sound-juicer                                                [2.10.1-2 (now)]
















[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

You can access information about the package affected by an action by simply
pressing Enter while the package is highlighted. For a more detailed explanation
of why aptitude made a particular decision, you can highlight the element in the
list. When you do so, the lower half of the screen will display the dependency
which was resolved by aptitude's choice, along with every way in which this
dependency could have been resolved.

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Keep the following packages at their current version:
    gstreamer0.8-cdparanoia                           [0.8.11-1 (unstable, now)]
    sound-juicer                                      [2.10.1-3 (unstable, now)]






cdparanoia plugin for GStreamer
sound-juicer depends upon gstreamer0.8-cdparanoia
--\ The following actions will resolve this dependency:
  -> Downgrade sound-juicer [2.10.1-3 (unstable, now) -> 0.6.1-2 (testing)]
  -> Remove sound-juicer [2.10.1-3 (unstable, now)]
  -> Cancel the removal of gstreamer0.8-cdparanoia
  -> Downgrade gstreamer0.8-cdparanoia [0.8.11-1 (unstable, now) -> 0.8.8-3 (tes



[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

You can guide the dependency resolver to a solution of which you approve by
approving or rejecting the individual actions of a solution. If you approve an
action, the resolver will choose it whenever possible, ignoring alternatives
(when there are several approved alternatives, all of them will be chosen). On
the other hand, if you reject an action, the resolver will never choose that
action.

To reject an action, highlight it and press r; the rejection can be cancelled by
pressing r again. Similarly, select an action and press a to approve it. You can
undo either action by using Undo ->; Undo (Control+u) while the resolver
screen is active. If you cancel a rejection or an approval, any solutions that
were ignored will be available the next time that you generate a new solution.


 [Note]  Note

         By default, the resolver rejects actions that change the state of held
         packages, or that install forbidden versions of packages. You can
         override these rejections, thus allowing the hold or forbidding to be
         automatically overridden, in the same way that you would override any
         other rejection. Setting the configuration option Aptitude::
         ProblemResolver::Allow-Break-Holds to true will disable this behavior,
         meaning that the resolver will always break holds (albeit at a penalty,
         see Aptitude::ProblemResolver::BreakHoldScore).


Rejected actions are colored red and marked with an ``R'', while approved
actions are colored green and marked with an ``A''. You can see this in the
following screenshot, where the action ``keep gstreamer0.8-cdparanoia at its
current version'' has been rejected, and the action ``keep sound-juicer at its
current version'' has been approved.

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ Keep the following packages at their current version:
R   gstreamer0.8-cdparanoia                           [0.8.11-1 (unstable, now)]
A   sound-juicer                                      [2.10.1-3 (unstable, now)]
















[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

Rejections and approvals only affect newly generated solutions. You can tell
when a new solution will be generated by examining the indicator in the lower
left hand corner of the screen: if there is a number in parentheses, it is the
number of solutions that have been generated. Thus, when the number outside the
parentheses and the number inside are identical (as above), pressing . will
generated a new solution. If there is no number in parentheses (for instance,
the indicator reads [1/5]), then there are no more solutions to generated. At
any time, you can select the last generated solution by pressing >, and the
first generated solution by pressing <.


 [Important]  Important

              The state of the problem resolver is discarded when you modify the
              state of any package. If you mark a package for installation, for
              upgrade, for removal, etc, the resolver will forget all of your
              rejections and approvals, as well as all the solutions that have
              been generated so far.


In addition to selecting actions in the list at the top of the screen, you can
also select them using the list in the bottom half. To access this list, either
click in it using the mouse or press Tab. Finally, to see the decisions that the
problem resolver took arranged in order, press o. This will give a list of the
dependencies that were resolved and the action taken to resolve them, as in the
following screenshot.

 Actions  Undo  Package  Resolver  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
                Packages                          Resolve Dependencies
  --\ gnome-desktop-environment depends upon sound-juicer
    -> Cancel the removal of sound-juicer
  --\ sound-juicer depends upon gstreamer0.8-cdparanoia
    -> Cancel the removal of gstreamer0.8-cdparanoia





GNOME 2 CD Ripper
gnome-desktop-environment depends upon sound-juicer
--\ The following actions will resolve this dependency:
  -> Remove gnome-desktop-environment [1:2.10.2.3 (unstable, testing, now)]
  -> Cancel the removal of sound-juicer
  -> Downgrade sound-juicer [2.10.1-3 (unstable, now) -> 0.6.1-2 (testing)]




[1(1)/...] Suggest 2 keeps
e: Examine  !: Apply  .: Next  ,: Previous

You can leave this display mode by pressing o again.


Downloading, installing, and removing packages

Changing package states as described in the previous section does not actually
affect what is installed on your system. Thus, you can adjust the state of
packages without affecting your system until you are happy with what you see;
once you are, you can ``commit'' the changes by actually installing and removing
packages.[8]

To commit your changes, use the Actions ->; Install/remove packages (g)
command. Selecting this command will display a preview screen describing the
changes that will be performed. This screen is just a package list, and you can
manipulate the packages (for instance, cancelling unwanted removals) in the same
way that you could in the main list.

When you are done, use Views ->; Close (q) to cancel the installation, or
use Actions ->; Install/remove packages (g) to proceed. aptitude will
download any files that need to be downloaded, then prompt you to continue with
the installation. When you select ``Continue'', the installations and removals
will commence.

Packages that are downloaded by aptitude are placed in a cache directory
(typically /var/cache/apt/archives). Normally, they are just left in this
directory ad infinitum. To delete all the files in this directory, use Actions
->; Clean package cache; to delete only files which cannot be downloaded
again (ie, obsolete packages), use Actions ->; Clean obsolete files.


Understanding and managing package trust

apt's ability to access multiple package sources leads to a potential security
vulnerability. Suppose you add an archive of packages published by Joe Random
Hacker to your sources.list file in order to install Joe's gargleblast package.
It is possible, however, that -- unbeknownst to you -- Joe's archive also
contains his own ``customized'' versions of packages such as libc6 and
ssh...versions that steal your private information or open backdoors on your
system! If these packages have higher version numbers than the legitimate Debian
packages, apt will blithely install them on your system during your next
upgrade, allowing Joe to do his dirty work undetected. Joe could also break into
your mirror of the Debian archives and replace the legitimate software with his
doctored version.

Luckily, newer versions of apt and aptitude, such as the version documented in
this manual, have built-in safeguards to help defeat this type of attack. apt
uses strong security mechanisms based on the popular GPG encryption software to
verify that the packages being distributed from the official Debian mirrors are
the same packages that were uploaded by the Debian developers. aptitude will
then warn you if you attempt to install a package from a non-Debian source, or
if you attempt to upgrade a package that was installed from a Debian source to a
version that came from a non-Debian source.


 [Warning]  Warning

            The security mechanisms in apt provide a near-perfect guarantee that
            the contents of your archive mirror are identical to the contents of
            the master Debian archive. However, they are not a panacea: for
            instance, there are many ways that a tampered package could
            theoretically find its way into the master Debian archive.

            Ensuring that you only install software from a trusted source will
            give you an important degree of protection against malicious
            packages, but it cannot eliminate all the risks inherent in
            installing software.



Understanding trust

apt allows the administrator of an archive to provide a signature of the
archive's index. This signature, which (for all practical purposes) cannot be
forged, indicates that the package files listed in the index are the same files
that the administrator intended to place in the archive: ie, that the contents
of the archive have not been tampered with since it was created.[9] The
signature can be validated by checking that it corresponds to the
administrator's public key. The public key of the Debian archive is distributed
with apt, typically on your Debian CD.

When aptitude downloads an archive index, it will check whether the index is
properly signed. If it is unsigned, aptitude will not trust package files from
that archive. (see below for information on what this means) If it has a
signature but the signature is incorrect or cannot be verified, a warning will
be printed and aptitude will refuse to trust packages from that archive.

Later, when you perform an install run, aptitude will check whether the packages
are from trusted sources. If an untrusted package is being installed, or a
package is being upgraded from a trusted to an untrusted version, a warning will
be displayed and you will have the opportunity to abort the download:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
aptitude 0.3.0                    Will use 831kB of disk space   DL Size: 30.4MB
--\ Packages to be upgraded
iu U wesnoth                                       -98.3kB 0.8.7-1    0.8.8-1.0w
iuAU wesnoth-data                                  +930kB  0.8.7-1    0.8.8-1.0w
+------------------------------------------------------------------------------+
|WARNING: untrusted versions of the following packages will be installed!     #|
|                                                                             #|
|Untrusted packages could compromise your system's security.  You should only #|
|proceed with the installation if you are certain that this is what you want  #|
|to do.                                                                       #|
|                                                                             #|
|  * wesnoth [version 0.8.8-1.0wesnoth.org]                                   #|
|  * wesnoth-data [version 0.8.8-1.0wesnoth.org]                              #|
|  * wesnoth-music [version 0.8.8-1.0wesnoth.org]                             #|
|         [ Really Continue ]                  [ Abort Installation ]          |
+------------------------------------------------------------------------------+
                                                                               #
                                                                               #
                                                                               #
                                                                               #
                                                                               #
                                                                               #


Trusting additional keys

You might find it useful to allow apt to trust additional archives, besides the
main Debian archive. For each archive that you want to trust, you will have to
acquire the public key that is used to sign the archive's package index. This is
typically a text file whose name ends in .asc; it might be provided by the site
administrator or downloadable from a public keyserver. For more information on
what public keys are and how to get them, see the GPG web page.

The list of keys that apt will trust is stored in the keyring file /etc/apt/
trusted.gpg. Once you have the GPG key, you can add it to this file by executing
the command gpg --no-default-keyring --keyring /etc/apt/trusted.gpg --import
newkey.asc. aptitude will then trust any archive that is signed with the key
contained in newkey.asc.


 [Warning]  Warning

            Once an archive's key has been added to the APT keyring, it will be
            trusted just as much as the main Debian mirrors themselves! You
            should only do this if you are very confident that the key you are
            adding is correct and that the person who holds the key is
            trustworthy and competent.



Managing automatically installed packages

To install one package, it is often necessary to install several others (to
fulfill its dependencies). For instance, if you wish to install the clanbomber
package, you must also install the package libclanlib2. If you remove clanbomber
again, you probably no longer need the libclanlib2 package; aptitude will
attempt to detect this and automatically remove the libclanlib2 package.

It works like this: when you install a package, aptitude will automatically
install any other packages on which it depends. These packages are marked as
having been ``automatically installed''; aptitude will monitor them and remove
them when they are no longer depended upon by any manually installed package
[10] . They will appear in the preview as ``packages being removed because they
are no longer used.''

As with any automatic process, there is a potential for things to go haywire.
For instance, even if a package was automatically installed to start with, it
might turn out to be useful in its own right. You can cancel the ``automatic''
flag at any time by pressing m; if the package is already being removed, you can
use Package ->; Install (+) to cancel the removal and clear the
``automatic'' flag.


Search Patterns

When you search for a package or set a display limit in aptitude, the string you
enter is known as a ``search pattern''. While the most basic usage of search
patterns is to match packages by name, aptitude allows you to create much more
complex searches. In addition to the visual interface, some command-line
operations can use search patterns; see Command-Line Reference for details.

A search pattern consists of one or more conditions (sometimes known as
``terms''); packages match the pattern if they match all of its terms. Terms
generally start with a question mark (``?''), followed by the name of the match
term, which describes the search that the term performs: for instance, the term
?name matches package names, while the term ?version matches package versions.
Finally, any additional parameters to the search term are placed in parentheses
(see the documentation of individual terms for details of what each term's
parameters mean).


 [Note]  Note

         Text with no leading ``?'' can also form a search pattern: aptitude
         will attempt to match it against package names. However, because ``?''
         is a regular expression metacharacter, aptitude will not recognize
         question marks as terminators for these ``bare'' strings. For instance,
         the search pattern ``apt?name(python)'' will not search for packages
         whose name contains both ``apt'' and ``python''; instead, it will
         search for packages whose name matches the regular expression
         ``apt?name(python)''.



 [Warning]  Warning

            The behavior of aptitude when given a search pattern without a
            leading ``?'' (or ``~'') is provided as a convenience for
            interactive use and will change in future releases; scripts that
            invoke aptitude should explicitly name the search strategy they want
            to use. That is, scripts should search for ``?name(coq)'' or
            ``~ncoq'' rather than ``coq'').



Searching for strings

Many search terms take a string as a parameter and match it against one or more
fields of a package. Strings can be entered either with or without double quotes
(``"''), so ``?name(scorch)'' and ``?name("scorch")'' will perform the same
search. If you enter a search string using double quotes, you can include a
literal double-quote in the search string by placing a backslash (``\'')
immediately before it: for instance, ``?description("\"easy\"")'' will match any
package whose description contains the string ``"easy"''.

If you enter a ``bare'' string, one not surrounded by double quotes, then
aptitude will consider the string to have ``ended'' when it encounters the
closing parenthesis or the comma before a second argument to the search term.
[11] To remove the special meaning of these characters, place a tilde (``~'')
directly before them. For instance, ``?description(etc))'' is a syntax error,
because the first ``)'' ends the ?description term, and the second ``)'' does
not correspond to any ``(''. In contrast, ``?description(etc~))'' matches any
package whose description contains the text ``etc)''. There are additional
considerations if you are using the shorthand notation for a term; see the
section called ``Shorthand for search terms'' for details.

Most textual searches (for package names, descriptions, etc) are performed using
case-insensitive regular expressions. A regular expression will match against a
field if any portion of the field matches the expression; for instance, ``ogg[0-
9]'' will match ``libogg5'', ``ogg123'', and ``theogg4u''. Some characters have
a special meaning within regular expressions [12] , so if you want to match them
in searches you need to backslash-escape them: for instance, to find ``g++'',
you should use the pattern ``g\+\+''.

The characters ``!'' and ``|'' have special meanings within search patterns. In
order to include these characters in an unquoted string, you can place a tilde
(``~'') directly before them. For instance, to match packages whose description
contains either ``grand'' or ``oblique'', use the pattern ``?description
(grand~|oblique)''. However, you will probably find it more convenient to simply
use a quoted string in these cases: ``?description("grand|oblique")''.


Shorthand for search terms

Some search terms can be written using ``short'' forms, which consist of a tilde
(``~'') followed by a single character that identifies the term, and finally the
arguments (if any) to the term. For instance, the short form of ?name(aptitude)
is ~n aptitude.

When writing a term using its short form, tilde characters and ``whitespace'' -
- that is, space characters, tabs, and so on -- will break the term off and
start a new term. For instance, ``~mDaniel Burrows'' will match any package
whose maintainer field contains ``Daniel'' and whose name contains ``Burrows'',
while ``~i~napt'' matches installed packages whose name contains apt. To include
whitespace characters in the search expression, you can either place a tilde in
front of it (as in Daniel~ Burrows) or place quotation marks around it (as in
"Debian Project" or even Debian" "Project). Inside a quoted string, the
backslash character (``\'') can be used to cancel the special meaning of the
quotation mark: for instance, ~d"\"email" will match any package whose
description contains a quotation mark followed immediately by email. [13]


 [Note]  Note

         Question marks (``?'') will not end the short form of a term, even if
         they are followed by the name of a search term. For instance,
         ``~napt?priority(required)'' will match all packages whose name matches
         the regular expression ``apt?priority(required)''. To combine a short
         query term with a search term specified by name, add one or more spaces
         between the two terms, as in ``~napt ?priority(required)'', or place
         quotation marks around the text (if any) following the short form of a
         term, as in ``~n"apt"?priority(required)''.


Table 2.1, ``Quick guide to search terms'' lists the short form of each search
term.


Searches and Versions

By default, a pattern matches a package if any version of the package matches
the pattern. However, some patterns will restrict their sub-patterns to only
match against some versions of a package. For instance, the search term ?depends
(pattern) will select any package that depends on a package matching pattern.
However, pattern will only be checked against the versions of the package that
actually satisfy a dependency. This means that if foo depends on bar (>= 3.0)
and versions 2.0, 3.0, and 4.0 of bar are available, then in the search pattern
?depends(?version(2\.0)), only versions 3.0 and 4.0 will be tested against
?version(2\.0), and hence foo will not be found by this search.

It matters which versions are checked because, as in the example above, some
patterns will match one version but not another. For instance, the pattern
?installed will only match the version of the package (if any) that is currently
installed. Similarly, the pattern ?maintainer(maintainer) will only match
versions that have the given maintainer. Normally all versions of a package have
the same maintainer, but this is not always the case; in fact, any search
pattern that examines the fields of a package (other than its name, of course)
will behave this way, because all the fields of a package can change between
versions.

To test a pattern against all the versions of a package, even if the pattern
would normally be tested against only some of the versions, use the ?widen term.
For instance, ?depends(?widen(?version(2\.0))) will match any package A that
depends on a package B, where B has a version matching 2.0, regardless of
whether that version actually satisfies A's dependency. On the other hand, the
?narrow term restricts the versions that its sub-pattern is matched against:
?narrow(?installed, ?depends(?version(ubuntu))) will match any package whose
installed version has a dependency that can be satisfied by a package whose
version string contains ``ubuntu''.


 [Note]  Note

         There is a subtle, but important, distinction between matching a
         pattern against a package, and matching it against all the versions of
         that package. When a pattern is matched against a package, each of its
         terms is matched against the package, and so each term will match if
         any version of the package matches. In contrast, when a pattern is
         matched against each version of a package, it will successfully match
         if it matches when all its terms are matched against the same version
         of the package.

         For example: suppose that version 3.0-1 of the package aardvark is
         installed, but that version 4.0-1 is available. Then the search
         expression ?version(4\.0-1)?installed matches aardvark, because
         ?version(4\.0-1) matches against version 4.0-1 of aardvark, while
         ?installed matches against version 3.0-1. On the other hand, this
         expression does not match against all the versions of aardvark, because
         no single version is installed and also has a version number of 4.0-1.



Explicit search targets

Some particularly complex searches can be expressed in aptitude using explicit
targets. In normal search expressions, there is no way to refer to the package
or version that is currently being tested. For instance, suppose that you want
to search for all packages P that depend on a second package Q such that Q
recommends P. Clearly you need to start out with a ?depends(...) term. But the
term filling in the ... needs to somehow select packages that are identical to
the one being matched against ?depends. When describing the goal above, I dealt
with this by giving the packages names, calling them P and Q; terms with
explicit targets do exactly the same thing. [14]

An explicit target is introduced by the ?for term:

Figure 2.11. Syntax of the ?for term

?for variable: pattern



This behaves exactly like pattern, but variable can be used within pattern to
refer to the package or version that pattern is being matched against. You can
use variable in two ways:


  1. The term ?= will match exactly the package or version indicated by the
     given variable. Specifically: if the corresponding ?for term is limited to
     a particular version, then ?= will match either that version (if ?= is
     limited) or the whole package; otherwise it will match any version of the
     package.

     See Example 2.1, `` Use of the ?= term. '' for an example of how to use ?=.

  2. The term ?bind(variable, pattern) will match any package or version if the
     value of variable matches against pattern.

     For ?-style terms, a shorthand form is available. The expression ?bind
     (variable, ?term[(args)]) can be replaced by ?variable:term(args).

     See Example 2.2, ``Use of the ?bind term'' for an example of how to use
     ?bind.



Search Term Reference

Table 2.1, ``Quick guide to search terms'' provides a brief summary of all the
search terms provided by aptitude. A full description of each term can be found
below.

Table 2.1. Quick guide to search terms

 __________________________________________________________________________
|Long form                |Short form          |Description                |
|_________________________|____________________|___________________________|
|                         |                    |Select the package bound to|
|?=variable               |                    |variable; see the section  |
|                         |                    |called ``Explicit search   |
|                         |                    |targets''.                 |
|_________________________|____________________|___________________________|
|?not(pattern)            |!pattern            |Select any package that    |
|                         |                    |does not match pattern.    |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that have  |
|?action(action)          |~aaction            |been marked for the given  |
|                         |                    |action (e.g., ``install''  |
|                         |                    |or ``upgrade'').           |
|_________________________|____________________|___________________________|
|?all-versions(pattern)   |                    |Select packages whose      |
|                         |                    |versions all match pattern.|
|_________________________|____________________|___________________________|
|                         |                    |Select any package that    |
|?and(pattern1, pattern2) |pattern1 pattern2   |matches both pattern1 and  |
|                         |                    |pattern2.                  |
|_________________________|____________________|___________________________|
|                         |                    |Select packages for which  |
|?any-version(pattern)    |                    |at least one version       |
|                         |                    |matches pattern.           |
|_________________________|____________________|___________________________|
|                         |                    |Select packages from the   |
|?archive(archive)        |~Aarchive           |given archive (such as     |
|                         |                    |``unstable'').             |
|_________________________|____________________|___________________________|
|?automatic               |~M                  |Select packages that were  |
|                         |                    |automatically installed.   |
|_________________________|____________________|___________________________|
|                         |                    |Selects anything if        |
|                         |?variable:term-name[|variable matches pattern;  |
|?bind(variable, pattern) |(args)]             |see the section called     |
|                         |                    |``Explicit search          |
|                         |                    |targets''.                 |
|_________________________|____________________|___________________________|
|?broken                  |~b                  |Select packages that have a|
|                         |                    |broken dependency.         |
|_________________________|____________________|___________________________|
|                         |                    |Select package that have a |
|?broken-depType          |~BdepType           |broken dependency of the   |
|                         |                    |given depType.             |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that have a|
|?broken-depType(pattern) |~DB[depType:]pattern|broken dependency of the   |
|                         |                    |given depType matching     |
|                         |                    |pattern.                   |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that a     |
|?broken-reverse-depType  |~RBdepType:pattern  |package matching pattern   |
|(pattern)                |                    |declares a broken          |
|                         |                    |dependency of type depType.|
|_________________________|____________________|___________________________|
|                         |                    |Select packages that       |
|?conflicts(pattern)      |~Cpattern           |conflict with a package    |
|                         |                    |matching pattern.          |
|_________________________|____________________|___________________________|
|?config-files            |~c                  |Select packages that were  |
|                         |                    |removed but not purged.    |
|_________________________|____________________|___________________________|
|                         |                    |Match packages that declare|
|?depType(pattern)        |~D[depType:]pattern |a dependency of type       |
|                         |                    |depType on a package       |
|                         |                    |matching pattern.          |
|_________________________|____________________|___________________________|
|                         |                    |Select packages whose      |
|?description(description)|~ddescription       |description matches        |
|                         |                    |description.               |
|_________________________|____________________|___________________________|
|                         |                    |Select essential packages, |
|?essential               |~E                  |those with Essential: yes  |
|                         |                    |in their control files.    |
|_________________________|____________________|___________________________|
|?false                   |~F                  |Select no packages.        |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that match |
|                         |                    |pattern with variable bound|
|?for variable: pattern   |                    |to the package being       |
|                         |                    |matched; see the section   |
|                         |                    |called ``Explicit search   |
|                         |                    |targets''.                 |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that are   |
|?garbage                 |~g                  |not required by any        |
|                         |                    |manually installed package.|
|_________________________|____________________|___________________________|
|?installed               |~i                  |Select installed packages. |
|_________________________|____________________|___________________________|
|?maintainer(maintainer)  |~mmaintainer        |Select packages maintained |
|                         |                    |by maintainer.             |
|_________________________|____________________|___________________________|
|                         |                    |Select packages for which a|
|?narrow(filter, pattern) |~S filter pattern   |single version matches both|
|                         |                    |filter and pattern.        |
|_________________________|____________________|___________________________|
|?name(name)              |~nname, name        |Select packages with the   |
|                         |                    |given name.                |
|_________________________|____________________|___________________________|
|?new                     |~N                  |Select new packages.       |
|_________________________|____________________|___________________________|
|?obsolete                |~o                  |Match installed packages   |
|                         |                    |that cannot be downloaded. |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that match |
|?or(pattern1, pattern2)  |pattern1 | pattern2 |pattern1, pattern2, or     |
|                         |                    |both.                      |
|_________________________|____________________|___________________________|
|?origin(origin)          |~Oorigin            |Select packages with the   |
|                         |                    |given origin.              |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that       |
|?provides(pattern)       |~Ppattern           |provide a package matching |
|                         |                    |pattern.                   |
|_________________________|____________________|___________________________|
|?priority(priority)      |~ppriority          |Select packages with the   |
|                         |                    |given priority.            |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that are   |
|?reverse-depType(pattern)|~R[depType:]pattern |the targets of a dependency|
|                         |                    |of type depType declared by|
|                         |                    |a package matching pattern.|
|_________________________|____________________|___________________________|
|                         |                    |Select packages that are   |
|?reverse-broken-depType  |                    |the targets of a broken    |
|(pattern)                |~RBdepType:pattern  |dependency of type depType |
|                         |                    |declared by a package      |
|                         |                    |matching pattern.          |
|_________________________|____________________|___________________________|
|?section(section)        |~ssection           |Select packages in the     |
|                         |                    |given section.             |
|_________________________|____________________|___________________________|
|                         |                    |Select packages whose      |
|?source-package(name)    |                    |source package name matches|
|                         |                    |the regular expression     |
|                         |                    |name.                      |
|_________________________|____________________|___________________________|
|                         |                    |Select packages whose      |
|?source-version(version) |                    |source version matches the |
|                         |                    |regular expression version.|
|_________________________|____________________|___________________________|
|?tag(tag)                |~Gtag               |Select packages that have  |
|                         |                    |the given debtags tag.     |
|_________________________|____________________|___________________________|
|?true                    |~T                  |Select all packages.       |
|_________________________|____________________|___________________________|
|?task(task)              |~ttask              |Select packages that are in|
|                         |                    |the given task.            |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that are   |
|?upgradable              |~U                  |installed and can be       |
|                         |                    |upgraded.                  |
|_________________________|____________________|___________________________|
|                         |                    |Select packages that are   |
|?user-tag                |                    |marked with a user-tag     |
|                         |                    |matching the regular       |
|                         |                    |expression user-tag.       |
|_________________________|____________________|___________________________|
|                         |                    |Select packages whose      |
|?version(version)        |~Vversion           |version matches version    |
|                         |                    |(special values: CURRENT,  |
|                         |                    |CANDIDATE, and TARGET).    |
|_________________________|____________________|___________________________|
|?virtual                 |~v                  |Select virtual packages.   |
|_________________________|____________________|___________________________|
|                         |                    |Select versions for which  |
|                         |                    |pattern matches any version|
|?widen(pattern)          |~Wpattern           |of the corresponding       |
|                         |                    |package, discarding local  |
|                         |                    |version restrictions.      |
|_________________________|____________________|___________________________|





  name
      Matches packages whose names match the regular expression name. This is
      the ``default'' search mode and is used for patterns that don't start with
      ~.


       [Note]  Note

               To match packages whose names contain several different
               substrings, use the ?name term (described below); for instance,
               ``?name(apti)?name(tude)'' will match any package whose name
               contains both ``apti'' and ``tude''.



  ?=variable
      Matches packages that correspond to the value of variable, which must be
      bound by an enclosing ?for. For instance, ?for x: ?depends( ?recommends
      ( ?=x ) ) will match any package x that depends on a package which
      recommends x.

      For instance, the following search expression matches packages that
      conflict with themselves:

      Example 2.1.  Use of the ?= term.

      ?for x: ?conflicts(?=x)


      See the section called ``Explicit search targets'' for more information.


  ?not(pattern), !pattern
      Matches packages which do not match the pattern pattern. For instance,
      ``?not(?broken)'' selects packages that are not ``broken''.


       [Note]  Note

               To include a ``!'' in a search string, it must be ``escaped'' by
               placing a tilde (``~'') in front of it; otherwise, aptitude will
               consider it to be part of a ?not term. For instance, to select
               packages whose description contains ``extra!'', use
               ``?description(extra~!)''.



  ?and(pattern1, pattern2), pattern1 pattern2
      Matches packages that match both pattern1 and pattern2.


  ?or(pattern1, pattern2), pattern1 | pattern2
      Matches packages that match either pattern1 or pattern2.


       [Note]  Note

               To use the character ``|'' in a regular expression, it must be
               ``escaped'' to prevent aptitude from creating an OR term from it:
               ``~|''.



  (pattern)
      Matches pattern. For instance, ``opengl (perl|python)'' matches any
      package whose name contains opengl, and also contains either perl or
      python.


  ?action(action), ~aaction
      Matches packages upon which the given action is going to be performed.
      action can be ``install'', ``upgrade'', ``downgrade'', ``remove'',
      ``purge'', ``hold'' (tests whether a package has been placed on hold), or
      ``keep'' (tests whether a package will be unchanged).

      Note that this only tests whether an action is actually queued up to be
      performed on a package, not whether it could be performed. Thus, for
      instance, ?action(upgrade) matches exactly those packages that you have
      already decided to upgrade, not packages which could be upgraded in the
      future (for that, use ?upgradable).


  ?all-versions(pattern)
      Matches any package whose versions all match the given expression. Each
      version of a package will be separately tested against pattern, and the
      package will match if all of its versions match. Packages without
      versions, such as virtual packages, will always be matched by this search
      term.

      This term may not be used in a context in which the versions to match
      against have already been narrowed, such as within ?depends or ?narrow.
      However, it may always be used within ?widen.


  ?any-version(pattern)
      Matches a package if any one of its versions matches the enclosed pattern.
      This is the dual to ?all-versions.

      This term may not be used in a context in which the versions to match
      against have already been narrowed, such as within ?depends or ?narrow.
      However, it may always be used within ?widen.


       [Note]  Note

               This term is closely related to ?narrow. In fact, ?any-version
               (pattern1 pattern2) is exactly the same as ?narrow(pattern1,
               pattern2).



  ?archive(archive), ~Aarchive
      Matches package versions which are available from an archive that matches
      the regular expression archive. For instance, ``?archive(testing)''
      matches any package available from the testing archive.


  ?automatic, ~M
      Matches packages which were automatically installed.


   ?bind(variable, pattern), ?variable:term-name[(args)]
      Matches any package or version if the given pattern matches the package or
      version bound to variable, which must be defined in an enclosing ?for.

      Example 2.2. Use of the ?bind term

      ?for x: ?depends(?depends(?for z: ?bind(x, ?depends(?=z))))

      ?for x: ?depends(?depends(?for z: ?x:depends(?=z)))


      The two search patterns in the above example both match any package x such
      that x depends on a package y which in turn depends on a package z such
      that x also depends directly on z. The first pattern uses ?bind directly,
      while the second one uses an equivalent shorthand syntax.

      See the section called ``Explicit search targets'' for more information.


  ?broken, ~b
      Matches packages that are ``broken'': they have an unfulfilled dependency,
      predependency, breaks, or conflict.


  ?broken-depType, ~BdepType
      Matches packages which have an unfulfilled (``broken'') dependency of the
      given depType. depType can be ``depends'', ``predepends'', ``recommends'',
      ``suggests'', ``breaks'', ``conflicts'', or ``replaces''.


  ?broken-depType(pattern), ~DB[depType:]pattern
      Matches packages with an unsatisfied dependency of type depType on a
      package matching pattern. depType may be any one of the dependency types
      listed in the documentation of ?broken-depType.


  ?conflicts(pattern), ~Cpattern
      Matches packages which conflict with a package matching the given pattern.
      For instance, ``?conflicts(?maintainer(dburrows@debian.org))'' matches any
      package which conflicts with a package I maintain.


  ?config-files, ~c
      Matches packages which have been removed, but whose configuration files
      remain on the system (ie, they were removed but not purged).


  ?depType(pattern), ~D[depType:]pattern
      depType may be any one of the dependency types given in the documentation
      of ?broken-depType, as well as provides: for instance, ?depends(libpng3)
      will match any package that depends on libpng3. If the short form (~D) is
      used and depType is not present, it defaults to depends.

      If depType is ``provides'', matches packages that provide a package
      matching pattern (the equivalent of ?provides). Otherwise, matches
      packages which declare a dependency of type depType upon a package version
      which matches pattern.


  ?description(description), ~ddescription
      Matches packages whose description matches the regular expression
      description.


  ?essential, ~E
      Matches Essential packages.


  ?false, ~F
      This term does not match any package. [15]


  ?for variable: pattern
      Matches pattern, but the given variable may be used inside pattern to
      refer to the package or package version this term to.

      You can use variable in two ways. To apply a ?-style term to the variable,
      write ?variable:term-name(args); for instance, ?x:depends(apt). In
      addition, the term ?=variable will select any package or version that
      matches the value of the given variable.

      For instance, the following term will match any package x that both
      depends and recommends a second package y.

      Example 2.3. Use of the ?for term

      ?for x: ?depends( ?for y: ?x:recommends( ?=y ) )


      See the section called ``Explicit search targets'' for more information.


  ?garbage, ~g
      Matches packages which are not installed, or which were automatically
      installed and are not depended upon by any installed package.


  ?installed, ~i
      Matches package versions which are currently installed.

      Since all versions are tested by default, this normally matches packages
      which are currently installed.


  ?maintainer(maintainer), ~mmaintainer
      Matches packages whose Maintainer field matches the regular expression
      maintainer. For instance, ``?maintainer(joeyh)'' will find all packages
      maintained by Joey Hess.


   ?narrow(filter, pattern), ~S filter pattern
      This term ``narrows'' the search to package versions matching filter. In
      particular, it matches any package version which matches both filter and
      pattern. The string value of the match is the string value of pattern.


  ?name(name), ~nname
      Matches packages whose name matches the regular expression name. For
      instance, most of the packages that match ``?name(^lib)'' are libraries of
      one sort or another.


  ?new, ~N
      Matches packages which are ``new'': that is, they have been added to the
      archive since the last time the list of packages was cleared using Actions
      ->; Forget new packages (f) or the command-line action forget-new.


   ?obsolete, ~o
      This term matches any installed package which is not available in any
      version from any archive. These packages appear as ``Obsolete or Locally
      Installed'' in the visual interface.


  ?origin(origin), ~Oorigin
      Matches package versions whose origin matches the regular expression
      origin. For instance, ``!?origin(debian)'' will find any unofficial
      packages on your system (packages not from the Debian archive).


  ?provides(pattern), ~Ppattern
      Matches package versions which provide a package that matches the pattern.
      For instance, ``?provides(mail-transport-agent)'' will match all the
      packages that provide ``mail-transport-agent''.


  ?priority(priority), ~ppriority
      Matches packages whose priority is priority; priority must be extra,
      important, optional, required, or standard. For instance, ``?priority
      (required)'' matches packages whose priority is ``required''.


  ?reverse-depType(pattern), ~R[depType:]pattern
      depType may be either ``provides'' or one of the dependency types given in
      the documentation of ?broken-depType. If depType is not present, it
      defaults to depends.

      If depType is ``provides'', matches packages whose name is provided by a
      package version matching pattern. Otherwise, matches packages which a
      package version matching pattern declares a dependency of type depType
      upon.


  ?reverse-broken-depType(pattern), ?broken-reverse-depType(pattern), ~RB
  [depType:]pattern
      depType may be either ``provides'' or one of the dependency types given in
      the documentation of ?broken-depType. If depType is not present, it
      defaults to depends.

      Matches packages which a package version matching pattern declares an
      unsatisfied dependency of type depType upon.


   ?section(section), ~ssection
      Matches packages whose section matches the regular expression section.


   ?source-package(name)
      Matches packages whose source package name matches the regular expression
      name.


   ?source-version(version)
      Matches packages whose source version matches the regular expression
      version.


  ?tag(tag), ~Gtag
      Matches packages whose Tag field matches the regular expression tag. For
      instance, the pattern ?tag(game::strategy) would match strategy games.

      For more information on tags and debtags, see http://
      debtags.alioth.debian.org.


   ?task(task), ~ttask
      Matches packages that appear in a task whose name matches the regular
      expression task.


   ?true, ~T
      This term matches any package. For instance, ``?installed?provides
      (?true)'' matches installed packages which are provided by any package.


   ?upgradable, ~U
      This term matches any installed package which can be upgraded.


   ?user-tag(tag)
      This term matches any package that is marked with a user-tag matching the
      regular expression tag.


   ?version(version), ~Vversion
      Matches any package version whose version number matches the regular
      expression version, with the exceptions noted below. For instance,
      ``?version(debian)'' matches packages whose version contains ``debian''.

      The following values of version are treated specially. To search for
      version numbers containing these values, preface the value with a
      backslash; for instance, to find packages whose version number contains
      CURRENT, search for \CURRENT.


      * CURRENT matches the currently installed version of a package, if any.

      * CANDIDATE matches the version, if any, of the package that will be
        installed if you press + on the package or run aptitude install on it.

      * TARGET matches the version of a package that is currently targeted for
        installation, if any.



   ?virtual, ~v
      Matches any package which is purely virtual: that is, its name is provided
      by a package or mentioned in a dependency, but no package of that name
      exists. For instance, ``?virtual!?provides(?true)'' matches packages which
      are virtual and are not provided by any package: ie, packages which are
      depended upon but do not exist.


   ?widen(pattern), ~Wpattern
      ``Widens'' the match: if the versions to match against have been limited
      by an enclosing term (such as ?depends), these limits are dropped. Thus,
      ?widen(pattern) matches a package version if pattern matches any version
      of that package.



Customizing aptitude


Customizing the Package List

The package list can be heavily customized: how packages are displayed, how the
package hierarchy is formed, how packages are sorted, and even how the display
is organized are all open to change.


Customizing how packages are displayed

This section describes how to configure the contents and format of the package
list, status line, and header line, as well as the output of aptitude search.

The format of each of these locations is defined by a ``format string''. A
format string is a string of text containing %-escapes such as %p, %S, and so
on. The resulting output is created by taking the text and replacing the %-
escapes according to their meanings (given below).

A %-escape can either have a fixed size, in which case it is always replaced by
the same amount of text (with extra space characters added to fill it out as
necessary), or it can be ``expandable'', meaning that it takes up the space that
is not claimed by fixed-size columns. If there are several expandable columns,
the extra space is divided evenly between them.

All %-escapes come with a default size and/or expandability. The size of a %-
escape can be changed by writing it between the % and the character identifying
the escape; for instance, %20V generates the candidate version of the package,
20 characters wide. Placing a question mark (?) between the % and the character
identifying the escape causes the column's ``basic'' width to vary depending on
its content. Note that the resulting columns might not line up vertically!

If you want a particular %-escape to be expandable, even though it normally has
a fixed width, place a pound sign (ie, ``#'') immediately after it. For
instance, to display the candidate version of a package, no matter how long it
is, use the format string %V#. You can also place # after something that is not
a %-escape; aptitude will ``expand'' the text preceding the # by inserting extra
spaces after it.

In summary, the syntax of a %-escape is:

%[width][?]code[#]

The configuration variables Aptitude::UI::Package-Display-Format, Aptitude::UI::
Package-Status-Format, and Aptitude::UI::Package-Header-Format define the
default formats the package list, the header at the top of the package list, and
the status line below the package list respectively. To change how the results
of an aptitude search command are displayed, use the -F option.

The following %-escapes are available in format strings:


 [Note]  Note

         Some of the descriptions below refer to ``the package''. In the GUI,
         this is either the package being displayed or the currently selected
         package; in the command-line search, this is the package being
         displayed.



Escape   Name                 Default size      Expandable Description

                                                           This is not really an
                                                           escape; it simply
%%       Literal %            1                 No         inserts a percent
                                                           sign into the output
                                                           at the point at which
                                                           it occurs.

                                                           In some
                                                           circumstances, a
                                                           display format string
                                                           will have
                                                           ``parameters'': for
                                                           instance, in the
         Parameter                                         command-line search,
%#number Replacement          Variable          No         the groups matched by
                                                           the search are used
                                                           as parameters when
                                                           displaying the
                                                           result. This format
                                                           code will be replaced
                                                           by the parameter
                                                           indicated by number.

                                                           A single-character
                                                           flag summarizing any
                                                           action to be
%a       Action Flag          1                 No         performed on the
                                                           package, as described
                                                           in Figure 2.10,
                                                           ``Values of the
                                                           ``action'' flag''.

                                                           A somewhat more
                                                           verbose description
%A       Action               10                No         of the action to be
                                                           performed on the
                                                           package.

                                                           If there are no
                                                           broken packages,
                                                           produces nothing.
%B       Broken Count         12                No         Otherwise, produces a
                                                           string such as
                                                           ``Broken: 10''
                                                           describing the number
                                                           of broken packages.

                                                           A single-character
                                                           flag summarizing the
                                                           current state of the
%c       Current State Flag   1                 No         package, as described
                                                           in Figure 2.9,
                                                           ``Values of the
                                                           ``current state''
                                                           flag''.

                                                           A more verbose
%C       Current State        11                No         description of the
                                                           current state of the
                                                           package.

%d       Description          40                Yes        The package's short
                                                           description.

                                                           The size of the
%D       Package Size         6                 No         package file
                                                           containing the
                                                           package.

                                                           The name of the
%H       Hostname             15                No         computer on which
                                                           aptitude is running.

                                                           Displays the highest
                                                           priority assigned to
                                                           a package version;
%i       Pin priority         4                 No         for packages,
                                                           displays the priority
                                                           of the version which
                                                           will be forced to be
                                                           installed (if any).

                                                           The (estimated)
%I       Installed Size       6                 No         amount of space the
                                                           package takes up on
                                                           disk.

%m       Maintainer           30                Yes        The maintainer of the
                                                           package.

                                                           If the package is
                                                           automatically
%M       Automatic Flag       1                 No         installed, outputs
                                                           ``A''; otherwise,
                                                           outputs nothing.

                                                           Outputs the version
%n       Program Version      The length of     No         of aptitude that is
                              ``0.4.11.11''.               running, currently
                                                           ``0.4.11.11''.

                              The length of the            Outputs the name of
%N       Program Name         name.             No         the program; usually
                                                           ``aptitude''.

                                                           If no packages are
                                                           going to be
                                                           installed, outputs
                                                           nothing. Otherwise,
                                                           outputs a string
                                                           describing the total
%o       Download Size        15                No         size of all the
                                                           package files which
                                                           will be installed (an
                                                           estimate of how much
                                                           needs to be
                                                           downloaded); for
                                                           instance, ``DL size:
                                                           1000B''.

                                                           Outputs the name of
                                                           the package. When a
                                                           package is displayed
                                                           in a tree context,
%p       Package Name         30                Yes        the name of the
                                                           package will be
                                                           indented, if
                                                           possible, according
                                                           to its depth in the
                                                           tree.

%P       Priority             9                 No         Outputs the priority
                                                           of the package.

                                                           Outputs the
         Reverse Depends                                   approximate number of
%r       Count                2                 No         installed packages
                                                           which depend upon the
                                                           package.

                                                           Outputs an
                                                           abbreviated
                                                           description of the
%R       Abbreviated Priority 3                 No         package's priority:
                                                           for instance,
                                                           ``Important'' becomes
                                                           ``Imp''.

%s       Section              10                No         Outputs the section
                                                           of the package.

                                                           If the package is
%S       Trust Status         1                 No         untrusted, displays
                                                           the letter "U".

%t       Archive              10                Yes        The archive in which
                                                           the package is found.

                                                           Outputs ``*'' if the
%T       Tagged               1                 No         package is tagged,
                                                           nothing otherwise.
                                                           [16]

                                                           If the scheduled
                                                           actions will alter
                                                           the amount of space
                                                           used on the disk,
%u       Disk Usage Change    30                No         outputs a description
                                                           of the change in disk
                                                           space; for instance,
                                                           ``Will use 100MB of
                                                           disk space.''

                                                           Outputs the currently
                                                           installed version of
%v       Current Version      10                No         the package, or
                                                           <none> if the package
                                                           is not currently
                                                           installed.

                                                           Outputs the version
                                                           of the package which
                                                           would be installed if
                                                           Package ->;
%V       Candidate Version    10                No         Install (+) were
                                                           issued on the
                                                           package, or <none> if
                                                           the package is not
                                                           currently available.

                                                           Outputs how much
                                                           additional space will
                                                           be used or how much
%Z       Size Change          7                 No         space will be freed
                                                           by installing,
                                                           upgrading, or
                                                           removing a package.



Customizing the package hierarchy

The package hierarchy is generated by a grouping policy: rules describing how
the hierarchy should be built. The grouping policy describes a ``pipeline'' of
rules; each rule can discard packages, create sub-hierarchies in which packages
reside, or otherwise manipulate the tree. The configuration items Aptitude::UI::
Default-Grouping and Aptitude::UI::Default-Preview-Grouping set the grouping
policies for newly created package lists and preview screens, respectively. You
can set the grouping policy for the current package list by pressing G.

The grouping policy is described by a comma-separated list of rules:
rule1,rule2,.... Each rule consists of the name of the rule, possibly followed
by arguments: for instance, versions or section(subdir). Whether arguments are
required and how many arguments are required (or allowed) depends on the type of
rule.

Rules can be non-terminal or terminal. A non-terminal rule will process a
package by generating some part of the hierarchy, then passing the package on to
a later rule. A terminal rule, on the other hand, will also generate part of the
tree (typically items corresponding to the package), but does not pass its
package to a later rule. If no terminal rule is specified, aptitude will use the
default rule, which is to create the standard ``package items''.



  action

      Groups packages according to the action scheduled on them; packages that
      are not upgradable and will be unchanged are ignored. This is the grouping
      that is used in preview trees.


  deps

      This is a terminal rule.

      Creates standard package items which can be expanded to reveal the
      dependencies of the package.


  filter(pattern)

      Include only packages for which at least one version matches pattern.

      If pattern is ``missing'', no packages are discarded. This is a backwards
      compatibility feature and may be removed in the future.


  firstchar

      Groups packages based on the first character of their name.


  hier

      Groups packages according to an extra data file describing a ``hierarchy''
      of packages.


  pattern(pattern [=> title][, ...])

      A customizable grouping policy. Each version of every package is matched
      against the given patterns. The first match found is used to assign a
      title to the package; packages are then grouped by their title. Strings of
      the form \N that occur in title will be replaced by the Nth result of the
      match. If title is not present, it is assumed to be \1.

      For instance, pattern(?maintainer() => \1) will group packages according
      to their Maintainer field. The policy pattern(?maintainer()) will do the
      same thing, as the absent title defaults to \1.

      Instead of => title, an entry may end with ||. This indicates that
      packages matching the corresponding pattern will be inserted into the tree
      at the same level as the pattern grouping, rather than being placed in
      subtrees. For instance, pattern(?action(remove) => Packages Being Removed,
      ?true ||) will place packages that are being removed into a subtree, and
      place all the other packages at the current level. Any later grouping
      policies will apply to both sets of packages, of course.

      See the section called ``Search Patterns'' for more information on the
      format of pattern.


  priority

      Groups packages according to their priority.


  section[(mode[,passthrough])]

      Groups packages according to their Section field.

      mode can be one of the following:



        none
            Group based on the whole Section field, so categories like ``non-
            free/games'' will be created. This is the default if no mode is
            specified.


        topdir
            Group based on the part of the Section field before the first /
            character; if this part of the Section is not recognized, or if
            there is no /, the first entry in the list Aptitude::Sections::Top-
            Sections will be used instead.


        subdir
            Group based on the part of the Section field after the first /
            character, if it is contained in the list Aptitude::Sections::Top-
            Sections. If not, or if there is no /, group based on the entire
            Section field instead.


        subdirs
            Group based on the part of the Section field after the first /
            character, if the portion of the field preceding it is contained in
            the list Aptitude::Sections::Top-Sections; if not, or if there is no
            /, the entire field will be used. If there are multiple / characters
            in the portion of the field that is used, a hierarchy of groups will
            be formed. For instance, if ``games'' is not a member of Aptitude::
            Sections::Top-Sections, then a package with a section of ``games/
            arcade'' will be placed under the top-level heading ``games'', in a
            sub-tree named ``arcade''.


      If passthrough is present, packages which for some reason lack a true
      Section (for instance, virtual packages) will be passed directly to the
      next level of grouping without first being placed in sub-categories.


  status

      Groups packages into the following categories:


      * Installed

      * Not Installed

      * Security Updates

      * Upgradable

      * Obsolete

      * Virtual



  tag[(facet)]

      Groups packages according to the Tag information stored in the Debian
      package files. If facet is provided, then only tags corresponding to that
      facet will be displayed, and packages lacking this facet will be hidden;
      otherwise, all packages will be displayed at least once (with tagless
      packages listed separately from packages that have tags).

      For more information on debtags, see http://debtags.alioth.debian.org.


  task

      Creates a tree called ``Tasks'' which contains the available tasks
      (information on tasks is read from debian-tasks.desc in the package
      tasksel). The rule following task will create its categories as siblings
      of Tasks.


  versions

      This is a terminal rule.

      Creates standard package items which can be expanded to reveal the
      versions of the package.



Customizing how packages are sorted

By default, packages in the package list or in the output of aptitude search are
sorted by name. However, it is often useful to sort them according to different
criteria (for instance, package size), and aptitude allows you to do just that
by modifying the sorting policy.

Like the grouping policy described in the previous section, the sorting policy
is a comma-separated list. Each item in the list is the name of a sorting rule;
if packages are ``equal'' according to the first rule, the second rule is used
to sort them, and so on. Placing a tilde character (~) in front of a rule
reverses the usual meaning of that rule. For instance, priority,~name will sort
packages by priority, but packages with the same priority will be placed in
reverse order according to name.

To change the sorting policy for an active package list, press S. To change the
default sorting for all package lists, set the configuration option Aptitude::
UI::Default-Sorting. To change the sorting policy for aptitude search, use the -
-sort command-line option.

The available rules are:



  installsize
      Sorts packages by the estimated amount of size they require when
      installed.


  name
      Sorts packages by name.


  priority
      Sorts packages by priority.


  version
      Sorts packages according to their version number.



Customizing keybindings

The keys used to activate commands in aptitude can be customized in the
configuration file. Every command has an associated configuration variable under
Aptitude::UI::Keybindings; to change the keystroke bound to a command, just set
the corresponding variable to the keystroke. For instance, to make the key s
perform a search, set Aptitude::UI::Keybindings::Search to ``s''. You can
require the Control key to be pressed by placing ``C-'' in front of the key: for
instance, using ``C-s'' instead of ``s'' would bind Search to Control+s instead
of s. Finally, you can bind a command to several keys at once using a comma-
separated list: for instance, using ``s,C-s'' would cause both s and Control+s
to perform a search.

The following commands can be bound to keys by setting the variable Aptitude::
UI::Keybindings::command, where command is the name of the command to be bound:

 ______________________________________________________________________________
|Command               |Default        |Description                            |
|______________________|_______________|_______________________________________|
|                      |               |If packages are broken and aptitude has|
|ApplySolution         |!              |suggested a solution to the problem,   |
|                      |               |immediately apply the solution.        |
|______________________|_______________|_______________________________________|
|                      |               |Move to the beginning of the current   |
|Begin                 |home,C-a       |display: to the top of a list, or to   |
|                      |               |the left of a text entry field.        |
|______________________|_______________|_______________________________________|
|BugReport             |B              |Reports a bug in the currently selected|
|                      |               |package, using reportbug.              |
|______________________|_______________|_______________________________________|
|                      |               |Cancels the current interaction: for   |
|Cancel                |C-g,escape,C-[ |instance, discards a dialog box or     |
|                      |               |deactivates the menu.                  |
|______________________|_______________|_______________________________________|
|                      |               |Displays the changelog.Debian of the   |
|Changelog             |C              |currently selected package or package  |
|                      |               |version.                               |
|______________________|_______________|_______________________________________|
|ChangePkgTreeGrouping |G              |Changes the grouping policy of the     |
|                      |               |currently active package list.         |
|______________________|_______________|_______________________________________|
|ChangePkgTreeLimit    |l              |Changes the limit of the currently     |
|                      |               |active package list.                   |
|______________________|_______________|_______________________________________|
|ChangePkgTreeSorting  |S              |Changes the sorting policy of the      |
|                      |               |currently active package list.         |
|______________________|_______________|_______________________________________|
|ClearAuto             |m              |Marks the currently selected package as|
|                      |               |having been manually installed.        |
|______________________|_______________|_______________________________________|
|CollapseAll           |]              |Collapses the selected tree and all its|
|                      |               |children in a hierarchical list.       |
|______________________|_______________|_______________________________________|
|CollapseTree          |No binding     |Collapses the selected tree in a       |
|                      |               |hierarchical list.                     |
|______________________|_______________|_______________________________________|
|                      |               |In the hierarchy editor, stores the    |
|Commit                |N              |hierarchy location of the current      |
|                      |               |package and proceeds to the next       |
|                      |               |package.                               |
|______________________|_______________|_______________________________________|
|                      |               |In dialog boxes, this is equivalent to |
|Confirm               |enter          |pressing ``Ok''; when interacting with |
|                      |               |a status-line multiple choice question,|
|                      |               |it chooses the default option.         |
|______________________|_______________|_______________________________________|
|Cycle                 |tab            |Switches the keyboard focus to the next|
|                      |               |``widget''.                            |
|______________________|_______________|_______________________________________|
|CycleNext             |f6             |Switches to the next active view.      |
|______________________|_______________|_______________________________________|
|CycleOrder            |o              |Cycles through predefined arrangements |
|                      |               |of the display.                        |
|______________________|_______________|_______________________________________|
|CyclePrev             |f7             |Switches to the previous active view.  |
|______________________|_______________|_______________________________________|
|DelBOL                |C-u            |Deletes all text between the cursor and|
|                      |               |the beginning of the line.             |
|______________________|_______________|_______________________________________|
|DelBack               |backspace,C-h  |Deletes the previous character when    |
|                      |               |entering text.                         |
|______________________|_______________|_______________________________________|
|DelEOL                |C-k            |Deletes all text from the cursor to the|
|                      |               |end of the line.                       |
|______________________|_______________|_______________________________________|
|DelForward            |delete,C-d     |Deletes the character under the cursor |
|                      |               |when entering text.                    |
|______________________|_______________|_______________________________________|
|Dependencies          |d              |Displays the dependencies of the       |
|                      |               |currently selected package.            |
|______________________|_______________|_______________________________________|
|                      |               |When browsing the package list, cycles |
|DescriptionCycle      |i              |through the available views in the     |
|                      |               |information area.                      |
|______________________|_______________|_______________________________________|
|DescriptionDown       |z              |When browsing the package list, scrolls|
|                      |               |the information area down one line.    |
|______________________|_______________|_______________________________________|
|DescriptionUp         |a              |When browsing the package list, scrolls|
|                      |               |the information area up one line.      |
|______________________|_______________|_______________________________________|
|                      |               |If not in a preview screen, display the|
|DoInstallRun          |g              |preview screen [a]; if in a preview    |
|                      |               |screen, perform an install run.        |
|______________________|_______________|_______________________________________|
|                      |               |Moves down: for instance, scrolls a    |
|Down                  |down,j         |text display down or selects the next  |
|                      |               |item in a list.                        |
|______________________|_______________|_______________________________________|
|DpkgReconfigure       |R              |Runs ``dpkg-reconfigure'' on the       |
|                      |               |currently selected package.            |
|______________________|_______________|_______________________________________|
|                      |               |If packages are broken, writes the     |
|DumpResolver          |*              |current state of the problem-resolver  |
|                      |               |to a file (for debugging purposes).    |
|______________________|_______________|_______________________________________|
|EditHier              |E              |Opens the hierarchy editor.            |
|______________________|_______________|_______________________________________|
|                      |               |Move to the end of the current display:|
|End                   |end,C-e        |to the bottom of a list, or to the     |
|                      |               |right of a text entry field.           |
|______________________|_______________|_______________________________________|
|                      |               |If some packages are broken and        |
|ExamineSolution       |e              |aptitude has suggested a solution,     |
|                      |               |display a dialog box with a detailed   |
|                      |               |description of the proposed solution.  |
|______________________|_______________|_______________________________________|
|ExpandAll             |[              |Expands the selected tree and all its  |
|                      |               |children in a hierarchical list.       |
|______________________|_______________|_______________________________________|
|ExpandTree            |No binding     |Expands the selected tree in a         |
|                      |               |hierarchical list.                     |
|______________________|_______________|_______________________________________|
|FirstSolution         |<              |Select the first solution produced by  |
|                      |               |the problem resolver.                  |
|______________________|_______________|_______________________________________|
|                      |               |Forbids a package from being upgraded  |
|ForbidUpgrade         |F              |to the currently available version (or |
|                      |               |a particular version).                 |
|______________________|_______________|_______________________________________|
|                      |               |Discards all information about which   |
|ForgetNewPackages     |f              |packages are ``new'' (causes the list  |
|                      |               |of ``new'' packages to become empty).  |
|______________________|_______________|_______________________________________|
|Help                  |?              |Displays the on-line help screen.      |
|______________________|_______________|_______________________________________|
|HistoryNext           |down,C-n       |In a line editor with history, moves   |
|                      |               |forwards in the history.               |
|______________________|_______________|_______________________________________|
|HistoryPrev           |up,C-p         |In a line editor with history, moves   |
|                      |               |backwards in the history.              |
|______________________|_______________|_______________________________________|
|Hold                  |=              |Places a package on hold.              |
|______________________|_______________|_______________________________________|
|Install               |+              |Flags a package for installation.      |
|______________________|_______________|_______________________________________|
|                      |               |Marks a single package for             |
|InstallSingle         |I              |installation; all other packages are   |
|                      |               |kept at their current version.         |
|______________________|_______________|_______________________________________|
|Keep                  |:              |Cancels all installation or removal    |
|                      |               |requests and all holds for a package.  |
|______________________|_______________|_______________________________________|
|LastSolution          |<              |Select the last solution produced by   |
|                      |               |the problem resolver.                  |
|______________________|_______________|_______________________________________|
|                      |               |Moves left: for instance, moves one    |
|Left                  |left,h         |menu to the left in the menu bar, or   |
|                      |               |moves the cursor to the left when      |
|                      |               |editing text.                          |
|______________________|_______________|_______________________________________|
|                      |               |In a hierarchical list, selects the    |
|LevelDown             |J              |next sibling of the currently selected |
|                      |               |item (the next item at the same level  |
|                      |               |with the same parent).                 |
|______________________|_______________|_______________________________________|
|                      |               |In a hierarchical list, selects the    |
|LevelUp               |K              |previous sibling of the currently      |
|                      |               |selected item (the previous item at the|
|                      |               |same level with the same parent).      |
|______________________|_______________|_______________________________________|
|                      |               |Attempts to upgrade all packages which |
|MarkUpgradable        |U              |are not held back or forbidden from    |
|                      |               |upgrading.                             |
|______________________|_______________|_______________________________________|
|MineFlagSquare        |f              |In Minesweeper, places or removes a    |
|                      |               |flag on a square.                      |
|______________________|_______________|_______________________________________|
|MineLoadGame          |L              |Loads a Minesweeper game.              |
|______________________|_______________|_______________________________________|
|MineSaveGame          |S              |Saves a Minesweeper game.              |
|______________________|_______________|_______________________________________|
|MineSweepSquare       |No binding     |Sweeps around the current square in    |
|                      |               |Minesweeper.                           |
|______________________|_______________|_______________________________________|
|MineUncoverSquare     |No binding     |Uncovers the current square in         |
|                      |               |Minesweeper                            |
|______________________|_______________|_______________________________________|
|                      |               |Uncovers the current square in         |
|MineUncoverSweepSquare|enter          |Minesweeper if it is covered;          |
|                      |               |otherwise, sweeps around it.           |
|______________________|_______________|_______________________________________|
|NextPage              |pagedown,C-f   |Moves the current display one page     |
|                      |               |forward.                               |
|______________________|_______________|_______________________________________|
|NextSolution          |.              |Advance the dependency resolver to the |
|                      |               |next solution.                         |
|______________________|_______________|_______________________________________|
|No                    |n[b]           |This key will select the ``no'' button |
|                      |               |in yes/no dialog boxes.                |
|______________________|_______________|_______________________________________|
|Parent                |^              |Selects the parent of the selected item|
|                      |               |in a hierarchical list.                |
|______________________|_______________|_______________________________________|
|PrevPage              |pageup,C-b     |Moves the current display one page     |
|                      |               |backward.                              |
|______________________|_______________|_______________________________________|
|PrevSolution          |,              |Return the dependency resolver to the  |
|                      |               |previous solution.                     |
|______________________|_______________|_______________________________________|
|Purge                 |_              |Flags the currently selected package to|
|                      |               |be purged.                             |
|______________________|_______________|_______________________________________|
|PushButton            |space,enter    |Activates the currently selected       |
|                      |               |button, or toggles a checkbox.         |
|______________________|_______________|_______________________________________|
|Quit                  |q              |Close the current view.                |
|______________________|_______________|_______________________________________|
|QuitProgram           |Q              |Quit the entire program.               |
|______________________|_______________|_______________________________________|
|                      |               |Reject all resolver actions that would |
|RejectBreakHolds      |               |break a hold; equivalent to Resolver   |
|                      |               |->; Reject Breaking Holds.         |
|______________________|_______________|_______________________________________|
|Refresh               |C-l            |Redraws the screen from scratch.       |
|______________________|_______________|_______________________________________|
|Remove                |-              |Flags a package for removal.           |
|______________________|_______________|_______________________________________|
|ReInstall             |L              |Flags the currently selected package to|
|                      |               |be reinstalled.                        |
|______________________|_______________|_______________________________________|
|RepeatSearchBack      |N              |Repeats the last search, but searches  |
|                      |               |in the opposite direction.             |
|______________________|_______________|_______________________________________|
|ReSearch              |n              |Repeats the last search.               |
|______________________|_______________|_______________________________________|
|ReverseDependencies   |r              |Displays packages which depend upon the|
|                      |               |currently selected package.            |
|______________________|_______________|_______________________________________|
|                      |               |Moves right: for instance, moves one   |
|Right                 |right,l        |menu to the right in the menu bar, or  |
|                      |               |moves the cursor to the right when     |
|                      |               |editing text.                          |
|______________________|_______________|_______________________________________|
|SaveHier              |S              |In the hierarchy editor, saves the     |
|                      |               |current hierarchy.                     |
|______________________|_______________|_______________________________________|
|Search                |/              |Activate the ``search'' function of the|
|                      |               |currently active interface element.    |
|______________________|_______________|_______________________________________|
|                      |               |Activate the ``search backwards''      |
|SearchBack            |\              |function of the currently active       |
|                      |               |interface element.                     |
|______________________|_______________|_______________________________________|
|SearchBroken          |b              |In a package tree, search for the next |
|                      |               |broken package.                        |
|______________________|_______________|_______________________________________|
|SetAuto               |M              |Marks the current package as having    |
|                      |               |been automatically installed.          |
|______________________|_______________|_______________________________________|
|ShowHideDescription   |D              |In a package list, toggles whether the |
|                      |               |information area is visible.           |
|______________________|_______________|_______________________________________|
|                      |               |When viewing a solution, marks the     |
|SolutionActionApprove |a              |currently selected action as "approved"|
|                      |               |(it will be included in future         |
|                      |               |solutions whenever possible).          |
|______________________|_______________|_______________________________________|
|                      |               |When viewing a solution, marks the     |
|SolutionActionReject  |r              |currently selected action as "rejected"|
|                      |               |(future solutions will not contain it).|
|______________________|_______________|_______________________________________|
|ToggleExpanded        |enter          |Expands or collapses the currently     |
|                      |               |selected tree in a hierarchical list.  |
|______________________|_______________|_______________________________________|
|ToggleMenuActive      |C-m,f10,C-space|Activates or deactivates the main menu.|
|______________________|_______________|_______________________________________|
|                      |               |Cancels the last action, up to when    |
|Undo                  |C-_,C-u        |aptitude was started OR the last time  |
|                      |               |you update the package lists or        |
|                      |               |installed packages.                    |
|______________________|_______________|_______________________________________|
|                      |               |Moves up: for instance, scrolls a text |
|Up                    |up,k           |display up or selects the previous item|
|                      |               |in a list.                             |
|______________________|_______________|_______________________________________|
|                      |               |Updates the list of packages by        |
|UpdatePackageList     |u              |fetching new lists from the Internet if|
|                      |               |necessary.                             |
|______________________|_______________|_______________________________________|
|Versions              |v              |Displays the available versions of the |
|                      |               |currently selected package.            |
|______________________|_______________|_______________________________________|
|Yes                   |y [b]          |This key will select the ``Yes'' button|
|                      |               |in yes/no dialog boxes.                |
|______________________|_______________|_______________________________________|
|[a] unless Aptitude::Display-Planned-Action is false.                         |
|                                                                              |
|[b] This default may be different in different locales.                       |
|______________________________________________________________________________|

In addition to letter keys, number keys, and punctuation, the following
``special'' keys can be bound:

 _____________________________________________________________________________
|Key name        |Description                                                 |
|________________|____________________________________________________________|
|a1              |The A1 key.                                                 |
|________________|____________________________________________________________|
|a3              |The A3 key.                                                 |
|________________|____________________________________________________________|
|b2              |The B2 key.                                                 |
|________________|____________________________________________________________|
|backspace       |The Backspace key.                                          |
|________________|____________________________________________________________|
|backtab         |The back-tab key                                            |
|________________|____________________________________________________________|
|begin           |The Begin key (not Home)                                    |
|________________|____________________________________________________________|
|break           |The ``break'' key.                                          |
|________________|____________________________________________________________|
|c1              |The C1 key.                                                 |
|________________|____________________________________________________________|
|c3              |The C3 key.                                                 |
|________________|____________________________________________________________|
|cancel          |The Cancel key.                                             |
|________________|____________________________________________________________|
|create          |The Create key.                                             |
|________________|____________________________________________________________|
|comma           |Comma (,) -- note that because commas are used to list keys,|
|                |this is the only way to bind to a comma.                    |
|________________|____________________________________________________________|
|command         |The Command key.                                            |
|________________|____________________________________________________________|
|copy            |The Copy key.                                               |
|________________|____________________________________________________________|
|delete          |The Delete key.                                             |
|________________|____________________________________________________________|
|delete_line     |The ``delete line'' key.                                    |
|________________|____________________________________________________________|
|down            |The ``down'' arrow key.                                     |
|________________|____________________________________________________________|
|end             |The End key.                                                |
|________________|____________________________________________________________|
|entry           |The Enter key.                                              |
|________________|____________________________________________________________|
|exit            |The Exit key.                                               |
|________________|____________________________________________________________|
|f1, f2, ..., f10|The F1 through F10 keys.                                    |
|________________|____________________________________________________________|
|find            |The Find key.                                               |
|________________|____________________________________________________________|
|home            |The Home key.                                               |
|________________|____________________________________________________________|
|insert          |The Insert key.                                             |
|________________|____________________________________________________________|
|insert_exit     |The ``insert exit'' key.                                    |
|________________|____________________________________________________________|
|clear           |The ``clear'' key.                                          |
|________________|____________________________________________________________|
|clear_eol       |The ``clear to end of line'' key.                           |
|________________|____________________________________________________________|
|clear_eos       |The ``clear to end of screen'' key.                         |
|________________|____________________________________________________________|
|insert_line     |The ``insert line'' key.                                    |
|________________|____________________________________________________________|
|left            |The ``left'' arrow key.                                     |
|________________|____________________________________________________________|
|mark            |The Mark key.                                               |
|________________|____________________________________________________________|
|message         |The Message key.                                            |
|________________|____________________________________________________________|
|move            |The Move key.                                               |
|________________|____________________________________________________________|
|next            |The Next key.                                               |
|________________|____________________________________________________________|
|open            |The Open key.                                               |
|________________|____________________________________________________________|
|previous        |The Previous key.                                           |
|________________|____________________________________________________________|
|print           |The Print key.                                              |
|________________|____________________________________________________________|
|redo            |The Redo key.                                               |
|________________|____________________________________________________________|
|reference       |The Reference key.                                          |
|________________|____________________________________________________________|
|refresh         |The Refresh key.                                            |
|________________|____________________________________________________________|
|replace         |The Replace key.                                            |
|________________|____________________________________________________________|
|restart         |The Restart key.                                            |
|________________|____________________________________________________________|
|resume          |The Resume key.                                             |
|________________|____________________________________________________________|
|return          |The Return key.                                             |
|________________|____________________________________________________________|
|right           |The ``right'' arrow key.                                    |
|________________|____________________________________________________________|
|save            |The Save key.                                               |
|________________|____________________________________________________________|
|scrollf         |The ``scroll forward'' key.                                 |
|________________|____________________________________________________________|
|scrollr         |The ``scroll backwards'' key.                               |
|________________|____________________________________________________________|
|select          |The Select key.                                             |
|________________|____________________________________________________________|
|suspend         |The Suspend key.                                            |
|________________|____________________________________________________________|
|pagedown        |The ``Page Down'' key.                                      |
|________________|____________________________________________________________|
|pageup          |The ``Page Up'' key.                                        |
|________________|____________________________________________________________|
|space           |The Space key                                               |
|________________|____________________________________________________________|
|tab             |The Tab key                                                 |
|________________|____________________________________________________________|
|undo            |The Undo key.                                               |
|________________|____________________________________________________________|
|up              |The ``up'' arrow key.                                       |
|________________|____________________________________________________________|

In addition to binding keys globally, it is possible to change key bindings for
one particular part (or domain) of aptitude: for instance, to make Tab the
equivalent of the right arrow key in menu bars, set Aptitude::UI::Keybindings::
Menubar::Right to ``tab,right''. The following domains are available:

 ______________________________________________________________________________
|Domain       |Description                                                     |
|_____________|________________________________________________________________|
|EditLine     |Used by line-editing widgets, such as the entry field in a      |
|             |``search'' dialog.                                              |
|_____________|________________________________________________________________|
|Menu         |Used by drop-down menus.                                        |
|_____________|________________________________________________________________|
|Menubar      |Used by the menu bar at the top of the screen.                  |
|_____________|________________________________________________________________|
|Minesweeper  |Used by the Minesweeper mode.                                   |
|_____________|________________________________________________________________|
|MinibufChoice|Used by the multiple-choice prompts that appear if you have     |
|             |chosen to have some prompts appear in the status line.          |
|_____________|________________________________________________________________|
|Pager        |Used when displaying a file on disk (for instance, the help     |
|             |text).                                                          |
|_____________|________________________________________________________________|
|PkgNode      |Used by packages, trees of packages, package versions, and      |
|             |package dependencies when they appear in package lists.         |
|_____________|________________________________________________________________|
|PkgTree      |Used by package lists.                                          |
|_____________|________________________________________________________________|
|Table        |Used by tables of widgets (for instance, dialog boxes).         |
|_____________|________________________________________________________________|
|TextLayout   |Used by formatted text displays, such as package descriptions.  |
|_____________|________________________________________________________________|
|Tree         |Used by all tree displays (including package lists, for which it|
|             |can be overridden by PkgTree).                                  |
|_____________|________________________________________________________________|


Customizing text colors and styles

The colors and visual styles used by aptitude to display text can be extensively
customized. Each visual element has an associated ``style'', which describes the
particular colors and visual attributes that will be used to display that
element. Styles take the form of a list of color and attribute settings. This
list is not necessarily exhaustive; if some colors or attributes are not
explicitly specified, their values will be taken from the surrounding visual
context. In fact, most visual elements have an ``empty'' style by default.

You can change the contents of a style by creating a configuration group of the
same name in the apt or aptitude configuration file. For instance, the
``MenuBorder'' style is used to draw the visual border around drop-down menus.
By default, this border is drawn bold and white-on-blue. Placing the following
text in the configuration file would change it to white-on-cyan:

Aptitude::UI::Styles {
  MenuBorder {fg white; bg cyan; set bold;};
};

As you can see, a style's configuration group consists of a sequence of
instructions. The general classes of instructions are:



  fg color
      Sets the text foreground to the given color. See below for a list of the
      colors known to aptitude.


  bg color
      Sets the text background to the given color. See below for a list of the
      colors known to aptitude.


  set attribute
      Enables the given text attribute. See below for a list of the text
      attributes known to aptitude.


  clear attribute
      Disables the given text attribute. See below for a list of the text
      attributes known to aptitude.


  flip attribute
      Toggles the given text attribute: if it is enabled in the surrounding
      element, it will be disabled, and vice versa. See below for a list of the
      text attributes known to aptitude.


The colors that aptitude recognizes are black, blue, cyan, green, magenta, red,
white, and yellow [17]. In addition, you may specify default in place of a
background color to use the default terminal background (this could be the
default color, an image file, or even ``transparent''). The styles that aptitude
recognizes are:



  blink
      Enables blinking text.


  bold
      Makes the foreground color of the text (or the background if reverse video
      is enabled) brighter.


  dim
      May cause text to be extra-dim on some terminals. No effect has been
      observed on common Linux terminals.


  reverse
      Swaps the foreground and background colors. Many visual elements flip this
      attribute to perform common highlighting tasks.


  standout
      This enables ``the best highlighting mode of the terminal''. In xterms it
      is similar, but not idential to, reverse video; behavior on other
      terminals may vary.


  underline
      Enables underlined text.


You can select several attributes at once by separating them with commas; for
instance, set bold,standout;.


 [Note]  Note

         As hinted at above, the interpretation of both styles and text
         attributes is highly terminal-dependent. You may need to experiment a
         bit to find out exactly what some settings do on your terminal.


The following styles can be customized in aptitude:

Figure 2.12. Customizable styles in aptitude

 ______________________________________________________________________________
|Style                     |Default                  |Description              |
|__________________________|_________________________|_________________________|
|Bullet                    |fg yellow; set bold;     |The style of the bullets |
|                          |                         |in bulleted lists.       |
|__________________________|_________________________|_________________________|
|                          |                         |The style of newer       |
|                          |                         |versions of the package  |
|                          |                         |in the changelog view.   |
|                          |                         |Note that aptitude will  |
|ChangelogNewerVersion     |set bold;                |only highlight newer     |
|                          |                         |versions of the package  |
|                          |                         |if you have the package  |
|                          |                         |libparse-debianchangelog-|
|                          |                         |perl installed.          |
|__________________________|_________________________|_________________________|
|Default                   |fg white; bg black;      |The basic style of the   |
|                          |                         |screen.                  |
|__________________________|_________________________|_________________________|
|DepBroken                 |fg black; bg red;        |The style of unfulfilled |
|                          |                         |dependencies.            |
|__________________________|_________________________|_________________________|
|                          |fg black; bg blue; set   |The style of menu entries|
|DisabledMenuEntry         |dim;                     |that are disabled and    |
|                          |                         |cannot be used.          |
|__________________________|_________________________|_________________________|
|                          |                         |The style used to        |
|                          |                         |indicate that a file was |
|DownloadHit               |fg black; bg green;      |``hit'': i.e., it has not|
|                          |                         |changed since the last   |
|                          |                         |time it was downloaded.  |
|__________________________|_________________________|_________________________|
|DownloadProgress          |fg blue; bg yellow;      |The style of the progress|
|                          |                         |indicator for a download.|
|__________________________|_________________________|_________________________|
|                          |                         |The style of line editors|
|EditLine                  |fg white; bg black; clear|(for instance, the entry |
|                          |reverse;                 |in the ``Search''        |
|                          |                         |dialog).                 |
|__________________________|_________________________|_________________________|
|Error                     |fg white; bg red; set    |The style of error       |
|                          |bold;                    |messages.                |
|__________________________|_________________________|_________________________|
|Header                    |fg white; bg blue; set   |The style of screen      |
|                          |bold;                    |headers.                 |
|__________________________|_________________________|_________________________|
|                          |fg white; bg blue; set   |The style of the         |
|HighlightedMenuBar        |bold,reverse;            |currently selected menu  |
|                          |                         |name in the menu bar.    |
|__________________________|_________________________|_________________________|
|                          |fg white; bg blue; set   |The style of the         |
|HighlightedMenuEntry      |bold,reverse;            |currently selected choice|
|                          |                         |in a menu.               |
|__________________________|_________________________|_________________________|
|                          |fg yellow; bg red; set   |The style of the dialog  |
|MediaChange               |bold;                    |used to ask the user to  |
|                          |                         |insert a new CD.         |
|__________________________|_________________________|_________________________|
|MenuBar                   |fg white; bg blue; set   |The style of the menu    |
|                          |bold;                    |bar.                     |
|__________________________|_________________________|_________________________|
|                          |fg white; bg blue; set   |The style of the borders |
|MenuBorder                |bold;                    |that surround a drop-down|
|                          |                         |menu.                    |
|__________________________|_________________________|_________________________|
|MenuEntry                 |fg white; bg blue;       |The style of each entry  |
|                          |                         |in a drop-down menu.     |
|__________________________|_________________________|_________________________|
|MineBomb                  |fg red; set bold;        |The style of bombs in    |
|                          |                         |Minesweeper.             |
|__________________________|_________________________|_________________________|
|                          |                         |The style of the border  |
|MineBorder                |set bold;                |drawn around a           |
|                          |                         |Minesweeper board.       |
|__________________________|_________________________|_________________________|
|MineFlag                  |fg red; set bold;        |The style of flags in    |
|                          |                         |Minesweeper.             |
|__________________________|_________________________|_________________________|
|                          |                         |The style of the number N|
|MineNumberN               |Various                  |in Minesweeper; N may    |
|                          |                         |range from 0 to 8.       |
|__________________________|_________________________|_________________________|
|                          |                         |The color used to display|
|MultiplexTab              |fg white; bg blue;       |``tabs'' other than the  |
|                          |                         |currently selected one.  |
|__________________________|_________________________|_________________________|
|                          |                         |The color used to display|
|MultiplexTabHighlighted   |fg blue; bg white;       |the currently selected   |
|                          |                         |``tab''.                 |
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages in |
|PkgBroken                 |fg red; flip reverse;    |the package list which   |
|                          |                         |have unfulfilled         |
|                          |                         |dependencies.            |
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|PkgBrokenHighlighted      |fg red;                  |packages in the package  |
|                          |                         |list which have          |
|                          |                         |unfulfilled dependencies.|
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages    |
|PkgNotInstalled           |                         |which are not currently  |
|                          |                         |installed and will not be|
|                          |                         |installed.               |
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|PkgNotInstalledHighlighted|                         |packages which are not   |
|                          |                         |currently installed and  |
|                          |                         |will not be installed.   |
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages    |
|PkgIsInstalled            |set bold;                |which are currently      |
|                          |                         |installed and for which  |
|                          |                         |no actions are scheduled.|
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|                          |                         |packages which are       |
|PkgIsInstalledHighlighted |set bold; flip reverse;  |currently installed and  |
|                          |                         |for which no actions are |
|                          |                         |scheduled.               |
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages in |
|PkgToDowngrade            |set bold;                |the package list which   |
|                          |                         |will be downgraded.      |
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|PkgToDowngradeHighlighted |set bold; flip reverse   |packages in the package  |
|                          |                         |list which will be       |
|                          |                         |downgraded.              |
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages in |
|PkgToHold                 |fg white; flip reverse;  |the package list which   |
|                          |                         |are on hold.             |
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|PkgToHoldHighlighted      |fg white;                |packages in the package  |
|                          |                         |list which are on hold.  |
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages in |
|PkgToInstall              |fg green; flip reverse;  |the package list which   |
|                          |                         |are being installed (not |
|                          |                         |upgraded) or reinstalled.|
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|                          |                         |packages in the package  |
|PkgToInstallHighlighted   |fg green;                |list which are being     |
|                          |                         |installed (not upgraded) |
|                          |                         |or reinstalled.          |
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages in |
|PkgToRemove               |fg magenta; flip reverse;|the package list which   |
|                          |                         |will be removed or       |
|                          |                         |purged.                  |
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|PkgToRemoveHighlighted    |fg magenta;              |packages in the package  |
|                          |                         |list which will be       |
|                          |                         |removed or purged.       |
|__________________________|_________________________|_________________________|
|                          |                         |The style of packages in |
|PkgToUpgrade              |fg cyan; flip reverse;   |the package list which   |
|                          |                         |will be upgraded.        |
|__________________________|_________________________|_________________________|
|                          |                         |The style of highlighted |
|PkgToUpgradeHighlighted   |fg cyan;                 |packages in the package  |
|                          |                         |list which will be       |
|                          |                         |upgraded.                |
|__________________________|_________________________|_________________________|
|                          |                         |The style of progress    |
|                          |                         |indicators such as the   |
|Progress                  |fg blue; bg yellow;      |one that appears while   |
|                          |                         |the package cache is     |
|                          |                         |being loaded.            |
|__________________________|_________________________|_________________________|
|SolutionActionApproved    |bg green;                |The style of approved    |
|                          |                         |actions in a solution.   |
|__________________________|_________________________|_________________________|
|SolutionActionRejected    |bg red;                  |The style of rejected    |
|                          |                         |actions in a solution.   |
|__________________________|_________________________|_________________________|
|                          |fg white; bg blue; set   |The style of status lines|
|Status                    |bold;                    |at the bottom of the     |
|                          |                         |screen.                  |
|__________________________|_________________________|_________________________|
|TreeBackground            |                         |The basic color of all   |
|                          |                         |visual lists and trees.  |
|__________________________|_________________________|_________________________|
|                          |fg red; bg black; set    |The color used to display|
|TrustWarning              |bold;                    |warnings about package   |
|                          |                         |trust.                   |
|__________________________|_________________________|_________________________|




Customizing the display layout

It is possible to rearrange the aptitude package list by making suitable
modifications to the configuration file.


Display Elements

The layout is stored in the configuration group Aptitude::UI::Default-Package-
View, and consists of a list of display elements:

Name Type {
  Row row;
  Column column;
  Width width;
  Height height;

  additional options...
};

This creates a display element named Name; the type of element created is
determined by Type. The Row, Column, Width, and Height options must be present;
they determine where the display element is placed. (see below for a detailed
explanation of how display elements are arranged)

For examples of how to change the display layout, see the theme definitions in
the file /usr/share/aptitude/aptitude-defaults.

The following types of display elements are available:



  Description
      This display element will contain the ``information area'' (typically a
      description of the currently selected package).

      The option PopUpDownKey gives the name of a keyboard command which will
      cause the display element to be shown or hidden. For instance, setting
      this to ShowHideDescription will give the current display element the same
      behavior as the default information area. The option PopUpDownLinked gives
      the name of another display element; the current element will be shown or
      hidden whenever the other element is.


  MainWidget
      This is a placeholder for the ``main'' display element: typically this is
      the list of packages. A display layout must contain exactly one MainWidget
      element: no more, no less.


  Static
      A region of the screen which displays some text, possibly containing
      formatting codes as described in the section called ``Customizing how
      packages are displayed''. The text to display can be given in the Columns
      option, or it can be stored in another configuration variable specified by
      the ColumnsCfg option. The color of the text is determined by the color
      named by the Color option.

      Static items can be displayed and hidden in the same way as Description
      items, using the PopUpDownKey and PopUpDownLinked options.



Placement of display elements

The display elements are arranged in a ``table''. The upper-left corner of an
element is in the cell given by its Row and Column options (typically starting
from row 0 and column 0, but this is not required). The width of an element in
cells is given by its Width option, and its height is given by its Height
option.

Once the display elements are arranged and have been given an initial amount of
space on the screen, there is likely to be space left over. If there is extra
vertical space, each row containing a display element whose RowExpand option is
true will be allocated a share of the extra space; similarly, if there is extra
horizontal space, each column containing a display element whose ColExpand
option is true will be allocated a share of the extra space.

In the event that there is not enough space, every row and column whose widgets
all have their RowShrink or ColShrink options set to true will be shrunk. If
this is not enough, all rows and columns are shrunk to fit into the available
space.

If a display element is not expanded, but its row or column is, its alignment is
determined by the RowAlign and ColAlign options. Setting them to Left, Right,
Top, Bottom, or Center will tell aptitude where to place the element within the
row or column.

For instance, the following configuration group creates a static element named
``Header'', which is three cells wide and will expand horizontally but not
vertically. It has the same color as other header lines and uses the standard
display format for header lines:

Header Static {
  Row 0;
  Column 0;
  Width 3;
  Height 1;

  ColExpand true;
  ColAlign Center;

  RowAlign Center;

  Color ScreenHeaderColor;
  ColumnsCfg HEADER;
};


Display layout option reference

The following options are available for display elements:



  ColAlign alignment;
      alignment must be either Left, Right, or Center. If the row containing the
      current display element is wider than the element itself and ColExpand is
      false, the element will be placed within the row according to the value of
      alignment.

      If this option is not present, it defaults to Left.


  ColExpand true|false;
      If this option is set to true, the column containing this display element
      will be allocated a share of any extra horizontal space that is available.

      If this option is not present, it defaults to false.


  Color colorname;
      This option applies to Static elements. colorname is the name of a color
      (for instance, ScreenStatusColor) which should be used as the ``default''
      color for this display element.

      If this option is not present, it defaults to DefaultWidgetBackground.


  ColShrink true|false;
      If this option is set to true on each element in a column and there is not
      enough horizontal space, the column will be shrunk as necessary to fit the
      available space. Note that a column may be shrunk even if ColShrink is
      false; it simply indicates that aptitude should try shrinking a particular
      column before shrinking other columns.

      If this option is not present, it defaults to false.


  Column column;
      Specifies the leftmost column containing this display element.


  Columns format;
      This option applies to Static display elements for which the ColumnsCfg
      option is not set. It sets the displayed contents of the status item; it
      is a format string as described in the section called ``Customizing how
      packages are displayed''.


  ColumnsCfg HEADER|STATUS|name;
      This option applies to Static display elements. It sets the display format
      of the current element to the value of another configuration variable: if
      it is HEADER or STATUS, the options Aptitude::UI::Package-Header-Format
      and Aptitude::UI::Package-Status-Format, repectively, are used; otherwise,
      the option name is used.

      If this option is not present, the value of the Columns option is used to
      control the contents of the static item.


  Height height;
      Specifies the height of the current display element.


  PopUpDownKey command;
      This option applies to Description and Static display elements.

      command is the name of a keyboard command (for instance,
      ShowHideDescription). When this key is pressed, the display element will
      be hidden if it is visible, and displayed if it is hidden.


  PopUpDownLinked element;
      This option applies to Description and Static display elements.

      element is the name of a display element. When element is displayed, the
      current element will also be displayed; when element is hidden, the
      current element will also be hidden.


  Row row;
      Specifies the uppermost row containing this display element.


  RowAlign alignment;
      alignment must be either Top, Bottom, or Center. If the row containing the
      current display element is taller than the element itself and RowExpand is
      false, the element will be placed within the row according to the value of
      alignment.

      If this option is not present, it defaults to Top.


  RowExpand true|false;
      If this option is set to true, the row containing this display element
      will be allocated a share of any extra vertical space that is available.

      If this option is not present, it defaults to false.


  RowShrink true|false;
      If this option is set to true on each element in a row and there is not
      enough vertical space, the row will be shrunk as necessary to fit the
      available space. Note that a row may be shrunk even if RowShrink is false;
      it simply indicates that aptitude should try shrinking a particular row
      before shrinking other rows.

      If this option is not present, it defaults to false.


  Visible true|false;
      If set to false, this display element will initially be hidden. Presumably
      only useful in conjunction with PopUpDownKey and/or PopUpDownLinked.

      If this option is not present, it defaults to true.


  Width width;
      Specifies the width of the current display element.



Configuration file reference


Configuration file format

In its basic form, aptitude's configuration file is a list of options and their
values. Each line of the file should have the form ``Option Value;'': for
instance, the following line in the configuration file sets the option
Aptitude::Theme to ``Dselect''.

Aptitude::Theme "Dselect";

An option can ``contain'' other options if they are written in curly braces
between the option and the semicolon following it, like this:

Aptitude::UI {
  Package-Status-Format "";
  Package-Display-Format "";
};

An option that contains other options is sometimes called a group. In fact, the
double colons that appear in option names are actually a shorthand way of
indicating containment: the option Aptitude::UI::Default-Grouping is contained
in the group Aptitude::UI, which itself is contained in the group Aptitude.
Thus, if you wanted to, you could set this option to "" as follows:

Aptitude {
  UI {
    Default-Grouping "";
  };
};

For more information on the format of the configuration file, see the manual
page apt.conf(5).


Locations of configuration files

aptitude's configuration is read from the following sources, in order:


  1. The user's configuration file, ~/.aptitude/config. This file is overwritten
     when the user modifies settings in the Options menu.

  2. The system configuration file, /etc/apt/apt.conf.

  3. Default values stored in /usr/share/aptitude/aptitude-defaults.

  4. Default values built into aptitude.


When an option is being checked, these sources are searched in order, and the
first one that provides a value for the option is used. For instance, setting an
option in /etc/apt/apt.conf will override aptitude's defaults for that option,
but will not override user settings in ~/.aptitude/config.


Available configuration options

The following configuration options are used by aptitude. Note that these are
not the only available configuration options; options used by the underlying apt
system are not listed here. See the manual pages apt(8) and apt.conf(5) for
information on apt options.

Option:Apt::Install-Recommends

Default:true

Description: If this option is true and Aptitude::Auto-Install is true, then
whenever you mark a package for installation, aptitude will also mark the
packages it recommends for installation. Furthermore, if this option is true,
aptitude will not consider packages to be unused (and thus will not
automatically remove them) as long as any installed package reommends them. For
more information, see the section called ``Managing automatically installed
packages''.

Option:Aptitude::Allow-Null-Upgrade

Default:false

Description: Normally, if you try to start an install run when no actions will
be performed, aptitude will print a warning and return to the package list. If
this option is true, aptitude will continue to the preview screen whenever there
are upgradable packages, rather than displaying a reminder about the Actions
->; Mark Upgradable (U) command.

Option:Aptitude::Always-Use-Safe-Resolver

Default:false

Description: If this option is true, aptitude's command-line actions will always
use a ``safe'' dependency resolver, as if --safe-resolver had been passed on the
command line.

Option:Aptitude::Autoclean-After-Update

Default:false

Description: If this option is true, aptitude will clean up obsolete files (see
Actions ->; Clean obsolete files) every time you update the package list.

Option:Aptitude::Auto-Fix-Broken

Default:true

Description: If this option is false, aptitude will ask for permission before
attempting to fix any broken packages.

Option:Aptitude::Auto-Install

Default:true

Description: If this option is true, aptitude will automatically attempt to
fulfill the dependencies of a package when you select it for installation.

Option:Aptitude::Auto-Upgrade

Default:false

Description: If this option is true, aptitude will automatically flag all
upgradable packages for upgrade when the program starts, as if you had issued
the command Actions ->; Mark Upgradable (U).

Option:Aptitude::CmdLine::Always-Prompt

Default:false

Description: In command-line mode, if this is set, aptitude will always prompt
before starting to install or remove packages, even if the prompt would normally
be skipped. This is equivalent to the -P command-line option.

Option:Aptitude::CmdLine::Assume-Yes

Default:false

Description: In command-line mode, if this option is true, aptitude will act as
if the user had answered ``yes'' to every prompt, causing most prompts to be
skipped. This is equivalent to the -y command-line option.

Option:Aptitude::CmdLine::Disable-Columns

Default:false

Description: If this option is enabled, the results of command-line searches
(performed via aptitude search) will not be formatted into fixed-width columns
or truncated to the screen width. This is equivalent to the --disable-columns
command-line option.

Option:Aptitude::CmdLine::Download-Only

Default:false

Description: In command-line mode, if this option is true, aptitude will
download package files but not install them. This is equivalent to the -
d command-line option.

Option:Aptitude::CmdLine::Fix-Broken

Default:false

Description: In command-line mode, if this option is true, aptitude will be more
aggressive when attempting to fix the dependencies of broken packages. This is
equivalent to the -f command-line option.

Option:Aptitude::CmdLine::Ignore-Trust-Violations

Default:false

Description: In command-line mode, causes aptitude to ignore the installation of
untrusted packages. This is a synonym for Apt::Get::AllowUnauthenticated.

Option:Aptitude::CmdLine::Package-Display-Format

Default:%c%a%M %p# - %d#

Description: This is a format string, as described in the section called
``Customizing how packages are displayed'', which is used to display the results
of a command-line search. This is equivalent to the -F command-line option.

Option:Aptitude::CmdLine::Package-Display-Width

Default:

Description: This option gives the width in characters for which command-line
search results should be formatted. If it is empty (the default; ie, ""), search
results will be formatted for the current terminal size, or for an 80-column
display if the terminal size cannot be determined.

Option:Aptitude::CmdLine::Request-Strictness

Default:10000

Description: When run in command-line mode, if dependency problems are
encountered, aptitude will add this value to the problem resolver score of each
action that you explicitly request.

Option:Aptitude::CmdLine::Resolver-Debug

Default:false

Description: In command-line mode, if this option is true, aptitude will print
extremely verbose information while attempting to resolve broken dependencies.
As the name suggests, this option is primarily meant to aid in debugging the
problem resolver.

Option:Aptitude::CmdLine::Resolver-Dump

Default:

Description: In command-line mode, if it is necessary to resolve broken
dependencies and this option is set to the name of a writable file, the resolver
state will be dumped to this file before any calculations are undertaken.

Option:Aptitude::CmdLine::Resolver-Show-Steps

Default:false

Description: If this option is true, then a dependency solution will be
displayed as a sequence of resolutions of individual dependencies; for instance,
``wesnoth depends upon wesnoth-data (= 1.2.4-1) -> installing wesnoth-data
1.2.4-1 (unstable)''. To toggle between the two display modes, press o at the
prompt ``Accept this solution?''.

Option:Aptitude::CmdLine::Safe-Upgrade::No-New-Installs

Default:false

Description: In command-line mode, if this option is true, the safe-upgrade
command will not attempt to resolve dependencies by installing new packages. If
upgrading package A would require package B to be newly installed, package A
will not be upgraded. This corresponds to the command-line option --no-new-
installs.

Option:Aptitude::CmdLine::Show-Deps

Default:false

Description: In command-line mode, if this option is true, aptitude will display
a brief summary of the dependencies (if any) relating to a package's state. This
is equivalent to the -D command-line option.

Option:Aptitude::CmdLine::Show-Size-Changes

Default:false

Description: In command-line mode, if this option is true, aptitude will display
the expected change in the amount of space used by each package. This is
equivalent to the -Z command-line option.

Option:Aptitude::CmdLine::Show-Versions

Default:false

Description: In command-line mode, if this option is true, aptitude will display
the version of a package that is being installed or removed. This is equivalent
to the -V command-line option.

Option:Aptitude::CmdLine::Show-Why

Default:false

Description: In command-line mode, if this option is true, aptitude will display
the manually installed packages that require each automatically installed
package, or the manually installed packages that cause a conflict with each
automatically removed package. This is equivalent to the -W command-line option
and displays the same information you can access via aptitude why or by pressing
i in a package list.

Option:Aptitude::CmdLine::Simulate

Default:false

Description: This option is deprecated; use Aptitude::Simulate instead. In
command-line mode, causes aptitude to just display the actions that would be
performed (rather than actually performing them); in the visual interface,
causes aptitude to start in read-only mode regardless of whether you are root or
not. This is equivalent to the -s command-line option.

Option:Aptitude::CmdLine::Verbose

Default:0

Description: This controls how verbose the command-line mode of aptitude is.
Every occurrence of the -v command-line option adds 1 to this value.

Option:Aptitude::CmdLine::Visual-Preview

Default:false

Description: If this option is true, aptitude will enter its visual mode to
display the preview of an installation run and to download packages.

Option:Aptitude::Debtags-Binary

Default:/usr/bin/debtags

Description: The absolute path to the debtags command. If configured with libept
support, aptitude will invoke this program whenever the package lists are
updated, passing it the arguments listed in Aptitude::Debtags-Update-Options.

Option:Aptitude::Debtags-Update-Options

Default:--local

Description: Additional options to pass to debtags update when invoking it after
the package lists are updated. These are split at whitespace; single and double-
quoted strings are recognized, so setting this to ``--vocabulary='/file with a
space'' will store the debtags vocabulary in ``/file with a space''.

Option:Aptitude::Delete-Unused

Default:true

Description: If this option is true, automatically installed packages which are
no longer required will be automatically removed. For more information, see the
section called ``Managing automatically installed packages''.

Option:Aptitude::Delete-Unused-Pattern

Default:

Description: Deprecated alias for Aptitude::Keep-Unused-Pattern. If Aptitude::
Keep-Unused-Pattern is unset or set to an empty string, the value of this
configuration option will override it. Otherwise, Aptitude::Delete-Unused-
Pattern is ignored.

Option:Aptitude::Display-Planned-Action

Default:true

Description: If this option is true, aptitude will display a preview screen
before actually carrying out the actions you have requested.

Option:Aptitude::Forget-New-On-Install

Default:false

Description: If this option is true, aptitude will clear the list of new
packages whenever you install, upgrade, or remove packages, as if you had issued
the command Actions ->; Forget new packages (f).

Option:Aptitude::Forget-New-On-Update

Default:false

Description: If this option is true, aptitude will clear the list of new
packages whenever the package list is updated, as if you had issued the command
Actions ->; Forget new packages (f).

Option:Aptitude::Get-Root-Command

Default:su:/usr/bin/su

Description: This option sets the external command that aptitude will use to
switch to the root user (see the section called ``Becoming root''). It has the
form protocol:command. protocol must be either su or sudo; it determines how
aptitude invokes the program when it wants to gain root privileges. If protocol
is su, then command -c arguments is used to become root; otherwise, aptitude
uses command arguments. The first word in command is the name of the program
that should be invoked; remaining words are treated as arguments to that
program.

Option:Aptitude::Ignore-Old-Tmp

Default:false

Description: Old versions of aptitude created a directory ~/.aptitude/.tmp which
is no longer necessary. If the directory exists and Aptitude::Ignore-Old-Tmp is
true, aptitude will ask you whether to remove this directory. This option is
automatically set to true after you reply. On the other hand, if the directory
does not exist, this option is set to false so that you will be notified if it
reappears.

Option:Aptitude::Ignore-Recommends-Important

Default:false

Description: In previous versions of aptitude, the setting Aptitude::Recommends-
Important caused recommendations to be installed automatically, the same way
that Apt::Install-Recommends does today. If this option is set to false and
Aptitude::Recommends-Important is also set to false, aptitude will set Apt::
Install-Recommends to false and set Aptitude::Ignore-Recommends-Important to
true on startup.

Option:Aptitude::Keep-Recommends

Default:false

Description: If this option is true, then aptitude will not consider packages to
be unused (and thus will not automatically remove them) as long as any installed
package recommends them, even if Apt::Install-Recommends is false. For more
information, see the section called ``Managing automatically installed
packages''.

Option:Aptitude::Keep-Suggests

Default:false

Description: If this option is true, then aptitude will not consider packages to
be unused (and thus will not automatically remove them) as long as any installed
package suggests them. For more information, see the section called ``Managing
automatically installed packages''.

Option:Aptitude::Keep-Unused-Pattern

Default:

Description: If Aptitude::Delete-Unused is true, only unused packages which do
not match this pattern (see the section called ``Search Patterns'') will be
removed. If this option is set to an empty string (the default), all unused
packages will be removed.

Option:Aptitude::LockFile

Default:/var/lock/aptitude

Description: A file that will be fcntl-locked to ensure that at most one
aptitude process can modify the cache at once. In normal circumstances, you
should never need to modify this; it may be useful for debugging. Note: if
aptitude complains that it cannot acquire a lock, this is not because the lock
file needs to be deleted. fcntl locks are managed by the kernel and will be
destroyed when the program holding them terminates; failure to acquire the lock
means that another running program is using it!

Option:Aptitude::Log

Default:/var/log/aptitude

Description: If this is set to a nonempty string, aptitude will log the package
installations, removals, and upgrades that it performs. If the value of
Aptitude::Log begins with a pipe character (ie, ``|''), the remainder of its
value is used as the name of a command into which the log will be piped: for
instance, |mail -s 'Aptitude install run' root will cause the log to be emailed
to root. To log to multiple files or commands, you may set this option to a list
of log targets.

Option:Aptitude::Parse-Description-Bullets

Default:true

Description: If this option is enabled, aptitude will attempt to automatically
detect bulleted lists in package descriptions. This will generally improve how
descriptions are displayed, but it is not entirely backwards-compatible; some
descriptions might be formatted less attractively when this option is true than
when it is false.

Option:Aptitude::Pkg-Display-Limit

Default:

Description: The default filter applied to the package list; see the section
called ``Search Patterns'' for details about its format.

Option:Aptitude::ProblemResolver::Allow-Break-Holds

Default:false

Description: If this option is set to true, the problem resolver will consider
breaking package holds or installing forbidden versions in order to resolve a
dependency. If it is set to false, these actions will be rejected by default,
although you can always enable them manually (see the section called ``Solving
Dependency Problems'').

Option:Aptitude::ProblemResolver::BreakHoldScore

Default:-300

Description: How much to reward or penalize solutions that change the state of a
held package or install a forbidden version. Note that unless Aptitude::
ProblemResolver::Allow-Break-Holds is set to true, the resolver will never break
a hold or install a forbidden version unless it has explicit permission from the
user.

Option:Aptitude::ProblemResolver::BrokenScore

Default:-100

Description: How much to reward or penalize prospective solutions based on the
number of dependencies they break. For each dependency broken by a possible
solution, this many points are added to its score; typically this should be a
negative value.

Option:Aptitude::ProblemResolver::Discard-Null-Solution

Default:true

Description: If this option is true, aptitude will never suggest cancelling all
of your proposed actions in order to resolve a dependency problem.

Option:Aptitude::ProblemResolver::EssentialRemoveScore

Default:-100000

Description: How much to reward or penalize solutions that remove an Essential
package.

Option:Aptitude::ProblemResolver::ExtraScore

Default:-1

Description: Any version of a package whose Priority is ``extra'' will have this
many points added to its score.

Option:Aptitude::ProblemResolver::FullReplacementScore

Default:500

Description: Removing a package and installing another package that fully
replaces it (i.e., conflicts with it, replaces it, and provides it) is assigned
this score.

Option:Aptitude::ProblemResolver::ImportantScore

Default:5

Description: Any version of a package whose Priority is ``important'' will have
this many points added to its score.

Option:Aptitude::ProblemResolver::Infinity

Default:1000000

Description: A ``maximum'' score for potential solutions. If a set of actions
has a score worse than -Infinity, it will be discarded immediately.

Option:Aptitude::ProblemResolver::InstallScore

Default:-20

Description: How much weight the problem resolver should give to installing a
package, if the package is not already going to be installed.

Option:Aptitude::ProblemResolver::KeepScore

Default:0

Description: How much weight the problem resolver should give to keeping a
package in its current state, if that package is not already going to be kept in
its current state.

Option:Aptitude::ProblemResolver::Max-Successors

Default:0

Description: When new possible solutions are being generated, this value
controls how long the generation procedure lasts. Successors are generated in
discrete bundles, and as soon as at least one and at most Max-Successors nodes
have been generated, successor generation terminates. Turning this value up
might cause the first few generated solutions to have higher scores; on the
other hand, it might cause each resolver ``step'' to take a long time.

Option:Aptitude::ProblemResolver::NonDefaultScore

Default:-40

Description: How much weight the problem resolver should give to installing a
non-default version of the package (one that is not the current version and not
the ``candidate version'').

Option:Aptitude::ProblemResolver::OptionalScore

Default:1

Description: Any version of a package whose Priority is ``optional'' will have
this many points added to its score.

Option:Aptitude::ProblemResolver::PreserveAutoScore

Default:0

Description: How much weight the problem resolver should give to preserving
automatic installations or removals.

Option:Aptitude::ProblemResolver::PreserveManualScore

Default:60

Description: How much weight the problem resolver should give to preserving
explicit user selections.

Option:Aptitude::ProblemResolver::RemoveScore

Default:-300

Description: How much weight the problem resolver should give to removing a
package (if it is not already marked for removal).

Option:Aptitude::ProblemResolver::RequiredScore

Default:4

Description: Any version of a package whose Priority is ``required'' will have
this many points added to its score.

Option:Aptitude::ProblemResolver::ResolutionScore

Default:50

Description: In addition to all other scoring factors, proposed solutions that
actually resolve all unsatisfied dependencies are awarded this many extra
points.

Option:Aptitude::ProblemResolver::StandardScore

Default:3

Description: Any version of a package whose Priority is ``standard'' will have
this many points added to its score.

Option:Aptitude::ProblemResolver::StepLimit

Default:5000

Description: The maximum number of ``steps'' which should be performed by the
problem resolver on each attempt to find a solution to a dependency problem.
Decreasing this number will make aptitude ``give up'' sooner; increasing it will
permit the search for a solution to consume much more time and memory before it
is aborted. Setting StepLimit to 0 will disable the problem resolver entirely.
The default value is large enough to accomodate commonly encountered situations,
while preventing aptitude from ``blowing up'' if an overly complicated problem
is encountered. (note: this applies only to command-line searches; in the visual
interface, the resolver will continue working until it reaches a solution)

Option:Aptitude::ProblemResolver::StepScore

Default:70

Description: How much to reward or penalize prospective solutions based on their
length. For each action performed by a solution, this many points are added to
its score. The larger this value is, the more the resolver tends to stick with
its first choice rather than considering alternatives; this will cause it to
produce a solution more quickly, but the solution might be of slightly lower
quality than it would otherwise be.

Option:Aptitude::ProblemResolver::Trace-Directory

Default:

Description: If this value is set, then each time the problem resolver produces
a solution, a stripped-down version of the package state sufficient to reproduce
that solution is written to the given file. If Aptitude::ProblemResolver::Trace-
File is also set, the same information will also be written to the trace file.
Trace directories are more transparent than trace files, and are more suitable
for, e.g., including in source trees as test cases.

Option:Aptitude::ProblemResolver::Trace-File

Default:

Description: If this value is set, then each time the problem resolver produces
a solution, a stripped-down version of the package state sufficient to reproduce
that solution is written to the given file. If Aptitude::ProblemResolver::Trace-
Directory is also set, the same information will also be written to the trace
directory. A trace file is simply a compressed archive of a trace directory; it
will take less space than the trace directory and is suitable for transmission
over a network.

Option:Aptitude::ProblemResolver::UndoFullReplacementScore

Default:-500

Description: Installing a package and removing another package that fully
replaces it (i.e., conflicts with it, replaces it, and provides it) is assigned
this score.

Option:Aptitude::ProblemResolver::UnfixedSoftScore

Default:-200

Description: How much to reward or penalize leaving a Recommends relationship
unresolved. This should typically be less than RemoveScore, or aptitude will
tend to remove packages rather than leaving their Recommendations unfixed. See
the section called ``Solving Dependency Problems'' for details.

Option:Aptitude::ProblemResolver::UpgradeScore

Default:0

Description: How much weight the problem resolver should give to upgrading (or
downgrading) a package to its candidate version, if the package was not already
going to be upgraded.

Option:Aptitude::ProblemResolver::WaitSteps

Default:50

Description: The number of resolver steps to perform in the foreground before
moving the resolution to the background thread. aptitude will be unresponsive
while this computation takes place; decreasing this value will make the program
more responsive, but may cause the progress indicator to appear unnecessarily.

Option:Aptitude::Purge-Unused

Default:false

Description: If this option is true and Aptitude::Delete-Unused is also true,
then packages which are unused will be purged from the system, removing their
configuration files and perhaps other important data. For more information about
which packages are considered to be ``unused'', see the section called
``Managing automatically installed packages''. THIS OPTION CAN CAUSE DATA LOSS!
DO NOT ENABLE IT UNLESS YOU KNOW WHAT YOU ARE DOING!

Option:Aptitude::Recommends-Important

Default:true

Description: This is an obsolete configuration option that has been superseded
by Apt::Install-Recommends. On startup, aptitude will copy Aptitude::Recommends-
Important (if it exists) to Apt::Install-Recommends and then clear Aptitude::
Recommends-Important in your user configuration file.

Option:Aptitude::Safe-Resolver::No-New-Installs

Default:false

Description: If this option is true, then when the ``safe'' dependency resolver
has been activated via --safe-resolver, the resolver will not be allowed to
install packages that are not currently installed. This is similar to Aptitude::
CmdLine::Safe-Upgrade::No-New-Installs, but applies only to command-line actions
other than safe-upgrade.

Option:Aptitude::Safe-Resolver::No-New-Upgrades

Default:false

Description: If this option is enabled, then when the ``safe'' dependency
resolver has been activated via --safe-resolver, the resolver will not be
allowed to resolve dependencies by upgrading packages.

Option:Aptitude::Sections::Descriptions

Default:See $prefix/share/aptitude/section-descriptions

Description: This option is a group whose members define the descriptions
displayed for each section when using the ``section'' package hierarchy grouping
policy. Descriptions are assigned to section trees based on the last component
of the name: for instance, a member of this group named ``games'' will be used
to describe the Sections ``games'', ``non-free/games'', and ``non-free/desktop/
games''. Within the text of section descriptions, the string ``\n'' will be
replaced by a line-break, and the string ``'''' will be replaced by a double-
quote character.

Option:Aptitude::Sections::Top-Sections

Default:"main"; "contrib"; "non-free"; "non-US";

Description: A configuration group whose elements are the names of the top-level
archive sections. The ``topdir'', ``subdir'', and ``subdirs'' grouping policies
use this list to interpret Section fields: if the first path element of a
package's Section is not contained in this list, or if its Section has only one
element, then the package will be grouped using the first member of this list as
its first path element. For example, if the first member of Top-Sections is
``main'', then a package whose Section is ``games'' will be treated as if its
Section field were ``games/arcade''.

Option:Aptitude::Simulate

Default:false

Description: In command-line mode, causes aptitude to just display the actions
that would be performed (rather than actually performing them); in the visual
interface, causes aptitude to start in read-only mode regardless of whether you
are root or not. This is equivalent to the -s command-line option.

Option:Aptitude::Spin-Interval

Default:500

Description: The number of milliseconds to delay in between updating the
``spinner'' that appears while the problem resolver is running.

Option:Aptitude::Suggests-Important

Default:false

Description: This is an obsolete option; use Aptitude::Keep-Suggests instead.
Setting this option to true has the same effect as setting Aptitude::Keep-
Suggests to true.

Option:Aptitude::Suppress-Read-Only-Warning

Default:false

Description: If this option is false, aptitude will display a warning the first
time that you attempt to modify package states while aptitude is in read-only
mode.

Option:Aptitude::Theme

Default:

Description: The theme that aptitude should use; see the section called
``Themes'' for more information.

Option:Aptitude::Track-Dselect-State

Default:true

Description: If this option is set to true, aptitude will attempt to detect when
a change to a package's state has been made using dselect or dpkg: for instance,
if you remove a package using dpkg, aptitude will not try to reinstall it. Note
that this may be somewhat buggy.

Option:Aptitude::UI::Advance-On-Action

Default:false

Description: If this option is set to true, changing a package's state (for
instance, marking it for installation) will cause aptitude to advance the
highlight to the next package in the current group.

Option:Aptitude::UI::Auto-Show-Reasons

Default:true

Description: If this option is set to true, selecting a package which is broken
or which appears to be causing other packages to be broken will cause the
information area to automatically display some reasons why the breakage might be
occuring.

Option:Aptitude::UI::Default-Grouping

Default:filter(missing),status,section(subdirs,passthrough),section(topdir)

Description: Sets the default grouping policy used for package lists. See the
section called ``Customizing the package hierarchy'' for additional information
on grouping policies.

Option:Aptitude::UI::Default-Package-View

Default:

Description: This option is a group whose members define the default layout of
aptitude's display. See the section called ``Customizing the display layout''
for more information.

Option:Aptitude::UI::Default-Preview-Grouping

Default:action

Description: Sets the default grouping policy used for preview screens. See the
section called ``Customizing the package hierarchy'' for additional information
on grouping policies.

Option:Aptitude::UI::Default-Sorting

Default:name

Description: The default sorting policy of package views. See the section called
``Customizing how packages are sorted'' for more information.

Option:Aptitude::UI::Description-Visible-By-Default

Default:true

Description: When a package list is first displayed, the information area (which
typically contains the long description of the current package) will be visible
if this option is true and hidden if it is false.

Option:Aptitude::UI::Exit-On-Last-Close

Default:true

Description: If this option is true, closing all the active views will quit
aptitude; otherwise, aptitude will not exit until you issue the command Actions
->; Quit (Q). See the section called ``Working with multiple views'' for
more information.

Option:Aptitude::UI::Fill-Text

Default:false

Description: If this option is true, aptitude will format descriptions so that
each line is exactly the width of the screen.

Option:Aptitude::UI::HelpBar

Default:true

Description: If this option is true, a line of information about important
keystrokes will be displayed at the top of the screen.

Option:Aptitude::UI::Incremental-Search

Default:true

Description: If this option is true, aptitude will perform ``incremental''
searches: as you type the search pattern, it will search for the next package
matching what you have typed so far.

Option:Aptitude::UI::InfoAreaTabs

Default:false

Description: If this option is true, aptitude will display tabs at the top of
the information area (the pane at the bottom of the screen) describing the
different modes the area can be set to.

Option:Aptitude::UI::Keybindings

Default:

Description: This is a group whose members define the connections between
keystrokes and commands in aptitude. For more information, see the section
called ``Customizing keybindings''.

Option:Aptitude::UI::Menubar-Autohide

Default:false

Description: If this option is set to true, the menu bar will be hidden while it
is not in use.

Option:Aptitude::UI::Minibuf-Download-Bar

Default:false

Description: If this option is set to true, aptitude will use a less obtrusive
mechanism to display the progress of downloads: a bar at the bottom of the
screen will appear which displays the current download status. While the
download is active, pressing q will abort it.

Option:Aptitude::UI::Minibuf-Prompts

Default:false

Description: If this option is true, some prompts (such as yes/no and multiple-
choice prompts) will be displayed at the bottom of the screen instead of in
dialog boxes.

Option:Aptitude::UI::New-Package-Commands

Default:true

Description: If this option is set to false, commands such as Package ->;
Install (+) will have the same deprecated behavior that they did in antique
versions of aptitude.

Option:Aptitude::UI::Package-Display-Format

Default:%c%a%M %p %Z %v %V

Description: This option controls the format string used to display packages in
package lists. For more information on format strings, see the section called
``Customizing how packages are displayed''.

Option:Aptitude::UI::Package-Header-Format

Default:%N %n #%B %u %o

Description: This option controls the format string used to display the header
line of package lists (ie, the line that appears between the package list and
the menu bar). For more information on format strings, see the section called
``Customizing how packages are displayed''.

Option:Aptitude::UI::Package-Status-Format

Default:%d

Description: This option controls the format string used to display the status
line of package lists (ie, the line that appears between the package list and
the information area). For more information on format strings, see the section
called ``Customizing how packages are displayed''.

Option:Aptitude::UI::Pause-After-Download

Default:OnlyIfError

Description: If this option is true, aptitude will display a message after it
finishes downloading packages, asking you if you want to continue with the
installation. If it is OnlyIfError, a message will only be displayed if a
download failed. Otherwise, if the option is set to false, aptitude will
immediately proceed to the next screen after completing a download.

Option:Aptitude::UI::Preview-Limit

Default:

Description: The default filter applied to the preview screen; see the section
called ``Search Patterns'' for details about its format.

Option:Aptitude::UI::Prompt-On-Exit

Default:true

Description: If this option is true, aptitude will display a confirmation prompt
before shutting down.

Option:Aptitude::UI::Styles

Default:

Description: This is a configuration group whose contents define what textual
styles aptitude uses to display information. For more information, see the
section called ``Customizing text colors and styles''.

Option:Aptitude::UI::ViewTabs

Default:true

Description: If this option is set to false, aptitude will not display ``tabs''
describing the currently active views at the top of the screen.

Option:Aptitude::Warn-Not-Root

Default:true

Description: If this option is true, aptitude will detect when you need root
privileges to do something, and ask you whether you want to switch to the root
account if you aren't root already. See the section called ``Becoming root'' for
more information.

Option:DebTags::Vocabulary

Default:/usr/share/debtags/vocabulary

Description: The location of the debtags vocabulary file; used to load in the
package tag metadata.

Option:Dir::Aptitude::state

Default:/var/lib/aptitude

Description: The directory in which aptitude's persistent state information is
stored.

Option:Quiet

Default:0

Description: This controls the quietness of the command-line mode. Setting it to
a higher value will disable more progress indicators.


Themes

A theme in aptitude is simply a collection of settings that ``go together''.
Themes work by overriding the default values of options: if an option is not set
in the system configuration file or in your personal configuration file,
aptitude will use the setting from the current theme, if one is available,
before using the standard default value.

A theme is simply a named group under Aptitude::Themes; each configuration
option contained in the group will override the corresponding option in the
global configuration. For instance, if the Dselect theme is selected, the option
Aptitude::Themes::Dselect::Aptitude::UI::Package-Display-Format will override
the default value of the option Aptitude::UI::Package-Display-Format.

To select a theme, set the configuration option Aptitude::Theme to the name of
the theme; for instance,

Aptitude::Theme Vertical-Split;

The following themes are shipped with aptitude in /usr/share/aptitude/aptitude-
defaults:



  Dselect
      This theme makes aptitude look and behave more like the legacy dselect
      package manager:

       Actions  Undo  Package  Search  Options  Views  Help
      f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
      --\ Installed Packages
        --\ Priority required
          --\ base - The Debian base system
      c   base  base-file 3.0.16      3.0.16      Debian base system
      miscellaneous fil
      c   base  base-pass 3.5.7       3.5.7       Debian base system master
      password a
      c   base  bash      2.05b-15    2.05b-15    The GNU Bourne Again SHell
      c   base  bsdutils  1:2.12-7    1:2.12-7    Basic utilities from 4.4BSD-
      Lite
      c   base  coreutils 5.0.91-2    5.0.91-2    The GNU core utilities
      c   base  debianuti 2.8.3       2.8.3       Miscellaneous utilities
      specific to
      c   base  diff      2.8.1-6     2.8.1-6     File comparison utilities
      base-files                      installed ; none
      required
      This package contains the basic filesystem hierarchy of a Debian system,
      and
      several important miscellaneous files, such as /etc/debian_version,
      /etc/host.conf, /etc/issue, /etc/motd, /etc/profile, /etc/nsswitch.conf,
      and
      others, and the text of several common licenses in use on Debian systems.







  Vertical-Split
      This theme rearranges the display: instead of the current package's
      description appearing underneath the package list, it is displayed to the
      right of the package list. This theme is useful with very wide terminals,
      and perhaps also when editing the built-in hierarchy of packages.

       Actions  Undo  Package  Search  Options  Views  Help
      f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
      aptitude 0.2.14.1
      --\ Installed Packages                  Modern computers support the
      Advanced  #
        --\ admin - Administrative utilities  Configuration and Power Interface
          --\ main - The main Debian archive  (ACPI) to allow intelligent power
      i   acpid         1.0.3-19   1.0.3-19   management on your system and to
      query
      i   alien         8.44       8.44       battery and configuration status.
      i   anacron       2.3-9      2.3-9
      i   apt-show-vers 0.07       0.07       ACPID is a completely flexible,
      totally
      i A apt-utils     0.5.25     0.5.25     extensible daemon for delivering
      ACPI
      i   apt-watch     0.3.2-2    0.3.2-2    events. It listens on a file
      i   aptitude      0.2.14.1-2 0.2.14.1-2 (/proc/acpi/event) and when an
      event
      i   at            3.1.8-11   3.1.8-11   occurs, executes programs to
      handle the
      i   auto-apt      0.3.20     0.3.20     event. The programs it executes
      are
      i   cron          3.0pl1-83  3.0pl1-83  configured through a set of
      i   debconf       1.4.29     1.4.29     configuration files, which can be
      i   debconf-i18n  1.4.29     1.4.29     dropped into place by packages or
      by
      i A debootstrap   0.2.39     0.2.39     the admin.
      i A deborphan     1.7.3      1.7.3
      i   debtags       0.16       0.16       In order to use this package you
      need a
      i A defoma        0.11.8     0.11.8     recent Kernel (=>2.4.7). This can
      be
      i   discover      2.0.4-5    2.0.4-5    one including the patches on
      Utilities for using ACPI power management



Playing Minesweeper

In case you get tired of installing and removing packages, aptitude includes a
version of the classic game ``Minesweeper''. To start it, select Actions ->;
Play Minesweeper; the initial Minesweeper board will appear:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
Minesweeper                                              10/10 mines  13 seconds





                                   +--------+
                                   |        |
                                   |        |
                                   |        |
                                   |        |
                                   |        |
                                   |        |
                                   |        |
                                   |        |
                                   +--------+





Within the rectangle that appears on the screen are hidden ten mines. Your goal
is to determine, through intuition, logic, and luck, where those mines are,
without setting any of them off! To do this, you must uncover all the squares
that do not contain mines; in doing so, you will learn important information
regarding which squares do contain mines. Beware, however: uncovering a square
that contains a mine will set it off, ending your game immediately!

To uncover a square (and find out whether a mine is hidden there), select the
square with the arrow keys and press Enter:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
Minesweeper                                             10/10 mines  387 seconds





                                   +--------+
                                   | 2......|
                                   | 2111...|
                                   |    1...|
                                   | 1111...|
                                   |11...111|
                                   |...113  |
                                   |1122    |
                                   |        |
                                   +--------+





As you can see, some of the hidden (blank) parts of the board have been revealed
in this screenshot. The squares containing a . are squares which are not next to
any mines; the numbers in the remaining squares indicate how many mines they are
next to.

If you think you know where a mine is, you can place a ``flag'' on it. To do
this, select the suspected square and press f. For instance, in the screenshot
below, I decided that the square on the left-hand side of the board looked
suspicious...

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
Minesweeper                                              9/10 mines  961 seconds





                                   +--------+
                                   | 2......|
                                   | 2111...|
                                   |    1...|
                                   |F1111...|
                                   |11...111|
                                   |...113  |
                                   |1122    |
                                   |        |
                                   +--------+





As you can see, an F appeared in the selected square. It is no longer possible
to uncover this square, even accidentally, until the flag is removed (by
pressing f again). Once you have placed flags on all the mines that are next to
a square (for instance, the squares labelled 1 next to the flag above), you can
``sweep'' around the square. This is just a convenient shortcut to uncover all
the squares next to it (except those containing a flag, of course). For
instance, sweeping around the 1 above:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
Minesweeper                                              9/10 mines  2290
seconds





                                   +--------+
                                   | 2......|
                                   | 2111...|
                                   |221 1...|
                                   |F1111...|
                                   |11...111|
                                   |...113  |
                                   |1122    |
                                   |        |
                                   +--------+





Luckily (or was it luck?), my guess about the location of that mine was correct.
If I had been wrong, I would have lost immediately:

 Actions  Undo  Package  Search  Options  Views  Help
f10: Menu  ?: Help  q: Quit  u: Update  g: Download/Install/Remove Pkgs
Minesweeper                                   Minesweeper    Lost in 2388
seconds





                                   +--------+
                                   |^2......|
                                   |^2111...|
                                   |221^1...|
                                   |^1111...|
                                   |11...111|
                                   |...113^ |
                                   |1122* ^ |
                                   | ^ ^   ^|
                                   +--------+





When you lose, the locations of all the mines are revealed: unexploded mines are
indicated by a caret symbol (^), and the one you ``stepped on'' is indicated by
an asterisk (*).



--------------------------------------------------------------------------------
[7]I am pleased to say that the number of requests of this sort fell off
precipitously following the initial publication of this Guide. It would be a
happy occurrence if there was a connection between the two events.

[8]This is sometimes referred to as an ``install run'', even though you might be
upgrading or removing packages in addition to installing them.

[9]As noted above, it does not indicate that the packages in the archive are
secure, or even non-malicious; it merely shows that they are genuine.

[10] More precisely: they will be removed when there is no path via Depends,
PreDepends, or Recommends to them from a manually installed package. If
Aptitude::Keep-Suggests is true, a Suggests relationship is also enough to keep
a package installed.

[11] aptitude will only treat the comma as special if there is a second
argument, so (for instance) ``?name(apt,itude)'' searches for the string
``apt,itude'' in the Name field of packages.

While this behavior is well-defined, it may be surprising; I recommend using
quoted strings for any pattern that contains characters that could have a
special meaning.

[12] Characters with a special meaning include: ``+'', ``-'', ``.'', ``('',
``)'', ``|'', ``['', ``]'', ``^'', ``$'', and ``?''. Note that some of these are
also aptitude metacharacters, so if you want to type (for instance) a literal
``|'', it must be double-escaped: ``?description(\~|)'' will match packages
whose description contains a vertical bar character (``|'').

[13] The backslash escapes \\, \n, and \t are also available.

[14] Astute readers will note that this is essentially a way to explicitly name
the variable in the lambda;-terms corresponding to the term. A typical term would
have the form ``lambda; x . name-equals(x, pattern)''; giving this an explicit
target makes x visible in the search language.

[15] This is provided largely for symmetry with ?true.

[16]Currently tagging is not supported; this escape is for future use.

[17] On some terminals, a ``yellow'' background will actually come out brown.


Chapter 3. aptitude FAQ


  ``What ... is your name?''                                    

  ``I am Arthur, King of the Britons.''

  ``What ... is your quest?''

  ``I seek the Holy Grail!''

  ``What ... is the airspeed velocity of an unladen swallow?''

  ``What do you mean? An African or a European swallow?''

  ``Huh? I ... I don't kn---AAAAAUUUGGGHH!''

                              -- Monty Python and the Holy Grail




  3.1. How can I find exactly one package by name?

  3.2. How can I find broken packages?

  3.3. I want to select text, why doesn't aptitude let me disable the mouse?


3.1. How can I find exactly one package by name?

     As mentioned in the section called ``Search Patterns'', when you search for
     a package by name, the text you enter is actually a regular expression.
     Thus, the search pattern ``^name$'' will match only a package named name.

     For instance, you can find apt (but not aptitude or synaptic) by entering
     ^apt$; you can find g++ (but not g++-2.95 or g++-3.0) by entering ^g\+\+$.

3.2. How can I find broken packages?

     Use the command Search ->; Find Broken (b).

3.3. I want to select text, why doesn't aptitude let me disable the mouse?

     Normally, you cannot select text in an xterm while a program running in
     that terminal (such as aptitude) is using the mouse. However, you can
     override this behavior and perform a selection by holding the Shift key
     down while you click on the terminal.



Chapter 4. Credits


  No-one remembers the singer. The song remains.  

                 -- Terry Pratchett, The Last Hero


This section commemorates some of the people who have contributed to aptitude
over its lifetime.


 [Note]  Note

         This section is presently rather incomplete and will likely be updated
         and expanded as time goes on (in particular, there are many missing
         translation credits due to the huge number of sources of translations
         [18]). If you think you should be on this list, please email
         <dburrows@debian.org> with an explanation of why you think so.


Translations and Internationalization



  Brazilian translation
      Andre Luis Lopes, Gustavo Silva


  Chinese translation
      Carlos Z.F. Liu


  Czech translation
      Miroslav Kure


  Danish translation
      Morten Brix Pedersen, Morten Bo Johansen


  Dutch translation
      Luk Claes


  Finnish translation
      Jaakko Kangasharju


  French translation
      Martin Quinson, Jean-Luc Coulon


  German translation
      Sebastian Schaffert, Erich Schubert, Sebastian Kapfer, Jens Seidel


  Italian translation
      Danilo Piazzalunga


  Japanese translation
      Yasuo Eto, Noritada Kobayashi


  Lithuanian translation
      Darius ?itkevicius


  Polish translation
      Michal Politowski


  Portuguese translation
      Nuno Sénica, Miguel Figueiredo


  Norwegian translation
      Håvard Korsvoll


  Spanish translation
      Jordi Malloch, Ruben Porras


  Swedish translation
      Daniel Nylander


  Initial i18n patch
      Masato Taruishi


  i18n triaging and maintainence
      Christian Perrier


Documentation



  User's Manual
      Daniel Burrows


Programming



  Program design and implementation
      Daniel Burrows


  Support for the dpkg Breaks field
      Ian Jackson, Michael Vogt




--------------------------------------------------------------------------------
[18] It should be possible to compile a fairly complete list of i18n
contributors based on the ChangeLog, its references to the Debian bug tracking
system, and the revision history of aptitude, but doing so will require a large
investment of time that is not currently available.



Command-Line Reference

--------------------------------------------------------------------------------
Table of Contents



  aptitude -- high-level interface to the package manager

  aptitude-create-state-bundle -- bundle the current aptitude state

  aptitude-run-state-bundle -- unpack an aptitude state bundle and invoke
  aptitude on it


Name

aptitude -- high-level interface to the package manager


Synopsis

aptitude [options...] { autoclean | clean | forget-new | keep-all | update |
safe-upgrade }

aptitude [options...] { changelog | full-upgrade | download | forbid-version |
hold | install | markauto | purge | reinstall | remove | show | unhold |
unmarkauto | build-dep | build-depends } packages...

aptitude extract-cache-subset output-directory packages...

aptitude [options...] search patterns...

aptitude [options...] { add-user-tag | remove-user-tag } tag packages...

aptitude [options...] { why | why-not } [patterns...] package

aptitude [-S fname] [ -u | -i ]

aptitude help


Description

aptitude is a text-based interface to the Debian GNU/Linux package system.

It allows the user to view the list of packages and to perform package
management tasks such as installing, upgrading, and removing packages. Actions
may be performed from a visual interface or from the command-line.


Command-Line Actions

The first argument which does not begin with a hyphen (``-'') is considered to
be an action that the program should perform. If an action is not specified on
the command-line, aptitude will start up in visual mode.

The following actions are available:



  install
      Install one or more packages. The packages should be listed after the
      ``install'' command; if a package name contains a tilde character (``~'')
      or a question mark (``?''), it will be treated as a search pattern and
      every package matching the pattern will be installed (see the section
      ``Search Patterns'' in the aptitude reference manual).

      To select a particular version of the package, append ``=version'' to the
      package name: for instance, ``aptitude install apt=0.3.1''. Similarly, to
      select a package from a particular archive, append ``/archive'' to the
      package name: for instance, ``aptitude install apt/experimental''.

       Not every package listed on the command line has to be installed; you can
      tell aptitude to do something different with a package by appending an
      ``override specifier'' to the name of the package. For example, aptitude
      remove wesnoth+ will install wesnoth, not remove it. The following
      override specifiers are available:



        package+
            Install package.


        package+M
            Install package and immediately mark it as automatically installed
            (note that if nothing depends on package, this will cause it to be
            immediately removed).


        package-
            Remove package.


        package_
            Purge package: remove it and all its associated configuration and
            data files.


        package=
            Place package on hold: cancel any active installation, upgrade, or
            removal, and prevent this package from being automatically upgraded
            in the future.


        package:
            Keep package at its current version: cancel any installation,
            removal, or upgrade. Unlike ``hold'' (above) this does not prevent
            automatic upgrades in the future.


        package&M
            Mark package as having been automatically installed.


        package&m
            Mark package as having been manually installed.


      As a special case, ``install'' with no arguments will act on any stored/
      pending actions.


       [Note]  Note

               Once you enter Y at the final confirmation prompt, the
               ``install'' command will modify aptitude's stored information
               about what actions to perform. Therefore, if you issue (e.g.) the
               command ``aptitude install foo bar'' and then abort the
               installation once aptitude has started downloading and installing
               packages, you will need to run ``aptitude remove foo bar'' to
               cancel that order.



  remove, purge, hold, unhold, keep, reinstall
      These commands are the same as ``install'', but apply the named action to
      all packages given on the command line for which it is not overridden. The
      difference between hold and keep is that hold will cause a package to be
      ignored by future safe-upgrade or full-upgrade commands, while keep merely
      cancels any scheduled actions on the package. unhold will allow a package
      to be upgraded by future safe-upgrade or full-upgrade commands, without
      otherwise altering its state.

      For instance, ``aptitude remove '~ndeity''' will remove all packages whose
      name contains ``deity''.


  markauto, unmarkauto
      Mark packages as automatically installed or manually installed,
      respectively. Packages are specified in exactly the same way as for the
      ``install'' command. For instance, ``aptitude markauto '~slibs''' will
      mark all packages in the ``libs'' section as having been automatically
      installed.

      For more information on automatically installed packages, see the section
      ``Managing Automatically Installed Packages'' in the aptitude reference
      manual.


  build-depends, build-dep
      Satisfy the build-dependencies of a package. Each package name may be a
      source package, in which case the build dependencies of that source
      package are installed; otherwise, binary packages are found in the same
      way as for the ``install'' command, and the build-dependencies of the
      source packages that build those binary packages are satisfied.

      If the command-line parameter --arch-only is present, only architecture-
      dependent build dependencies (i.e., not Build-Depends-Indep or Build-
      Conflicts-Indep) will be obeyed.


  forbid-version
      Forbid a package from being upgraded to a particular version. This will
      prevent aptitude from automatically upgrading to this version, but will
      allow automatic upgrades to future versions. By default, aptitude will
      select the version to which the package would normally be upgraded; you
      may override this selection by appending ``=version'' to the package name:
      for instance, ``aptitude forbid-version vim=1.2.3.broken-4''.

      This command is useful for avoiding broken versions of packages without
      having to set and clear manual holds. If you decide you really want the
      forbidden version after all, the ``install'' command will remove the ban.


  update
      Updates the list of available packages from the apt sources (this is
      equivalent to ``apt-get update'')


  safe-upgrade
      Upgrades installed packages to their most recent version. Installed
      packages will not be removed unless they are unused (see the section
      ``Managing Automatically Installed Packages'' in the aptitude reference
      manual). Packages which are not currently installed may be installed to
      resolve dependencies unless the --no-new-installs command-line option is
      supplied.

      It is sometimes necessary to remove one package in order to upgrade
      another; this command is not able to upgrade packages in such situations.
      Use the full-upgrade command to upgrade as many packages as possible.


  full-upgrade
      Upgrades installed packages to their most recent version, removing or
      installing packages as necessary. This command is less conservative than
      safe-upgrade and thus more likely to perform unwanted actions. However, it
      is capable of upgrading packages that safe-upgrade cannot upgrade.


       [Note]  Note

               This command was originally named dist-upgrade for historical
               reasons, and aptitude still recognizes dist-upgrade as a synonym
               for full-upgrade.



  keep-all
      Cancels all scheduled actions on all packages; any packages whose sticky
      state indicates an installation, removal, or upgrade will have this sticky
      state cleared.


  forget-new
      Forgets all internal information about what packages are ``new''
      (equivalent to pressing ``f'' when in visual mode).


  search
      Searches for packages matching one of the patterns supplied on the command
      line. All packages which match any of the given patterns will be
      displayed; for instance, ``aptitude search '~N' edit'' will list all
      ``new'' packages and all packages whose name contains ``edit''. For more
      information on search patterns, see the section ``Search Patterns'' in the
      aptitude reference manual.

      Unless you pass the -F option, the output of aptitude search will look
      something like this:

      i   apt                             - Advanced front-end for dpkg

      pi  apt-build                       - frontend to apt to build, optimize
      and in
      cp  apt-file                        - APT package searching utility -
      - command-
      ihA raptor-utils                    - Raptor RDF Parser utilities

      Each search result is listed on a separate line. The first character of
      each line indicates the current state of the package: the most common
      states are p, meaning that no trace of the package exists on the system,
      c, meaning that the package was deleted but its configuration files remain
      on the system, i, meaning that the package is installed, and v, meaning
      that the package is virtual. The second character indicates the stored
      action (if any; otherwise a blank space is displayed) to be performed on
      the package, with the most common actions being i, meaning that the
      package will be installed, d, meaning that the package will be deleted,
      and p, meaning that the package and its configuration files will be
      removed. If the third character is A, the package was automatically
      installed.

      For a complete list of the possible state and action flags, see the
      section ``Accessing Package Information'' in the aptitude reference guide.
      To customize the output of search, see the command-line options -F and --
      sort.


  show
      Displays detailed information about one or more packages, listed following
      the search command. If a package name contains a tilde character (``~'')
      or a question mark (``?''), it will be treated as a search pattern and all
      matching packages will be displayed (see the section ``Search Patterns''
      in the aptitude reference manual).

      If the verbosity level is 1 or greater (i.e., at least one -v is present
      on the command-line), information about all versions of the package is
      displayed. Otherwise, information about the ``candidate version'' (the
      version that ``aptitude install'' would download) is displayed.

      You can display information about a different version of the package by
      appending =version to the package name; you can display the version from a
      particular archive by appending /archive to the package name. If either of
      these is present, then only the version you request will be displayed,
      regardless of the verbosity level.

      If the verbosity level is 1 or greater, the package's architecture,
      compressed size, filename, and md5sum fields will be displayed. If the
      verbosity level is 2 or greater, the select version or versions will be
      displayed once for each archive in which they are found.


  add-user-tag, remove-user-tag
      Adds a user tag to or removes a user tag from the selected group of
      packages. If a package name contains a tilde (``~'') or question mark
      (``?''), it is treated as a search pattern and the tag is added to or
      removed from all the packages that match the pattern (see the section
      ``Search Patterns'' in the aptitude reference manual).

      User tags are arbitrary strings associated with a package. They can be
      used with the ?user-tag(tag) search term, which will select all the
      packages that have a user tag matching tag.


  why, why-not
      Explains the reason that a particular package should or cannot be
      installed on the system.

      This command searches for packages that require or conflict with the given
      package. It displays a sequence of dependencies leading to the target
      package, along with a note indicating the installed state of each package
      in the dependency chain:

      $ aptitude why kdepim
      i   nautilus-data Recommends nautilus
      i A nautilus      Recommends desktop-base (>= 0.2)
      i A desktop-base  Suggests   gnome | kde | xfce4 | wmaker
      p   kde           Depends    kdepim (>= 4:3.4.3)

      The command why finds a dependency chain that installs the package named
      on the command line, as above. Note that the dependency that aptitude
      produced in this case is only a suggestion. This is because no package
      currently installed on this computer depends on or recommends the kdepim
      package; if a stronger dependency were available, aptitude would have
      displayed it.

      In contrast, why-not finds a dependency chain leading to a conflict with
      the target package:

      $ aptitude why-not textopo
      i   ocaml-core          Depends   ocamlweb
      i A ocamlweb            Depends   tetex-extra | texlive-latex-extra
      i A texlive-latex-extra Conflicts textopo

      If one or more patterns are present, then aptitude will begin its search
      at these patterns; that is, the first package in the chain it prints will
      be a package matching the pattern in question. The patterns are considered
      to be package names unless they contain a tilde character (``~'') or a
      question mark (``?''), in which case they are treated as search patterns
      (see the section ``Search Patterns'' in the aptitude reference manual).

      If no patterns are present, then aptitude will search for dependency
      chains beginning at manually installed packages. This effectively shows
      the packages that have caused or would cause a given package to be
      installed.


       [Note]  Note

               aptitude why does not perform full dependency resolution; it only
               displays direct relationships between packages. For instance, if
               A requires B, C requires D, and B and C conflict, ``aptitude why-
               not D'' will not produce the answer ``A depends on B, B conflicts
               with C, and D depends on C''.


      By default aptitude outputs only the ``most installed, strongest,
      tightest, shortest'' dependency chain. That is, it looks for a chain that
      only contains packages which are installed or will be installed; it looks
      for the strongest possible dependencies under that restriction; it looks
      for chains that avoid ORed dependencies and Provides; and it looks for the
      shortest dependency chain meeting those criteria. These rules are
      progressively weakened until a match is found.

      If the verbosity level is 1 or more, then all the explanations aptitude
      can find will be displayed, in inverse order of relevance. If the
      verbosity level is 2 or more, a truly excessive amount of debugging
      information will be printed to standard output.

      This command returns 0 if successful, 1 if no explanation could be
      constructed, and -1 if an error occured.


  clean
      Removes all previously downloaded .deb files from the package cache
      directory (usually /var/cache/apt/archives).


  autoclean
      Removes any cached packages which can no longer be downloaded. This allows
      you to prevent a cache from growing out of control over time without
      completely emptying it.


  changelog
      Downloads and displays the Debian changelog for each of the given source
      or binary packages.

      By default, the changelog for the version which would be installed with
      ``aptitude install'' is downloaded. You can select a particular version of
      a package by appending =version to the package name; you can select the
      version from a particular archive by appending /archive to the package
      name.


  download
      Downloads the .deb file for the given package to the current directory. If
      a package name contains a tilde character (``~'') or a question mark
      (``?''), it will be treated as a search pattern and all the matching
      packages will be downloaded (see the section ``Search Patterns'' in the
      aptitude reference manual).

      By default, the version which would be installed with ``aptitude install''
      is downloaded. You can select a particular version of a package by
      appending =version to the package name; you can select the version from a
      particular archive by appending /archive to the package name.


  extract-cache-subset
      Copy the apt configuration directory (/etc/apt) and a subset of the
      package database to the specified directory. If no packages are listed,
      the entire package database is copied; otherwise only the entries
      corresponding to the named packages are copied. Each package name may be a
      search pattern, and all the packages matching that pattern will be
      selected (see the section ``Search Patterns'' in the aptitude reference
      manual). Any existing package database files in the output directory will
      be overwritten.

      Dependencies in binary package stanzas will be rewritten to remove
      references to packages not in the selected set.


  help
      Displays a brief summary of the available commands and options.



Options

The following options may be used to modify the behavior of the actions
described above. Note that while all options will be accepted for all commands,
some options don't apply to particular commands and will be ignored by those
commands.



  --add-user-tag tag
      For full-upgrade, safe-upgrade, forbid-version, hold, install, keep-all,
      markauto, unmarkauto, purge, reinstall, remove, unhold, and unmarkauto:
      add the user tag tag to all packages that are installed, removed, or
      upgraded by this command as if with the add-user-tag command.


  --add-user-tag-to tag,pattern
      For full-upgrade, safe-upgrade forbid-version, hold, install, keep-all,
      markauto, unmarkauto, purge, reinstall, remove, unhold, and unmarkauto:
      add the user tag tag to all packages that match pattern as if with the
      add-user-tag command. The pattern is a search pattern as described in the
      section ``Search Patterns'' in the aptitude reference manual.

      For instance, aptitude safe-upgrade --add-user-tag-to "new-
      installs,?action(install)" will add the tag new-installs to all the
      packages installed by the safe-upgrade command.


  --allow-new-upgrades
      When the safe resolver is being used (i.e., --safe-resolver was passed or
      Aptitude::Always-Use-Safe-Resolver is set to true), allow the dependency
      resolver to install upgrades for packages regardless of the value of
      Aptitude::Safe-Resolver::No-New-Upgrades.


  --allow-new-installs
      Allow the safe-upgrade command to install new packages; when the safe
      resolver is being used (i.e., --safe-resolver was passed or Aptitude::
      Always-Use-Safe-Resolver is set to true), allow the dependency resolver to
      install new packages. This option takes effect regardless of the value of
      Aptitude::Safe-Resolver::No-New-Installs.


  --allow-untrusted
      Install packages from untrusted sources without prompting. You should only
      use this if you know what you are doing, as it could easily compromise
      your system's security.


  --disable-columns
      This option causes aptitude search to output its results without any
      special formatting. In particular: normally aptitude will add whitespace
      or truncate search results in an attempt to fit its results into vertical
      ``columns''. With this flag, each line will be formed by replacing any
      format escapes in the format string with the correponding text; column
      widths will be ignored.

      For instance, the first few lines of output from ``aptitude search -F '%p
      %V' --disable-columns libedataserver'' might be:

      disksearch 1.2.1-3
      hp-search-mac 0.1.3
      libbsearch-ruby 1.5-5
      libbsearch-ruby1.8 1.5-5
      libclass-dbi-abstractsearch-perl 0.07-2
      libdbix-fulltextsearch-perl 0.73-10

      As in the above example, --disable-columns is often useful in combination
      with a custom display format set using the command-line option -F.

      This corresponds to the configuration option Aptitude::CmdLine::Disable-
      Columns.


  -D, --show-deps
      For commands that will install or remove packages (install, full-upgrade,
      etc), show brief explanations of automatic installations and removals.

      This corresponds to the configuration option Aptitude::CmdLine::Show-Deps.


  -d, --download-only
      Download packages to the package cache as necessary, but do not install or
      remove anything. By default, the package cache is stored in /var/cache/
      apt/archives.

      This corresponds to the configuration option Aptitude::CmdLine::Download-
      Only.


   -F format, --display-format format
      Specify the format which should be used to display output from the search
      command. For instance, passing ``%p %V %v'' for format will display a
      package's name, followed by its currently installed version and its
      available version (see the section ``Customizing how packages are
      displayed'' in the aptitude reference manual for more information).

      The command-line option --disable-columns is often useful in combination
      with -F.

      This corresponds to the configuration option Aptitude::CmdLine::Package-
      Display-Format.


  -f
      Try hard to fix the dependencies of broken packages, even if it means
      ignoring the actions requested on the command line.

      This corresponds to the configuration item Aptitude::CmdLine::Fix-Broken.


  --full-resolver
      When package dependency problems are encountered, use the default ``full''
      resolver to solve them. Unlike the ``safe'' resolver activated by --safe-
      resolver, the full resolver will happily remove packages to fulfill
      dependencies. It can resolve more situations than the safe algorithm, but
      its solutions are more likely to be undesirable.

      This option can be used to force the use of the full resolver even when
      Aptitude::Always-Use-Safe-Resolver is true. The safe-upgrade command never
      uses the full resolver and does not accept the --full-resolver option.


  -h, --help
      Display a brief help message. Identical to the help action.


   --no-new-installs
      Prevent safe-upgrade from installing any new packages; when the safe
      resolver is being used (i.e., --safe-resolver was passed or Aptitude::
      Always-Use-Safe-Resolver is set to true), forbid the dependency resolver
      from installing new packages. This option takes effect regardless of the
      value of Aptitude::Safe-Resolver::No-New-Installs.

      This mimics the historical behavior of apt-get upgrade.

      This corresponds to the configuration option Aptitude::CmdLine::Safe-
      Upgrade::No-New-Installs.


  --no-new-upgrades
      When the safe resolver is being used (i.e., --safe-resolver was passed or
      Aptitude::Always-Use-Safe-Resolver is set to true), allow the dependency
      resolver to install new packages regardless of the value of Aptitude::
      Safe-Resolver::No-New-Installs.


  -O order, --sort order
      Specify the order in which output from the search command should be
      displayed. For instance, passing ``installsize'' for order will list
      packages in order according to their size when installed (see the section
      ``Customizing how packages are sorted'' in the aptitude reference manual
      for more information).


  -o key=value
      Set a configuration file option directly; for instance, use -o Aptitude::
      Log=/tmp/my-log to log aptitude's actions to /tmp/my-log. For more
      information on configuration file options, see the section ``Configuration
      file reference'' in the aptitude reference manual.


  -P, --prompt
      Always display a prompt before downloading, installing or removing
      packages, even when no actions other than those explicitly requested will
      be performed.

      This corresponds to the configuration option Aptitude::CmdLine::Always-
      Prompt.


  --purge-unused
      Purge packages that are no longer required by any installed package. This
      is equivalent to passing ``-o Aptitude::Purge-Unused=true'' as a command-
      line argument.


  -q[=n], --quiet[=n]
      Suppress all incremental progress indicators, thus making the output
      loggable. This may be supplied multiple times to make the program quieter,
      but unlike apt-get, aptitude does not enable -y when -q is supplied more
      than once.

      The optional =n may be used to directly set the amount of quietness (for
      instance, to override a setting in /etc/apt/apt.conf); it causes the
      program to behave as if -q had been passed exactly n times.


  -R, --without-recommends
      Do not treat recommendations as dependencies when installing new packages
      (this overrides settings in /etc/apt/apt.conf and ~/.aptitude/config).
      Packages previously installed due to recommendations will not be removed.

      This corresponds to the pair of configuration options Apt::Install-
      Recommends and Aptitude::Keep-Recommends.


  -r, --with-recommends
      Treat recommendations as dependencies when installing new packages (this
      overrides settings in /etc/apt/apt.conf and ~/.aptitude/config).

      This corresponds to the configuration option Apt::Install-Recommends


  --remove-user-tag tag
      For full-upgrade, safe-upgrade forbid-version, hold, install, keep-all,
      markauto, unmarkauto, purge, reinstall, remove, unhold, and unmarkauto:
      remove the user tag tag from all packages that are installed, removed, or
      upgraded by this command as if with the add-user-tag command.


  --remove-user-tag-from tag,pattern
      For full-upgrade, safe-upgrade forbid-version, hold, install, keep-all,
      markauto, unmarkauto, purge, reinstall, remove, unhold, and unmarkauto:
      remove the user tag tag from all packages that match pattern as if with
      the remove-user-tag command. The pattern is a search pattern as described
      in the section ``Search Patterns'' in the aptitude reference manual.

      For instance, aptitude safe-upgrade --remove-user-tag-from "not-
      upgraded,?action(upgrade)" will remove the not-upgraded tag from all
      packages that the safe-upgrade command is able to upgrade.


  -s, --simulate
      In command-line mode, print the actions that would normally be performed,
      but don't actually perform them. This does not require root privileges. In
      the visual interface, always open the cache in read-only mode regardless
      of whether you are root.

      This corresponds to the configuration option Aptitude::Simulate.


  --safe-resolver
      When package dependency problems are encountered, use a ``safe'' algorithm
      to solve them. This resolver attempts to preserve as many of your choices
      as possible; it will never remove a package or install a version of a
      package other than the package's default candidate version. It is the same
      algorithm used in safe-upgrade; indeed, aptitude --safe-resolver full-
      upgrade is equivalent to aptitude safe-upgrade. Because safe-upgrade
      always uses the safe resolver, it does not accept the --safe-resolver
      flag.

      This option is equivalent to setting the configuration variable Aptitude::
      Always-Use-Safe-Resolver to true.


  --schedule-only
      For commands that modify package states, schedule operations to be
      performed in the future, but don't perform them. You can execute scheduled
      actions by running aptitude install with no arguments. This is equivalent
      to making the corresponding selections in visual mode, then exiting the
      program normally.

      For instance, aptitude --schedule-only install evolution will schedule the
      evolution package for later installation.


  -t release, --target-release release
      Set the release from which packages should be installed. For instance,
      ``aptitude -t experimental ...'' will install packages from the
      experimental distribution unless you specify otherwise. For the command-
      line actions ``changelog'', ``download'', and ``show'', this is equivalent
      to appending /release to each package named on the command-line; for other
      commands, this will affect the default candidate version of packages
      according to the rules described in apt_preferences(5).

      This corresponds to the configuration item APT::Default-Release.


  -V, --show-versions
      Show which versions of packages will be installed.

      This corresponds to the configuration option Aptitude::CmdLine::Show-
      Versions.


  -v, --verbose
      Causes some commands (for instance, show) to display extra information.
      This may be supplied multiple times to get more and more information.

      This corresponds to the configuration option Aptitude::CmdLine::Verbose.


  --version
      Display the version of aptitude and some information about how it was
      compiled.


  --visual-preview
      When installing or removing packages from the command line, instead of
      displaying the usual prompt, start up the visual interface and display its
      preview screen.


  -W, --show-why
      In the preview displayed before packages are installed or removed, show
      which manually installed package requires each automatically installed
      package. For instance:

      $ aptitude --show-why install mediawiki
      ...
      The following NEW packages will be installed:
        libapache2-mod-php5{a} (for mediawiki)  mediawiki  php5{a} (for
      mediawiki)
        php5-cli{a} (for mediawiki)  php5-common{a} (for mediawiki)
        php5-mysql{a} (for mediawiki)

      When combined with -v or a non-zero value for Aptitude::CmdLine::Verbose,
      this displays the entire chain of dependencies that lead each package to
      be installed. For instance:

      $ aptitude -v --show-why install libdb4.2-dev
      The following NEW packages will be installed:
        libdb4.2{a} (libdb4.2-dev D: libdb4.2)  libdb4.2-dev
      The following packages will be REMOVED:
        libdb4.4-dev{a} (libdb4.2-dev C: libdb-dev P<- libdb-dev)

      This option will also describe why packages are being removed, as shown
      above. In this example, libdb4.2-dev conflicts with libdb-dev, which is
      provided by libdb-dev.

      This argument corresponds to the configuration option Aptitude::CmdLine::
      Show-Why and displays the same information that is computed by aptitude
      why and aptitude why-not.


  -w width, --width width
      Specify the display width which should be used for output from the search
      command (by default, the terminal width is used).

      This corresponds to the configuration option Aptitude::CmdLine::Package-
      Display-Width


  -y, --assume-yes
      When a yes/no prompt would be presented, assume that the user entered
      ``yes''. In particular, suppresses the prompt that appears when
      installing, upgrading, or removing packages. Prompts for ``dangerous''
      actions, such as removing essential packages, will still be displayed.
      This option overrides -P.

      This corresponds to the configuration option Aptitude::CmdLine::Assume-
      Yes.


  -Z
      Show how much disk space will be used or freed by the individual packages
      being installed, upgraded, or removed.

      This corresponds to the configuration option Aptitude::CmdLine::Show-Size-
      Changes.


The following options apply to the visual mode of the program, but are primarily
for internal use; you generally won't need to use them yourself.



  -i
      Displays a download preview when the program starts (equivalent to
      starting the program and immediately pressing ``g''). You cannot use this
      option and ``-u'' at the same time.


  -S fname
      Loads the extended state information from fname instead of the standard
      state file.


  -u
      Begins updating the package lists as soon as the program starts. You
      cannot use this option and -i at the same time.



Environment



  HOME
      If $HOME/.aptitude exists, aptitude will store its configuration file in
      $HOME/.aptitude/config. Otherwise, it will look up the current user's home
      directory using getpwuid(2) and place its configuration file there.


  PAGER
      If this environment variable is set, aptitude will use it to display
      changelogs when ``aptitude changelog'' is invoked. If not set, it defaults
      to more.


  TMP
      If TMPDIR is unset, aptitude will store its temporary files in TMP if that
      variable is set. Otherwise, it will store them in /tmp.


  TMPDIR
      aptitude will store its temporary files in the directory indicated by this
      environment variable. If TMPDIR is not set, then TMP will be used; if TMP
      is also unset, then aptitude will use /tmp.



Files



  /var/lib/aptitude/pkgstates
      The file in which stored package states and some package flags are stored.




  /etc/apt/apt.conf, /etc/apt/apt.conf.d/*, ~/.aptitude/config
      The configuration files for aptitude. ~/.aptitude/config overrides /etc/
      apt/apt.conf. See apt.conf(5) for documentation of the format and contents
      of these files.



See Also

apt-get(8), apt(8), /usr/share/doc/aptitude/html/lang/index.html from the
package aptitude-doc-lang

--------------------------------------------------------------------------------

Name

aptitude-create-state-bundle -- bundle the current aptitude state


Synopsis

aptitude-create-state-bundle [options...] output-file


Description

aptitude-create-state-bundle produces a compressed archive storing the files
that are required to replicate the current package archive state. The following
files and directories are included in the bundle:


* $HOME/.aptitude

* /var/lib/aptitude

* /var/lib/apt

* /var/cache/apt/*.bin

* /etc/apt

* /var/lib/dpkg/status


The output of this program can be used as an argument to aptitude-run-state-
bundle(1).


Options



  --force-bzip2
      Override the autodetection of which compression algorithm to use. By
      default, aptitude-create-state-bundle uses bzip2(1) if it is available,
      and gzip(1) otherwise. Passing this option forces the use of bzip2 even if
      it doesn't appear to be available.


  --force-gzip
      Override the autodetection of which compression algorithm to use. By
      default, aptitude-create-state-bundle uses bzip2(1) if it is available,
      and gzip(1) otherwise. Passing this option forces the use of gzip even if
      bzip2 is available.


  --help
      Print a brief usage message, then exit.


  --print-inputs
      Instead of creating a bundle, display a list of the files and directories
      that the program would include if it generated a bundle.



File Format

The bundle file is simply a tar(1) file compressed with bzip2(1) or gzip(1),
with each of the input directory trees rooted at ``.''.


See Also

aptitude-run-state-bundle(1), aptitude(8), apt(8)

--------------------------------------------------------------------------------

Name

aptitude-run-state-bundle -- unpack an aptitude state bundle and invoke aptitude
on it


Synopsis

aptitude-run-state-bundle [options...] input-file [ program [arguments...]]


Description

aptitude-run-state-bundle unpacks the given aptitude state bundle created by
aptitude-create-state-bundle(1) to a temporary directory, invokes program on it
with the supplied arguments, and removes the temporary directory afterwards. If
program is not supplied, it defaults to aptitude(8).


Options

The following options may occur on the command-line before the input file.
Options following the input file are presumed to be arguments to aptitude.



  --append-args
      Place the options that give the location of the state bundle at the end of
      the command line when invoking program, rather than at the beginning (the
      default is to place options at the beginning).


  --help
      Display a brief usage summary.


  --prepend-args
      Place the options that give the location of the state bundle at the
      beginning of the command line when invoking program, overriding any
      previous --append-args (the default is to place options at the beginning).


  --no-clean
      Do not remove the unpacked state directory after running aptitude. You
      might want to use this if, for instance, you are debugging a problem that
      appears when aptitude's state file is modified. When aptitude finishes
      running, the name of the state directory will be printed so that you can
      access it in the future.

      This option is enabled automatically by --statedir.


  --really-clean
      Delete the state directory after running aptitude, even if --no-clean or -
      -statedir was supplied.


  --statedir
      Instead of treating the input file as a state bundle, treat it as an
      unpacked state bundle. For instance, you can use this to access the state
      directory that was created by a prior run with --no-clean.


  --unpack
      Unpack the input file to a temporary directory, but don't actually run
      aptitude.



See Also

aptitude-create-state-bundle(1), aptitude(8), apt(8)

